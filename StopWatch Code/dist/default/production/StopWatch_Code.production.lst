

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Apr 05 21:05:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4620 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	idataCOMRAM
    72   000B26                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _port_regs
    76   000B26  80                 	db	128
    77   000B27  0F                 	db	15
    78   000B28  81                 	db	129
    79   000B29  0F                 	db	15
    80   000B2A  82                 	db	130
    81   000B2B  0F                 	db	15
    82   000B2C  83                 	db	131
    83   000B2D  0F                 	db	15
    84   000B2E  84                 	db	132
    85   000B2F  0F                 	db	15
    86                           
    87                           ;initializer for _lat_regs
    88   000B30  89                 	db	137
    89   000B31  0F                 	db	15
    90   000B32  8A                 	db	138
    91   000B33  0F                 	db	15
    92   000B34  8B                 	db	139
    93   000B35  0F                 	db	15
    94   000B36  8C                 	db	140
    95   000B37  0F                 	db	15
    96   000B38  8D                 	db	141
    97   000B39  0F                 	db	15
    98                           
    99                           ;initializer for _tris_regs
   100   000B3A  92                 	db	146
   101   000B3B  0F                 	db	15
   102   000B3C  93                 	db	147
   103   000B3D  0F                 	db	15
   104   000B3E  94                 	db	148
   105   000B3F  0F                 	db	15
   106   000B40  95                 	db	149
   107   000B41  0F                 	db	15
   108   000B42  96                 	db	150
   109   000B43  0F                 	db	15
   110                           
   111                           ;initializer for _int1_obj
   112   000B44  AE                 	db	low _ContinuePause_ISR
   113   000B45  0B                 	db	high _ContinuePause_ISR
   114   000B46  49                 	db	73
   115   000B47  01                 	db	1
   116   000B48  00                 	db	0
   117                           
   118                           ;initializer for _int0_obj
   119   000B49  CC                 	db	low _StopWatchReset_ISR
   120   000B4A  0B                 	db	high _StopWatchReset_ISR
   121   000B4B  41                 	db	65
   122   000B4C  01                 	db	1
   123   000B4D  00                 	db	0
   124   000000                     _INTCON2bits	set	4081
   125   000000                     _PORTE	set	3972
   126   000000                     _PORTD	set	3971
   127   000000                     _PORTC	set	3970
   128   000000                     _PORTB	set	3969
   129   000000                     _PORTA	set	3968
   130   000000                     _LATA	set	3977
   131   000000                     _TRISA	set	3986
   132   000000                     _INTCON3bits	set	4080
   133   000000                     _INTCONbits	set	4082
   134   000000                     _TRISE	set	3990
   135   000000                     _TRISD	set	3989
   136   000000                     _TRISC	set	3988
   137   000000                     _TRISB	set	3987
   138   000000                     _LATE	set	3981
   139   000000                     _LATD	set	3980
   140   000000                     _LATC	set	3979
   141   000000                     _LATB	set	3978
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   000A8C                     __pcinit:
   147                           	callstack 0
   148   000A8C                     start_initialization:
   149                           	callstack 0
   150   000A8C                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (40 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155   000A8C  0E26               	movlw	low __pidataCOMRAM
   156   000A8E  6EF6               	movwf	tblptrl,c
   157   000A90  0E0B               	movlw	high __pidataCOMRAM
   158   000A92  6EF7               	movwf	tblptrh,c
   159   000A94  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160   000A96  6EF8               	movwf	tblptru,c
   161   000A98  EE00  F001         	lfsr	0,__pdataCOMRAM
   162   000A9C  EE10 F028          	lfsr	1,40
   163   000AA0                     copy_data0:
   164   000AA0  0009               	tblrd		*+
   165   000AA2  CFF5 FFEE          	movff	tablat,postinc0
   166   000AA6  50E5               	movf	postdec1,w,c
   167   000AA8  50E1               	movf	fsr1l,w,c
   168   000AAA  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to COMRAM (28 bytes)
   171   000AAC  EE00  F029         	lfsr	0,__pbssCOMRAM
   172   000AB0  0E1C               	movlw	28
   173   000AB2                     clear_0:
   174   000AB2  6AEE               	clrf	postinc0,c
   175   000AB4  06E8               	decf	wreg,f,c
   176   000AB6  E1FD               	bnz	clear_0
   177   000AB8                     end_of_initialization:
   178                           	callstack 0
   179   000AB8                     __end_of__initialization:
   180                           	callstack 0
   181   000AB8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   182   000ABA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   183   000ABC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184   000ABE  6EF8               	movwf	tblptru,c
   185   000AC0  0100               	movlb	0
   186   000AC2  EF09  F000         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189   000029                     __pbssCOMRAM:
   190                           	callstack 0
   191   000029                     _RB7_InterruptHandlerLow:
   192                           	callstack 0
   193   000029                     	ds	2
   194   00002B                     _RB7_InterruptHandlerHigh:
   195                           	callstack 0
   196   00002B                     	ds	2
   197   00002D                     _RB6_InterruptHandlerLow:
   198                           	callstack 0
   199   00002D                     	ds	2
   200   00002F                     _RB6_InterruptHandlerHigh:
   201                           	callstack 0
   202   00002F                     	ds	2
   203   000031                     _RB5_InterruptHandlerLow:
   204                           	callstack 0
   205   000031                     	ds	2
   206   000033                     _RB5_InterruptHandlerHigh:
   207                           	callstack 0
   208   000033                     	ds	2
   209   000035                     _RB4_InterruptHandlerLow:
   210                           	callstack 0
   211   000035                     	ds	2
   212   000037                     _RB4_InterruptHandlerHigh:
   213                           	callstack 0
   214   000037                     	ds	2
   215   000039                     _INT2_InterruptHandler:
   216                           	callstack 0
   217   000039                     	ds	2
   218   00003B                     _INT1_InterruptHandler:
   219                           	callstack 0
   220   00003B                     	ds	2
   221   00003D                     _INT0_InterruptHandler:
   222                           	callstack 0
   223   00003D                     	ds	2
   224   00003F                     _watchFlag:
   225                           	callstack 0
   226   00003F                     	ds	1
   227   000040                     _counter:
   228                           	callstack 0
   229   000040                     	ds	1
   230   000041                     _minutes:
   231                           	callstack 0
   232   000041                     	ds	1
   233   000042                     _seconds:
   234                           	callstack 0
   235   000042                     	ds	1
   236   000043                     _miniSeconds:
   237                           	callstack 0
   238   000043                     	ds	1
   239   000044                     _ret:
   240                           	callstack 0
   241   000044                     	ds	1
   242                           
   243                           	psect	dataCOMRAM
   244   000001                     __pdataCOMRAM:
   245                           	callstack 0
   246   000001                     _port_regs:
   247                           	callstack 0
   248   000001                     	ds	10
   249   00000B                     _lat_regs:
   250                           	callstack 0
   251   00000B                     	ds	10
   252   000015                     _tris_regs:
   253                           	callstack 0
   254   000015                     	ds	10
   255   00001F                     _int1_obj:
   256                           	callstack 0
   257   00001F                     	ds	5
   258   000024                     _int0_obj:
   259                           	callstack 0
   260   000024                     	ds	5
   261                           
   262                           	psect	cstackCOMRAM
   263   000045                     __pcstackCOMRAM:
   264                           	callstack 0
   265   000045                     ??_InterruptManager:
   266   000045                     
   267                           ; 2 bytes @ 0x0
   268   000045                     	ds	2
   269   000047                     ?___awdiv:
   270                           	callstack 0
   271   000047                     ?___awmod:
   272                           	callstack 0
   273   000047                     gpio_port_init@dir:
   274                           	callstack 0
   275   000047                     gpio_pin_write_logic@_pin_config:
   276                           	callstack 0
   277   000047                     Edge_Config@object:
   278                           	callstack 0
   279   000047                     INT0_SetInterruptHandler@InterruptHandler:
   280                           	callstack 0
   281   000047                     INT1_SetInterruptHandler@InterruptHandler:
   282                           	callstack 0
   283   000047                     INT2_SetInterruptHandler@InterruptHandler:
   284                           	callstack 0
   285   000047                     ___awdiv@dividend:
   286                           	callstack 0
   287   000047                     ___awmod@dividend:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x2
   291   000047                     	ds	1
   292   000048                     ??_gpio_port_init:
   293                           
   294                           ; 1 bytes @ 0x3
   295   000048                     	ds	1
   296   000049                     ??_Edge_Config:
   297   000049                     gpio_pin_write_logic@logic:
   298                           	callstack 0
   299   000049                     ___awdiv@divisor:
   300                           	callstack 0
   301   000049                     ___awmod@divisor:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x4
   305   000049                     	ds	1
   306   00004A                     ??_gpio_pin_write_logic:
   307   00004A                     gpio_port_init@ret_value:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x5
   311   00004A                     	ds	1
   312   00004B                     gpio_port_init@port:
   313                           	callstack 0
   314   00004B                     ___awdiv@counter:
   315                           	callstack 0
   316   00004B                     ___awmod@counter:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x6
   320   00004B                     	ds	1
   321   00004C                     ___awdiv@sign:
   322                           	callstack 0
   323   00004C                     ___awmod@sign:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x7
   327   00004C                     	ds	1
   328   00004D                     ___awdiv@quotient:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x8
   332   00004D                     	ds	2
   333   00004F                     gpio_port_write_logic@logic:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xA
   337   00004F                     	ds	1
   338   000050                     ??_gpio_port_write_logic:
   339   000050                     gpio_pin_write_logic@ret_value:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0xB
   343   000050                     	ds	1
   344   000051                     gpio_pin_init@_pin_config:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0xC
   348   000051                     	ds	1
   349   000052                     gpio_port_write_logic@port:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0xD
   353   000052                     	ds	1
   354   000053                     ??_gpio_pin_init:
   355                           
   356                           ; 1 bytes @ 0xE
   357   000053                     	ds	6
   358   000059                     gpio_pin_init@ret_value:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x14
   362   000059                     	ds	1
   363   00005A                     Interrupt_INTx_Enable@object:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x15
   367   00005A                     	ds	2
   368   00005C                     ??_Interrupt_INTx_Enable:
   369                           
   370                           ; 1 bytes @ 0x17
   371   00005C                     	ds	2
   372   00005E                     ??_main:
   373                           
   374                           ; 1 bytes @ 0x19
   375   00005E                     	ds	1
   376                           
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 59 in file "appliction.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  2  380[None  ] int 
   389 ;; Registers used:
   390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;Total ram usage:        1 bytes
   401 ;; Hardware stack levels required when called: 6
   402 ;; This function calls:
   403 ;;		_Interrupt_INTx_Enable
   404 ;;		___awdiv
   405 ;;		___awmod
   406 ;;		_gpio_port_init
   407 ;;		_gpio_port_write_logic
   408 ;; This function is called by:
   409 ;;		Startup code after reset
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text0
   414   000012                     __ptext0:
   415                           	callstack 0
   416   000012                     _main:
   417                           	callstack 25
   418   000012                     
   419                           ;appliction.c: 60:     Interrupt_INTx_Enable(&int0_obj);
   420   000012  0E24               	movlw	low _int0_obj
   421   000014  6E5A               	movwf	Interrupt_INTx_Enable@object^0,c
   422   000016  0E00               	movlw	high _int0_obj
   423   000018  6E5B               	movwf	(Interrupt_INTx_Enable@object+1)^0,c
   424   00001A  ECA3  F003         	call	_Interrupt_INTx_Enable	;wreg free
   425                           
   426                           ;appliction.c: 61:     Interrupt_INTx_Enable(&int1_obj);
   427   00001E  0E1F               	movlw	low _int1_obj
   428   000020  6E5A               	movwf	Interrupt_INTx_Enable@object^0,c
   429   000022  0E00               	movlw	high _int1_obj
   430   000024  6E5B               	movwf	(Interrupt_INTx_Enable@object+1)^0,c
   431   000026  ECA3  F003         	call	_Interrupt_INTx_Enable	;wreg free
   432                           
   433                           ;appliction.c: 63:     ret=gpio_port_init(PORTC_INDEX,0xF0);
   434   00002A  0EF0               	movlw	240
   435   00002C  6E47               	movwf	gpio_port_init@dir^0,c
   436   00002E  0E02               	movlw	2
   437   000030  EC05  F005         	call	_gpio_port_init
   438   000034  6E44               	movwf	_ret^0,c
   439                           
   440                           ;appliction.c: 64:     ret=gpio_port_init(PORTD_INDEX,0x00);
   441   000036  0E00               	movlw	0
   442   000038  6E47               	movwf	gpio_port_init@dir^0,c
   443   00003A  0E03               	movlw	3
   444   00003C  EC05  F005         	call	_gpio_port_init
   445   000040  6E44               	movwf	_ret^0,c
   446   000042                     l2101:
   447                           
   448                           ;appliction.c: 67:         if(1==watchFlag)
   449   000042  043F               	decf	_watchFlag^0,w,c
   450   000044  A4D8               	btfss	status,2,c
   451   000046  EF27  F000         	goto	u1381
   452   00004A  EF29  F000         	goto	u1380
   453   00004E                     u1381:
   454   00004E  EFD5  F000         	goto	l2133
   455   000052                     u1380:
   456   000052  EFCD  F000         	goto	l2131
   457   000056                     l2105:
   458                           
   459                           ;appliction.c: 70:             {;appliction.c: 71:             gpio_port_write_logic(POR
      +                          TD_INDEX,0x3B);
   460   000056  0E3B               	movlw	59
   461   000058  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   462   00005A  0E03               	movlw	3
   463   00005C  EC28  F005         	call	_gpio_port_write_logic
   464                           
   465                           ;appliction.c: 72:             gpio_port_write_logic(PORTC_INDEX,((uint8)seconds/10));
   466   000060  C042  F047         	movff	_seconds,___awdiv@dividend
   467   000064  6A48               	clrf	(___awdiv@dividend+1)^0,c
   468   000066  0E00               	movlw	0
   469   000068  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   470   00006A  0E0A               	movlw	10
   471   00006C  6E49               	movwf	___awdiv@divisor^0,c
   472   00006E  EC20  F004         	call	___awdiv	;wreg free
   473   000072  5047               	movf	?___awdiv^0,w,c
   474   000074  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   475   000076  0E02               	movlw	2
   476   000078  EC28  F005         	call	_gpio_port_write_logic
   477   00007C                     
   478                           ;appliction.c: 73:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   479   00007C  0E07               	movlw	7
   480   00007E  6E5E               	movwf	??_main^0,c
   481   000080  0E7D               	movlw	125
   482   000082                     u1447:
   483   000082  2EE8               	decfsz	wreg,f,c
   484   000084  D7FE               	bra	u1447
   485   000086  2E5E               	decfsz	??_main^0,f,c
   486   000088  D7FC               	bra	u1447
   487   00008A  F000               	nop	
   488   00008C                     
   489                           ;appliction.c: 74:             gpio_port_write_logic(PORTD_INDEX,0x37);
   490   00008C  0E37               	movlw	55
   491   00008E  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   492   000090  0E03               	movlw	3
   493   000092  EC28  F005         	call	_gpio_port_write_logic
   494   000096                     
   495                           ;appliction.c: 75:             gpio_port_write_logic(PORTC_INDEX,((uint8)seconds%10));
   496   000096  C042  F047         	movff	_seconds,___awmod@dividend
   497   00009A  6A48               	clrf	(___awmod@dividend+1)^0,c
   498   00009C  0E00               	movlw	0
   499   00009E  6E4A               	movwf	(___awmod@divisor+1)^0,c
   500   0000A0  0E0A               	movlw	10
   501   0000A2  6E49               	movwf	___awmod@divisor^0,c
   502   0000A4  EC82  F004         	call	___awmod	;wreg free
   503   0000A8  5047               	movf	?___awmod^0,w,c
   504   0000AA  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   505   0000AC  0E02               	movlw	2
   506   0000AE  EC28  F005         	call	_gpio_port_write_logic
   507   0000B2                     
   508                           ;appliction.c: 76:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   509   0000B2  0E07               	movlw	7
   510   0000B4  6E5E               	movwf	??_main^0,c
   511   0000B6  0E7D               	movlw	125
   512   0000B8                     u1457:
   513   0000B8  2EE8               	decfsz	wreg,f,c
   514   0000BA  D7FE               	bra	u1457
   515   0000BC  2E5E               	decfsz	??_main^0,f,c
   516   0000BE  D7FC               	bra	u1457
   517   0000C0  F000               	nop	
   518                           
   519                           ;appliction.c: 78:             gpio_port_write_logic(PORTD_INDEX,0x2F);
   520   0000C2  0E2F               	movlw	47
   521   0000C4  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   522   0000C6  0E03               	movlw	3
   523   0000C8  EC28  F005         	call	_gpio_port_write_logic
   524                           
   525                           ;appliction.c: 79:             gpio_port_write_logic(PORTC_INDEX,((uint8)miniSeconds/10)
      +                          );
   526   0000CC  C043  F047         	movff	_miniSeconds,___awdiv@dividend
   527   0000D0  6A48               	clrf	(___awdiv@dividend+1)^0,c
   528   0000D2  0E00               	movlw	0
   529   0000D4  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   530   0000D6  0E0A               	movlw	10
   531   0000D8  6E49               	movwf	___awdiv@divisor^0,c
   532   0000DA  EC20  F004         	call	___awdiv	;wreg free
   533   0000DE  5047               	movf	?___awdiv^0,w,c
   534   0000E0  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   535   0000E2  0E02               	movlw	2
   536   0000E4  EC28  F005         	call	_gpio_port_write_logic
   537   0000E8                     
   538                           ;appliction.c: 80:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   539   0000E8  0E07               	movlw	7
   540   0000EA  6E5E               	movwf	??_main^0,c
   541   0000EC  0E7D               	movlw	125
   542   0000EE                     u1467:
   543   0000EE  2EE8               	decfsz	wreg,f,c
   544   0000F0  D7FE               	bra	u1467
   545   0000F2  2E5E               	decfsz	??_main^0,f,c
   546   0000F4  D7FC               	bra	u1467
   547   0000F6  F000               	nop	
   548   0000F8                     
   549                           ;appliction.c: 81:             gpio_port_write_logic(PORTD_INDEX,0x1F);
   550   0000F8  0E1F               	movlw	31
   551   0000FA  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   552   0000FC  0E03               	movlw	3
   553   0000FE  EC28  F005         	call	_gpio_port_write_logic
   554   000102                     
   555                           ;appliction.c: 82:             gpio_port_write_logic(PORTC_INDEX,((uint8)miniSeconds%10)
      +                          );
   556   000102  C043  F047         	movff	_miniSeconds,___awmod@dividend
   557   000106  6A48               	clrf	(___awmod@dividend+1)^0,c
   558   000108  0E00               	movlw	0
   559   00010A  6E4A               	movwf	(___awmod@divisor+1)^0,c
   560   00010C  0E0A               	movlw	10
   561   00010E  6E49               	movwf	___awmod@divisor^0,c
   562   000110  EC82  F004         	call	___awmod	;wreg free
   563   000114  5047               	movf	?___awmod^0,w,c
   564   000116  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   565   000118  0E02               	movlw	2
   566   00011A  EC28  F005         	call	_gpio_port_write_logic
   567   00011E                     
   568                           ;appliction.c: 83:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   569   00011E  0E07               	movlw	7
   570   000120  6E5E               	movwf	??_main^0,c
   571   000122  0E7D               	movlw	125
   572   000124                     u1477:
   573   000124  2EE8               	decfsz	wreg,f,c
   574   000126  D7FE               	bra	u1477
   575   000128  2E5E               	decfsz	??_main^0,f,c
   576   00012A  D7FC               	bra	u1477
   577   00012C  F000               	nop	
   578                           
   579                           ;appliction.c: 85:             gpio_port_write_logic(PORTD_INDEX,0x3E);
   580   00012E  0E3E               	movlw	62
   581   000130  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   582   000132  0E03               	movlw	3
   583   000134  EC28  F005         	call	_gpio_port_write_logic
   584                           
   585                           ;appliction.c: 86:             gpio_port_write_logic(PORTC_INDEX,((uint8)minutes/10));
   586   000138  C041  F047         	movff	_minutes,___awdiv@dividend
   587   00013C  6A48               	clrf	(___awdiv@dividend+1)^0,c
   588   00013E  0E00               	movlw	0
   589   000140  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   590   000142  0E0A               	movlw	10
   591   000144  6E49               	movwf	___awdiv@divisor^0,c
   592   000146  EC20  F004         	call	___awdiv	;wreg free
   593   00014A  5047               	movf	?___awdiv^0,w,c
   594   00014C  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   595   00014E  0E02               	movlw	2
   596   000150  EC28  F005         	call	_gpio_port_write_logic
   597   000154                     
   598                           ;appliction.c: 87:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   599   000154  0E07               	movlw	7
   600   000156  6E5E               	movwf	??_main^0,c
   601   000158  0E7D               	movlw	125
   602   00015A                     u1487:
   603   00015A  2EE8               	decfsz	wreg,f,c
   604   00015C  D7FE               	bra	u1487
   605   00015E  2E5E               	decfsz	??_main^0,f,c
   606   000160  D7FC               	bra	u1487
   607   000162  F000               	nop	
   608   000164                     
   609                           ;appliction.c: 88:             gpio_port_write_logic(PORTD_INDEX,0x3D);
   610   000164  0E3D               	movlw	61
   611   000166  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   612   000168  0E03               	movlw	3
   613   00016A  EC28  F005         	call	_gpio_port_write_logic
   614   00016E                     
   615                           ;appliction.c: 89:             gpio_port_write_logic(PORTC_INDEX,((uint8)minutes%10));
   616   00016E  C041  F047         	movff	_minutes,___awmod@dividend
   617   000172  6A48               	clrf	(___awmod@dividend+1)^0,c
   618   000174  0E00               	movlw	0
   619   000176  6E4A               	movwf	(___awmod@divisor+1)^0,c
   620   000178  0E0A               	movlw	10
   621   00017A  6E49               	movwf	___awmod@divisor^0,c
   622   00017C  EC82  F004         	call	___awmod	;wreg free
   623   000180  5047               	movf	?___awmod^0,w,c
   624   000182  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   625   000184  0E02               	movlw	2
   626   000186  EC28  F005         	call	_gpio_port_write_logic
   627   00018A                     
   628                           ;appliction.c: 90:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   629   00018A  0E07               	movlw	7
   630   00018C  6E5E               	movwf	??_main^0,c
   631   00018E  0E7D               	movlw	125
   632   000190                     u1497:
   633   000190  2EE8               	decfsz	wreg,f,c
   634   000192  D7FE               	bra	u1497
   635   000194  2E5E               	decfsz	??_main^0,f,c
   636   000196  D7FC               	bra	u1497
   637   000198  F000               	nop	
   638   00019A                     l2131:
   639                           
   640                           ;appliction.c: 69:             while(watchFlag)
   641   00019A  503F               	movf	_watchFlag^0,w,c
   642   00019C  A4D8               	btfss	status,2,c
   643   00019E  EFD3  F000         	goto	u1391
   644   0001A2  EFD5  F000         	goto	u1390
   645   0001A6                     u1391:
   646   0001A6  EF2B  F000         	goto	l2105
   647   0001AA                     u1390:
   648   0001AA                     l2133:
   649                           
   650                           ;appliction.c: 94:         if(0==watchFlag){
   651   0001AA  503F               	movf	_watchFlag^0,w,c
   652   0001AC  A4D8               	btfss	status,2,c
   653   0001AE  EFDB  F000         	goto	u1401
   654   0001B2  EFDD  F000         	goto	u1400
   655   0001B6                     u1401:
   656   0001B6  EF21  F000         	goto	l2101
   657   0001BA                     u1400:
   658   0001BA                     
   659                           ;appliction.c: 95:             for(counter=0;counter<2;counter++){
   660   0001BA  0E00               	movlw	0
   661   0001BC  6E40               	movwf	_counter^0,c
   662   0001BE                     l2137:
   663   0001BE  0E01               	movlw	1
   664   0001C0  6440               	cpfsgt	_counter^0,c
   665   0001C2  EFE5  F000         	goto	u1411
   666   0001C6  EFE7  F000         	goto	u1410
   667   0001CA                     u1411:
   668   0001CA  EFE9  F000         	goto	l2141
   669   0001CE                     u1410:
   670   0001CE  EF8E  F001         	goto	l2171
   671   0001D2                     l2141:
   672                           
   673                           ;appliction.c: 96:             gpio_port_write_logic(PORTD_INDEX,0x3B);
   674   0001D2  0E3B               	movlw	59
   675   0001D4  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   676   0001D6  0E03               	movlw	3
   677   0001D8  EC28  F005         	call	_gpio_port_write_logic
   678                           
   679                           ;appliction.c: 97:             gpio_port_write_logic(PORTC_INDEX,((uint8)seconds/10));
   680   0001DC  C042  F047         	movff	_seconds,___awdiv@dividend
   681   0001E0  6A48               	clrf	(___awdiv@dividend+1)^0,c
   682   0001E2  0E00               	movlw	0
   683   0001E4  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   684   0001E6  0E0A               	movlw	10
   685   0001E8  6E49               	movwf	___awdiv@divisor^0,c
   686   0001EA  EC20  F004         	call	___awdiv	;wreg free
   687   0001EE  5047               	movf	?___awdiv^0,w,c
   688   0001F0  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   689   0001F2  0E02               	movlw	2
   690   0001F4  EC28  F005         	call	_gpio_port_write_logic
   691   0001F8                     
   692                           ;appliction.c: 98:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   693   0001F8  0E07               	movlw	7
   694   0001FA  6E5E               	movwf	??_main^0,c
   695   0001FC  0E7D               	movlw	125
   696   0001FE                     u1507:
   697   0001FE  2EE8               	decfsz	wreg,f,c
   698   000200  D7FE               	bra	u1507
   699   000202  2E5E               	decfsz	??_main^0,f,c
   700   000204  D7FC               	bra	u1507
   701   000206  F000               	nop	
   702   000208                     
   703                           ;appliction.c: 99:             gpio_port_write_logic(PORTD_INDEX,0x37);
   704   000208  0E37               	movlw	55
   705   00020A  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   706   00020C  0E03               	movlw	3
   707   00020E  EC28  F005         	call	_gpio_port_write_logic
   708   000212                     
   709                           ;appliction.c: 100:             gpio_port_write_logic(PORTC_INDEX,((uint8)seconds%10));
   710   000212  C042  F047         	movff	_seconds,___awmod@dividend
   711   000216  6A48               	clrf	(___awmod@dividend+1)^0,c
   712   000218  0E00               	movlw	0
   713   00021A  6E4A               	movwf	(___awmod@divisor+1)^0,c
   714   00021C  0E0A               	movlw	10
   715   00021E  6E49               	movwf	___awmod@divisor^0,c
   716   000220  EC82  F004         	call	___awmod	;wreg free
   717   000224  5047               	movf	?___awmod^0,w,c
   718   000226  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   719   000228  0E02               	movlw	2
   720   00022A  EC28  F005         	call	_gpio_port_write_logic
   721   00022E                     
   722                           ;appliction.c: 101:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   723   00022E  0E07               	movlw	7
   724   000230  6E5E               	movwf	??_main^0,c
   725   000232  0E7D               	movlw	125
   726   000234                     u1517:
   727   000234  2EE8               	decfsz	wreg,f,c
   728   000236  D7FE               	bra	u1517
   729   000238  2E5E               	decfsz	??_main^0,f,c
   730   00023A  D7FC               	bra	u1517
   731   00023C  F000               	nop	
   732                           
   733                           ;appliction.c: 103:             gpio_port_write_logic(PORTD_INDEX,0x2F);
   734   00023E  0E2F               	movlw	47
   735   000240  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   736   000242  0E03               	movlw	3
   737   000244  EC28  F005         	call	_gpio_port_write_logic
   738                           
   739                           ;appliction.c: 104:             gpio_port_write_logic(PORTC_INDEX,((uint8)miniSeconds/10
      +                          ));
   740   000248  C043  F047         	movff	_miniSeconds,___awdiv@dividend
   741   00024C  6A48               	clrf	(___awdiv@dividend+1)^0,c
   742   00024E  0E00               	movlw	0
   743   000250  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   744   000252  0E0A               	movlw	10
   745   000254  6E49               	movwf	___awdiv@divisor^0,c
   746   000256  EC20  F004         	call	___awdiv	;wreg free
   747   00025A  5047               	movf	?___awdiv^0,w,c
   748   00025C  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   749   00025E  0E02               	movlw	2
   750   000260  EC28  F005         	call	_gpio_port_write_logic
   751   000264                     
   752                           ;appliction.c: 105:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   753   000264  0E07               	movlw	7
   754   000266  6E5E               	movwf	??_main^0,c
   755   000268  0E7D               	movlw	125
   756   00026A                     u1527:
   757   00026A  2EE8               	decfsz	wreg,f,c
   758   00026C  D7FE               	bra	u1527
   759   00026E  2E5E               	decfsz	??_main^0,f,c
   760   000270  D7FC               	bra	u1527
   761   000272  F000               	nop	
   762   000274                     
   763                           ;appliction.c: 106:             gpio_port_write_logic(PORTD_INDEX,0x1F);
   764   000274  0E1F               	movlw	31
   765   000276  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   766   000278  0E03               	movlw	3
   767   00027A  EC28  F005         	call	_gpio_port_write_logic
   768   00027E                     
   769                           ;appliction.c: 107:             gpio_port_write_logic(PORTC_INDEX,((uint8)miniSeconds%10
      +                          ));
   770   00027E  C043  F047         	movff	_miniSeconds,___awmod@dividend
   771   000282  6A48               	clrf	(___awmod@dividend+1)^0,c
   772   000284  0E00               	movlw	0
   773   000286  6E4A               	movwf	(___awmod@divisor+1)^0,c
   774   000288  0E0A               	movlw	10
   775   00028A  6E49               	movwf	___awmod@divisor^0,c
   776   00028C  EC82  F004         	call	___awmod	;wreg free
   777   000290  5047               	movf	?___awmod^0,w,c
   778   000292  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   779   000294  0E02               	movlw	2
   780   000296  EC28  F005         	call	_gpio_port_write_logic
   781   00029A                     
   782                           ;appliction.c: 108:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   783   00029A  0E07               	movlw	7
   784   00029C  6E5E               	movwf	??_main^0,c
   785   00029E  0E7D               	movlw	125
   786   0002A0                     u1537:
   787   0002A0  2EE8               	decfsz	wreg,f,c
   788   0002A2  D7FE               	bra	u1537
   789   0002A4  2E5E               	decfsz	??_main^0,f,c
   790   0002A6  D7FC               	bra	u1537
   791   0002A8  F000               	nop	
   792                           
   793                           ;appliction.c: 110:             gpio_port_write_logic(PORTD_INDEX,0x3E);
   794   0002AA  0E3E               	movlw	62
   795   0002AC  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   796   0002AE  0E03               	movlw	3
   797   0002B0  EC28  F005         	call	_gpio_port_write_logic
   798                           
   799                           ;appliction.c: 111:             gpio_port_write_logic(PORTC_INDEX,((uint8)minutes/10));
   800   0002B4  C041  F047         	movff	_minutes,___awdiv@dividend
   801   0002B8  6A48               	clrf	(___awdiv@dividend+1)^0,c
   802   0002BA  0E00               	movlw	0
   803   0002BC  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   804   0002BE  0E0A               	movlw	10
   805   0002C0  6E49               	movwf	___awdiv@divisor^0,c
   806   0002C2  EC20  F004         	call	___awdiv	;wreg free
   807   0002C6  5047               	movf	?___awdiv^0,w,c
   808   0002C8  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   809   0002CA  0E02               	movlw	2
   810   0002CC  EC28  F005         	call	_gpio_port_write_logic
   811   0002D0                     
   812                           ;appliction.c: 112:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   813   0002D0  0E07               	movlw	7
   814   0002D2  6E5E               	movwf	??_main^0,c
   815   0002D4  0E7D               	movlw	125
   816   0002D6                     u1547:
   817   0002D6  2EE8               	decfsz	wreg,f,c
   818   0002D8  D7FE               	bra	u1547
   819   0002DA  2E5E               	decfsz	??_main^0,f,c
   820   0002DC  D7FC               	bra	u1547
   821   0002DE  F000               	nop	
   822   0002E0                     
   823                           ;appliction.c: 113:             gpio_port_write_logic(PORTD_INDEX,0x3D);
   824   0002E0  0E3D               	movlw	61
   825   0002E2  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   826   0002E4  0E03               	movlw	3
   827   0002E6  EC28  F005         	call	_gpio_port_write_logic
   828   0002EA                     
   829                           ;appliction.c: 114:             gpio_port_write_logic(PORTC_INDEX,((uint8)minutes%10));
   830   0002EA  C041  F047         	movff	_minutes,___awmod@dividend
   831   0002EE  6A48               	clrf	(___awmod@dividend+1)^0,c
   832   0002F0  0E00               	movlw	0
   833   0002F2  6E4A               	movwf	(___awmod@divisor+1)^0,c
   834   0002F4  0E0A               	movlw	10
   835   0002F6  6E49               	movwf	___awmod@divisor^0,c
   836   0002F8  EC82  F004         	call	___awmod	;wreg free
   837   0002FC  5047               	movf	?___awmod^0,w,c
   838   0002FE  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   839   000300  0E02               	movlw	2
   840   000302  EC28  F005         	call	_gpio_port_write_logic
   841   000306                     
   842                           ;appliction.c: 115:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   843   000306  0E07               	movlw	7
   844   000308  6E5E               	movwf	??_main^0,c
   845   00030A  0E7D               	movlw	125
   846   00030C                     u1557:
   847   00030C  2EE8               	decfsz	wreg,f,c
   848   00030E  D7FE               	bra	u1557
   849   000310  2E5E               	decfsz	??_main^0,f,c
   850   000312  D7FC               	bra	u1557
   851   000314  F000               	nop	
   852   000316                     
   853                           ;appliction.c: 116:             }
   854   000316  2A40               	incf	_counter^0,f,c
   855   000318  EFDF  F000         	goto	l2137
   856   00031C                     l2171:
   857                           
   858                           ;appliction.c: 118:             miniSeconds++;
   859   00031C  2A43               	incf	_miniSeconds^0,f,c
   860   00031E                     
   861                           ;appliction.c: 119:             if(90 == miniSeconds)
   862   00031E  0E5A               	movlw	90
   863   000320  1843               	xorwf	_miniSeconds^0,w,c
   864   000322  A4D8               	btfss	status,2,c
   865   000324  EF96  F001         	goto	u1421
   866   000328  EF98  F001         	goto	u1420
   867   00032C                     u1421:
   868   00032C  EF9B  F001         	goto	l2179
   869   000330                     u1420:
   870   000330                     
   871                           ;appliction.c: 120:             {;appliction.c: 121:                 seconds++;
   872   000330  2A42               	incf	_seconds^0,f,c
   873   000332                     
   874                           ;appliction.c: 122:                 miniSeconds= 0;
   875   000332  0E00               	movlw	0
   876   000334  6E43               	movwf	_miniSeconds^0,c
   877   000336                     l2179:
   878                           
   879                           ;appliction.c: 125:             if(60 == minutes)
   880   000336  0E3C               	movlw	60
   881   000338  1841               	xorwf	_minutes^0,w,c
   882   00033A  A4D8               	btfss	status,2,c
   883   00033C  EFA2  F001         	goto	u1431
   884   000340  EFA4  F001         	goto	u1430
   885   000344                     u1431:
   886   000344  EF21  F000         	goto	l2101
   887   000348                     u1430:
   888   000348                     
   889                           ;appliction.c: 126:             {;appliction.c: 127:                 minutes=0;
   890   000348  0E00               	movlw	0
   891   00034A  6E41               	movwf	_minutes^0,c
   892   00034C  EF21  F000         	goto	l2101
   893   000350  EF07  F000         	goto	start
   894   000354                     __end_of_main:
   895                           	callstack 0
   896                           
   897 ;; *************** function _gpio_port_write_logic *****************
   898 ;; Defined at:
   899 ;;		line 183 in file "MCAL_Layer/GPIO_Module/hal_gpio.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  port            1    wreg     enum E2983
   902 ;;  logic           1   10[COMRAM] unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  port            1   13[COMRAM] enum E2983
   905 ;;  ret_value       1    0        unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      unsigned char 
   908 ;; Registers used:
   909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   915 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;Total ram usage:        4 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 3
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text1
   930   000A50                     __ptext1:
   931                           	callstack 0
   932   000A50                     _gpio_port_write_logic:
   933                           	callstack 27
   934                           
   935                           ;incstack = 0
   936                           ;gpio_port_write_logic@port stored from wreg
   937   000A50  6E52               	movwf	gpio_port_write_logic@port^0,c
   938   000A52                     
   939                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 187:     if(port > 5 -1)
   940   000A52  0E04               	movlw	4
   941   000A54  6452               	cpfsgt	gpio_port_write_logic@port^0,c
   942   000A56  EF2F  F005         	goto	u1191
   943   000A5A  EF31  F005         	goto	u1190
   944   000A5E                     u1191:
   945   000A5E  EF33  F005         	goto	l1897
   946   000A62                     u1190:
   947   000A62                     
   948                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 190:     }
   949   000A62  EF45  F005         	goto	l152
   950   000A66                     l1897:
   951                           
   952                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 192:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 193:  
      +                                 *lat_regs[port] = logic ;
   953   000A66  5052               	movf	gpio_port_write_logic@port^0,w,c
   954   000A68  0D02               	mullw	2
   955   000A6A  0E0B               	movlw	low _lat_regs
   956   000A6C  24F3               	addwf	243,w,c
   957   000A6E  6ED9               	movwf	fsr2l,c
   958   000A70  0E00               	movlw	high _lat_regs
   959   000A72  20F4               	addwfc	prodh,w,c
   960   000A74  6EDA               	movwf	fsr2h,c
   961   000A76  CFDE F050          	movff	postinc2,??_gpio_port_write_logic
   962   000A7A  CFDD F051          	movff	postdec2,??_gpio_port_write_logic+1
   963   000A7E  C050  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   964   000A82  C051  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   965   000A86  C04F  FFDF         	movff	gpio_port_write_logic@logic,indf2
   966   000A8A                     l152:
   967   000A8A  0012               	return		;funcret
   968   000A8C                     __end_of_gpio_port_write_logic:
   969                           	callstack 0
   970                           
   971 ;; *************** function _gpio_port_init *****************
   972 ;; Defined at:
   973 ;;		line 150 in file "MCAL_Layer/GPIO_Module/hal_gpio.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  port            1    wreg     enum E2983
   976 ;;  dir             1    2[COMRAM] unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  port            1    6[COMRAM] enum E2983
   979 ;;  ret_value       1    5[COMRAM] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      unsigned char 
   982 ;; Registers used:
   983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   989 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;Total ram usage:        5 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 3
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text2
  1004   000A0A                     __ptext2:
  1005                           	callstack 0
  1006   000A0A                     _gpio_port_init:
  1007                           	callstack 27
  1008                           
  1009                           ;incstack = 0
  1010                           ;gpio_port_init@port stored from wreg
  1011   000A0A  6E4B               	movwf	gpio_port_init@port^0,c
  1012   000A0C                     
  1013                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 152:     Std_ReturnType ret_value =(Std_ReturnType)0
      +                          x01;
  1014   000A0C  0E01               	movlw	1
  1015   000A0E  6E4A               	movwf	gpio_port_init@ret_value^0,c
  1016   000A10                     
  1017                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 154:     if(port > 5 -1)
  1018   000A10  0E04               	movlw	4
  1019   000A12  644B               	cpfsgt	gpio_port_init@port^0,c
  1020   000A14  EF0E  F005         	goto	u1181
  1021   000A18  EF10  F005         	goto	u1180
  1022   000A1C                     u1181:
  1023   000A1C  EF14  F005         	goto	l1885
  1024   000A20                     u1180:
  1025   000A20                     
  1026                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 155:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 156:  
      +                                 ret_value =(Std_ReturnType)0x00;
  1027   000A20  0E00               	movlw	0
  1028   000A22  6E4A               	movwf	gpio_port_init@ret_value^0,c
  1029                           
  1030                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 157:     }
  1031   000A24  EF26  F005         	goto	l1887
  1032   000A28                     l1885:
  1033                           
  1034                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 159:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 160:  
      +                                 *tris_regs[port] = dir ;
  1035   000A28  504B               	movf	gpio_port_init@port^0,w,c
  1036   000A2A  0D02               	mullw	2
  1037   000A2C  0E15               	movlw	low _tris_regs
  1038   000A2E  24F3               	addwf	243,w,c
  1039   000A30  6ED9               	movwf	fsr2l,c
  1040   000A32  0E00               	movlw	high _tris_regs
  1041   000A34  20F4               	addwfc	prodh,w,c
  1042   000A36  6EDA               	movwf	fsr2h,c
  1043   000A38  CFDE F048          	movff	postinc2,??_gpio_port_init
  1044   000A3C  CFDD F049          	movff	postdec2,??_gpio_port_init+1
  1045   000A40  C048  FFD9         	movff	??_gpio_port_init,fsr2l
  1046   000A44  C049  FFDA         	movff	??_gpio_port_init+1,fsr2h
  1047   000A48  C047  FFDF         	movff	gpio_port_init@dir,indf2
  1048   000A4C                     l1887:
  1049                           
  1050                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 163:     return ret_value;
  1051   000A4C  504A               	movf	gpio_port_init@ret_value^0,w,c
  1052   000A4E  0012               	return		;funcret
  1053   000A50                     __end_of_gpio_port_init:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function ___awmod *****************
  1057 ;; Defined at:
  1058 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  dividend        2    2[COMRAM] int 
  1061 ;;  divisor         2    4[COMRAM] int 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  sign            1    7[COMRAM] unsigned char 
  1064 ;;  counter         1    6[COMRAM] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  2    2[COMRAM] int 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;Total ram usage:        6 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 3
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text3
  1089   000904                     __ptext3:
  1090                           	callstack 0
  1091   000904                     ___awmod:
  1092                           	callstack 27
  1093   000904  0E00               	movlw	0
  1094   000906  6E4C               	movwf	___awmod@sign^0,c
  1095   000908  BE48               	btfsc	(___awmod@dividend+1)^0,7,c
  1096   00090A  EF8B  F004         	goto	u1270
  1097   00090E  EF89  F004         	goto	u1271
  1098   000912                     u1271:
  1099   000912  EF91  F004         	goto	l1999
  1100   000916                     u1270:
  1101   000916  6C47               	negf	___awmod@dividend^0,c
  1102   000918  1E48               	comf	(___awmod@dividend+1)^0,f,c
  1103   00091A  B0D8               	btfsc	status,0,c
  1104   00091C  2A48               	incf	(___awmod@dividend+1)^0,f,c
  1105   00091E  0E01               	movlw	1
  1106   000920  6E4C               	movwf	___awmod@sign^0,c
  1107   000922                     l1999:
  1108   000922  BE4A               	btfsc	(___awmod@divisor+1)^0,7,c
  1109   000924  EF98  F004         	goto	u1280
  1110   000928  EF96  F004         	goto	u1281
  1111   00092C                     u1281:
  1112   00092C  EF9C  F004         	goto	l2003
  1113   000930                     u1280:
  1114   000930  6C49               	negf	___awmod@divisor^0,c
  1115   000932  1E4A               	comf	(___awmod@divisor+1)^0,f,c
  1116   000934  B0D8               	btfsc	status,0,c
  1117   000936  2A4A               	incf	(___awmod@divisor+1)^0,f,c
  1118   000938                     l2003:
  1119   000938  5049               	movf	___awmod@divisor^0,w,c
  1120   00093A  104A               	iorwf	(___awmod@divisor+1)^0,w,c
  1121   00093C  B4D8               	btfsc	status,2,c
  1122   00093E  EFA3  F004         	goto	u1291
  1123   000942  EFA5  F004         	goto	u1290
  1124   000946                     u1291:
  1125   000946  EFC9  F004         	goto	l2019
  1126   00094A                     u1290:
  1127   00094A  0E01               	movlw	1
  1128   00094C  6E4B               	movwf	___awmod@counter^0,c
  1129   00094E  EFAD  F004         	goto	l2009
  1130   000952                     l2007:
  1131   000952  90D8               	bcf	status,0,c
  1132   000954  3649               	rlcf	___awmod@divisor^0,f,c
  1133   000956  364A               	rlcf	(___awmod@divisor+1)^0,f,c
  1134   000958  2A4B               	incf	___awmod@counter^0,f,c
  1135   00095A                     l2009:
  1136   00095A  AE4A               	btfss	(___awmod@divisor+1)^0,7,c
  1137   00095C  EFB2  F004         	goto	u1301
  1138   000960  EFB4  F004         	goto	u1300
  1139   000964                     u1301:
  1140   000964  EFA9  F004         	goto	l2007
  1141   000968                     u1300:
  1142   000968                     l2011:
  1143   000968  5049               	movf	___awmod@divisor^0,w,c
  1144   00096A  5C47               	subwf	___awmod@dividend^0,w,c
  1145   00096C  504A               	movf	(___awmod@divisor+1)^0,w,c
  1146   00096E  5848               	subwfb	(___awmod@dividend+1)^0,w,c
  1147   000970  A0D8               	btfss	status,0,c
  1148   000972  EFBD  F004         	goto	u1311
  1149   000976  EFBF  F004         	goto	u1310
  1150   00097A                     u1311:
  1151   00097A  EFC3  F004         	goto	l2015
  1152   00097E                     u1310:
  1153   00097E  5049               	movf	___awmod@divisor^0,w,c
  1154   000980  5E47               	subwf	___awmod@dividend^0,f,c
  1155   000982  504A               	movf	(___awmod@divisor+1)^0,w,c
  1156   000984  5A48               	subwfb	(___awmod@dividend+1)^0,f,c
  1157   000986                     l2015:
  1158   000986  90D8               	bcf	status,0,c
  1159   000988  324A               	rrcf	(___awmod@divisor+1)^0,f,c
  1160   00098A  3249               	rrcf	___awmod@divisor^0,f,c
  1161   00098C  2E4B               	decfsz	___awmod@counter^0,f,c
  1162   00098E  EFB4  F004         	goto	l2011
  1163   000992                     l2019:
  1164   000992  504C               	movf	___awmod@sign^0,w,c
  1165   000994  B4D8               	btfsc	status,2,c
  1166   000996  EFCF  F004         	goto	u1321
  1167   00099A  EFD1  F004         	goto	u1320
  1168   00099E                     u1321:
  1169   00099E  EFD5  F004         	goto	l2023
  1170   0009A2                     u1320:
  1171   0009A2  6C47               	negf	___awmod@dividend^0,c
  1172   0009A4  1E48               	comf	(___awmod@dividend+1)^0,f,c
  1173   0009A6  B0D8               	btfsc	status,0,c
  1174   0009A8  2A48               	incf	(___awmod@dividend+1)^0,f,c
  1175   0009AA                     l2023:
  1176   0009AA  C047  F047         	movff	___awmod@dividend,?___awmod
  1177   0009AE  C048  F048         	movff	___awmod@dividend+1,?___awmod+1
  1178   0009B2  0012               	return		;funcret
  1179   0009B4                     __end_of___awmod:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function ___awdiv *****************
  1183 ;; Defined at:
  1184 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  dividend        2    2[COMRAM] int 
  1187 ;;  divisor         2    4[COMRAM] int 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  quotient        2    8[COMRAM] int 
  1190 ;;  sign            1    7[COMRAM] unsigned char 
  1191 ;;  counter         1    6[COMRAM] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  2    2[COMRAM] int 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;Total ram usage:        8 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 3
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text4
  1216   000840                     __ptext4:
  1217                           	callstack 0
  1218   000840                     ___awdiv:
  1219                           	callstack 27
  1220   000840  0E00               	movlw	0
  1221   000842  6E4C               	movwf	___awdiv@sign^0,c
  1222   000844  BE4A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1223   000846  EF29  F004         	goto	u1210
  1224   00084A  EF27  F004         	goto	u1211
  1225   00084E                     u1211:
  1226   00084E  EF2F  F004         	goto	l1955
  1227   000852                     u1210:
  1228   000852  6C49               	negf	___awdiv@divisor^0,c
  1229   000854  1E4A               	comf	(___awdiv@divisor+1)^0,f,c
  1230   000856  B0D8               	btfsc	status,0,c
  1231   000858  2A4A               	incf	(___awdiv@divisor+1)^0,f,c
  1232   00085A  0E01               	movlw	1
  1233   00085C  6E4C               	movwf	___awdiv@sign^0,c
  1234   00085E                     l1955:
  1235   00085E  BE48               	btfsc	(___awdiv@dividend+1)^0,7,c
  1236   000860  EF36  F004         	goto	u1220
  1237   000864  EF34  F004         	goto	u1221
  1238   000868                     u1221:
  1239   000868  EF3C  F004         	goto	l1961
  1240   00086C                     u1220:
  1241   00086C  6C47               	negf	___awdiv@dividend^0,c
  1242   00086E  1E48               	comf	(___awdiv@dividend+1)^0,f,c
  1243   000870  B0D8               	btfsc	status,0,c
  1244   000872  2A48               	incf	(___awdiv@dividend+1)^0,f,c
  1245   000874  0E01               	movlw	1
  1246   000876  1A4C               	xorwf	___awdiv@sign^0,f,c
  1247   000878                     l1961:
  1248   000878  0E00               	movlw	0
  1249   00087A  6E4E               	movwf	(___awdiv@quotient+1)^0,c
  1250   00087C  0E00               	movlw	0
  1251   00087E  6E4D               	movwf	___awdiv@quotient^0,c
  1252   000880  5049               	movf	___awdiv@divisor^0,w,c
  1253   000882  104A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1254   000884  B4D8               	btfsc	status,2,c
  1255   000886  EF47  F004         	goto	u1231
  1256   00088A  EF49  F004         	goto	u1230
  1257   00088E                     u1231:
  1258   00088E  EF71  F004         	goto	l1983
  1259   000892                     u1230:
  1260   000892  0E01               	movlw	1
  1261   000894  6E4B               	movwf	___awdiv@counter^0,c
  1262   000896  EF51  F004         	goto	l1969
  1263   00089A                     l1967:
  1264   00089A  90D8               	bcf	status,0,c
  1265   00089C  3649               	rlcf	___awdiv@divisor^0,f,c
  1266   00089E  364A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1267   0008A0  2A4B               	incf	___awdiv@counter^0,f,c
  1268   0008A2                     l1969:
  1269   0008A2  AE4A               	btfss	(___awdiv@divisor+1)^0,7,c
  1270   0008A4  EF56  F004         	goto	u1241
  1271   0008A8  EF58  F004         	goto	u1240
  1272   0008AC                     u1241:
  1273   0008AC  EF4D  F004         	goto	l1967
  1274   0008B0                     u1240:
  1275   0008B0                     l1971:
  1276   0008B0  90D8               	bcf	status,0,c
  1277   0008B2  364D               	rlcf	___awdiv@quotient^0,f,c
  1278   0008B4  364E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1279   0008B6  5049               	movf	___awdiv@divisor^0,w,c
  1280   0008B8  5C47               	subwf	___awdiv@dividend^0,w,c
  1281   0008BA  504A               	movf	(___awdiv@divisor+1)^0,w,c
  1282   0008BC  5848               	subwfb	(___awdiv@dividend+1)^0,w,c
  1283   0008BE  A0D8               	btfss	status,0,c
  1284   0008C0  EF64  F004         	goto	u1251
  1285   0008C4  EF66  F004         	goto	u1250
  1286   0008C8                     u1251:
  1287   0008C8  EF6B  F004         	goto	l1979
  1288   0008CC                     u1250:
  1289   0008CC  5049               	movf	___awdiv@divisor^0,w,c
  1290   0008CE  5E47               	subwf	___awdiv@dividend^0,f,c
  1291   0008D0  504A               	movf	(___awdiv@divisor+1)^0,w,c
  1292   0008D2  5A48               	subwfb	(___awdiv@dividend+1)^0,f,c
  1293   0008D4  804D               	bsf	___awdiv@quotient^0,0,c
  1294   0008D6                     l1979:
  1295   0008D6  90D8               	bcf	status,0,c
  1296   0008D8  324A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1297   0008DA  3249               	rrcf	___awdiv@divisor^0,f,c
  1298   0008DC  2E4B               	decfsz	___awdiv@counter^0,f,c
  1299   0008DE  EF58  F004         	goto	l1971
  1300   0008E2                     l1983:
  1301   0008E2  504C               	movf	___awdiv@sign^0,w,c
  1302   0008E4  B4D8               	btfsc	status,2,c
  1303   0008E6  EF77  F004         	goto	u1261
  1304   0008EA  EF79  F004         	goto	u1260
  1305   0008EE                     u1261:
  1306   0008EE  EF7D  F004         	goto	l1987
  1307   0008F2                     u1260:
  1308   0008F2  6C4D               	negf	___awdiv@quotient^0,c
  1309   0008F4  1E4E               	comf	(___awdiv@quotient+1)^0,f,c
  1310   0008F6  B0D8               	btfsc	status,0,c
  1311   0008F8  2A4E               	incf	(___awdiv@quotient+1)^0,f,c
  1312   0008FA                     l1987:
  1313   0008FA  C04D  F047         	movff	___awdiv@quotient,?___awdiv
  1314   0008FE  C04E  F048         	movff	___awdiv@quotient+1,?___awdiv+1
  1315   000902  0012               	return		;funcret
  1316   000904                     __end_of___awdiv:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _Interrupt_INTx_Enable *****************
  1320 ;; Defined at:
  1321 ;;		line 35 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  object          2   21[COMRAM] PTR const struct .
  1324 ;;		 -> int1_obj(5), int0_obj(5), 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  ret_value       1    0        unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      unsigned char 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;Total ram usage:        4 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; Hardware stack levels required when called: 5
  1343 ;; This function calls:
  1344 ;;		_Edge_Config
  1345 ;;		_INT0_SetInterruptHandler
  1346 ;;		_INT1_SetInterruptHandler
  1347 ;;		_INT2_SetInterruptHandler
  1348 ;;		_gpio_pin_init
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text5
  1355   000746                     __ptext5:
  1356                           	callstack 0
  1357   000746                     _Interrupt_INTx_Enable:
  1358                           	callstack 25
  1359   000746                     
  1360                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 37:     if(((void*)0) == object){
  1361   000746  505A               	movf	Interrupt_INTx_Enable@object^0,w,c
  1362   000748  105B               	iorwf	(Interrupt_INTx_Enable@object+1)^0,w,c
  1363   00074A  A4D8               	btfss	status,2,c
  1364   00074C  EFAA  F003         	goto	u1201
  1365   000750  EFAC  F003         	goto	u1200
  1366   000754                     u1201:
  1367   000754  EFAE  F003         	goto	l1907
  1368   000758                     u1200:
  1369   000758                     l1905:
  1370                           
  1371                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 39:         }
  1372   000758  EF1F  F004         	goto	l213
  1373   00075C                     l1907:
  1374   00075C  0E02               	movlw	2
  1375   00075E  245A               	addwf	Interrupt_INTx_Enable@object^0,w,c
  1376   000760  6E51               	movwf	gpio_pin_init@_pin_config^0,c
  1377   000762  0E00               	movlw	0
  1378   000764  205B               	addwfc	(Interrupt_INTx_Enable@object+1)^0,w,c
  1379   000766  6E52               	movwf	(gpio_pin_init@_pin_config+1)^0,c
  1380   000768  ECAA  F001         	call	_gpio_pin_init	;wreg free
  1381                           
  1382                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 44:         switch(object->INTx_pin.Pin
      +                          ){
  1383   00076C  EFFD  F003         	goto	l1941
  1384   000770                     l208:
  1385                           
  1386                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 46:                     (INTCONbits.INT
      +                          0E=0);
  1387   000770  98F2               	bcf	242,4,c	;volatile
  1388                           
  1389                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 47:                     (INTCONbits.INT
      +                          0IF=0);
  1390   000772  92F2               	bcf	242,1,c	;volatile
  1391   000774                     
  1392                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 48:                     Edge_Config(obj
      +                          ect);
  1393   000774  C05A  F047         	movff	Interrupt_INTx_Enable@object,Edge_Config@object
  1394   000778  C05B  F048         	movff	Interrupt_INTx_Enable@object+1,Edge_Config@object+1
  1395   00077C  EC0F  F003         	call	_Edge_Config	;wreg free
  1396                           
  1397                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 49:                     INT0_SetInterru
      +                          ptHandler(object->EXT_InterruptHandler);
  1398   000780  C05A  FFD9         	movff	Interrupt_INTx_Enable@object,fsr2l
  1399   000784  C05B  FFDA         	movff	Interrupt_INTx_Enable@object+1,fsr2h
  1400   000788  CFDE F047          	movff	postinc2,INT0_SetInterruptHandler@InterruptHandler
  1401   00078C  CFDD F048          	movff	postdec2,INT0_SetInterruptHandler@InterruptHandler+1
  1402   000790  ECC7  F005         	call	_INT0_SetInterruptHandler	;wreg free
  1403   000794                     
  1404                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 53:                     (INTCONbits.GIE
      +                          =1);
  1405   000794  8EF2               	bsf	242,7,c	;volatile
  1406   000796                     
  1407                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 54:                     (INTCONbits.PEI
      +                          E=1);
  1408   000796  8CF2               	bsf	242,6,c	;volatile
  1409   000798                     
  1410                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 56:                     (INTCONbits.INT
      +                          0IE=1);
  1411   000798  88F2               	bsf	242,4,c	;volatile
  1412   00079A                     l1917:
  1413                           
  1414                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 58:                     break;
  1415   00079A  EF1F  F004         	goto	l213
  1416   00079E                     l210:
  1417                           
  1418                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 60:                     (INTCON3bits.IN
      +                          T1IE=0);
  1419   00079E  96F0               	bcf	240,3,c	;volatile
  1420                           
  1421                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 61:                     (INTCON3bits.IN
      +                          T1IF=0);
  1422   0007A0  90F0               	bcf	240,0,c	;volatile
  1423   0007A2                     
  1424                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 62:                     Edge_Config(obj
      +                          ect);
  1425   0007A2  C05A  F047         	movff	Interrupt_INTx_Enable@object,Edge_Config@object
  1426   0007A6  C05B  F048         	movff	Interrupt_INTx_Enable@object+1,Edge_Config@object+1
  1427   0007AA  EC0F  F003         	call	_Edge_Config	;wreg free
  1428   0007AE                     
  1429                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 66:                     (INTCONbits.GIE
      +                          =1);
  1430   0007AE  8EF2               	bsf	242,7,c	;volatile
  1431   0007B0                     
  1432                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 67:                     (INTCONbits.PEI
      +                          E=1);
  1433   0007B0  8CF2               	bsf	242,6,c	;volatile
  1434                           
  1435                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 69:                     INT1_SetInterru
      +                          ptHandler(object->EXT_InterruptHandler);
  1436   0007B2  C05A  FFD9         	movff	Interrupt_INTx_Enable@object,fsr2l
  1437   0007B6  C05B  FFDA         	movff	Interrupt_INTx_Enable@object+1,fsr2h
  1438   0007BA  CFDE F047          	movff	postinc2,INT1_SetInterruptHandler@InterruptHandler
  1439   0007BE  CFDD F048          	movff	postdec2,INT1_SetInterruptHandler@InterruptHandler+1
  1440   0007C2  ECB7  F005         	call	_INT1_SetInterruptHandler	;wreg free
  1441   0007C6                     
  1442                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 70:                     (INTCON3bits.IN
      +                          T1IE=1);
  1443   0007C6  86F0               	bsf	240,3,c	;volatile
  1444   0007C8  EFCD  F003         	goto	l1917
  1445   0007CC                     l211:
  1446                           
  1447                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 74:                     (INTCON3bits.IN
      +                          T2IE=0);
  1448   0007CC  98F0               	bcf	240,4,c	;volatile
  1449                           
  1450                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 75:                     (INTCON3bits.IN
      +                          T2IF=0);
  1451   0007CE  92F0               	bcf	240,1,c	;volatile
  1452   0007D0                     
  1453                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 76:                     Edge_Config(obj
      +                          ect);
  1454   0007D0  C05A  F047         	movff	Interrupt_INTx_Enable@object,Edge_Config@object
  1455   0007D4  C05B  F048         	movff	Interrupt_INTx_Enable@object+1,Edge_Config@object+1
  1456   0007D8  EC0F  F003         	call	_Edge_Config	;wreg free
  1457   0007DC                     
  1458                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 80:                     (INTCONbits.GIE
      +                          =1);
  1459   0007DC  8EF2               	bsf	242,7,c	;volatile
  1460   0007DE                     
  1461                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 81:                     (INTCONbits.PEI
      +                          E=1);
  1462   0007DE  8CF2               	bsf	242,6,c	;volatile
  1463                           
  1464                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 83:                     INT2_SetInterru
      +                          ptHandler(object->EXT_InterruptHandler);
  1465   0007E0  C05A  FFD9         	movff	Interrupt_INTx_Enable@object,fsr2l
  1466   0007E4  C05B  FFDA         	movff	Interrupt_INTx_Enable@object+1,fsr2h
  1467   0007E8  CFDE F047          	movff	postinc2,INT2_SetInterruptHandler@InterruptHandler
  1468   0007EC  CFDD F048          	movff	postdec2,INT2_SetInterruptHandler@InterruptHandler+1
  1469   0007F0  ECA7  F005         	call	_INT2_SetInterruptHandler	;wreg free
  1470   0007F4                     
  1471                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 84:                     (INTCON3bits.IN
      +                          T2IE=1);
  1472   0007F4  88F0               	bsf	240,4,c	;volatile
  1473   0007F6  EFCD  F003         	goto	l1917
  1474   0007FA                     l1941:
  1475   0007FA  EE20 F002          	lfsr	2,2
  1476   0007FE  505A               	movf	Interrupt_INTx_Enable@object^0,w,c
  1477   000800  26D9               	addwf	fsr2l,f,c
  1478   000802  505B               	movf	(Interrupt_INTx_Enable@object+1)^0,w,c
  1479   000804  22DA               	addwfc	fsr2h,f,c
  1480   000806  30DF               	rrcf	223,w,c
  1481   000808  32E8               	rrcf	wreg,f,c
  1482   00080A  32E8               	rrcf	wreg,f,c
  1483   00080C  0B07               	andlw	7
  1484   00080E  6E5C               	movwf	??_Interrupt_INTx_Enable^0,c
  1485   000810  6A5D               	clrf	(??_Interrupt_INTx_Enable+1)^0,c
  1486                           
  1487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1488                           ; Switch size 1, requested type "simple"
  1489                           ; Number of cases is 1, Range of values is 0 to 0
  1490                           ; switch strategies available:
  1491                           ; Name         Instructions Cycles
  1492                           ; simple_byte            4     3 (average)
  1493                           ;	Chosen strategy is simple_byte
  1494   000812  505D               	movf	(??_Interrupt_INTx_Enable+1)^0,w,c
  1495   000814  0A00               	xorlw	0	; case 0
  1496   000816  B4D8               	btfsc	status,2,c
  1497   000818  EF10  F004         	goto	l2199
  1498   00081C  EFAC  F003         	goto	l1905
  1499   000820                     l2199:
  1500                           
  1501                           ; Switch size 1, requested type "simple"
  1502                           ; Number of cases is 3, Range of values is 0 to 2
  1503                           ; switch strategies available:
  1504                           ; Name         Instructions Cycles
  1505                           ; simple_byte           10     6 (average)
  1506                           ;	Chosen strategy is simple_byte
  1507   000820  505C               	movf	??_Interrupt_INTx_Enable^0,w,c
  1508   000822  0A00               	xorlw	0	; case 0
  1509   000824  B4D8               	btfsc	status,2,c
  1510   000826  EFB8  F003         	goto	l208
  1511   00082A  0A01               	xorlw	1	; case 1
  1512   00082C  B4D8               	btfsc	status,2,c
  1513   00082E  EFCF  F003         	goto	l210
  1514   000832  0A03               	xorlw	3	; case 2
  1515   000834  B4D8               	btfsc	status,2,c
  1516   000836  EFE6  F003         	goto	l211
  1517   00083A  EFAC  F003         	goto	l1905
  1518   00083E                     l213:
  1519   00083E  0012               	return		;funcret
  1520   000840                     __end_of_Interrupt_INTx_Enable:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _gpio_pin_init *****************
  1524 ;; Defined at:
  1525 ;;		line 42 in file "MCAL_Layer/GPIO_Module/hal_gpio.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  1528 ;;		 -> int1_obj(5), int0_obj(5), 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  ret_value       1   20[COMRAM] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      unsigned char 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;Total ram usage:        9 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 4
  1547 ;; This function calls:
  1548 ;;		_gpio_pin_write_logic
  1549 ;; This function is called by:
  1550 ;;		_Interrupt_INTx_Enable
  1551 ;;		_button_init
  1552 ;;		_seven_segment_init
  1553 ;;		_Interrupt_RBx_Enable
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558   000354                     __ptext6:
  1559                           	callstack 0
  1560   000354                     _gpio_pin_init:
  1561                           	callstack 25
  1562   000354                     
  1563                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 46:     if(( ((void*)0) == _pin_config ) || (_pin_co
      +                          nfig->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
  1564   000354  5051               	movf	gpio_pin_init@_pin_config^0,w,c
  1565   000356  1052               	iorwf	(gpio_pin_init@_pin_config+1)^0,w,c
  1566   000358  B4D8               	btfsc	status,2,c
  1567   00035A  EFB1  F001         	goto	u1011
  1568   00035E  EFB3  F001         	goto	u1010
  1569   000362                     u1011:
  1570   000362  EFD3  F001         	goto	l1779
  1571   000366                     u1010:
  1572   000366  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1573   00036A  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1574   00036E  30DF               	rrcf	223,w,c
  1575   000370  32E8               	rrcf	wreg,f,c
  1576   000372  32E8               	rrcf	wreg,f,c
  1577   000374  0B07               	andlw	7
  1578   000376  6E53               	movwf	??_gpio_pin_init^0,c
  1579   000378  0E08               	movlw	8
  1580   00037A  6053               	cpfslt	??_gpio_pin_init^0,c
  1581   00037C  EFC2  F001         	goto	u1021
  1582   000380  EFC4  F001         	goto	u1020
  1583   000384                     u1021:
  1584   000384  EFD3  F001         	goto	l1779
  1585   000388                     u1020:
  1586   000388  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1587   00038C  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1588   000390  50DF               	movf	223,w,c
  1589   000392  0B07               	andlw	7
  1590   000394  6E53               	movwf	??_gpio_pin_init^0,c
  1591   000396  0E04               	movlw	4
  1592   000398  6453               	cpfsgt	??_gpio_pin_init^0,c
  1593   00039A  EFD1  F001         	goto	u1031
  1594   00039E  EFD3  F001         	goto	u1030
  1595   0003A2                     u1031:
  1596   0003A2  EF38  F002         	goto	l1787
  1597   0003A6                     u1030:
  1598   0003A6                     l1779:
  1599                           
  1600                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 47:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 48:    
      +                               ret_value = (Std_ReturnType)0x00 ;
  1601   0003A6  0E00               	movlw	0
  1602   0003A8  6E59               	movwf	gpio_pin_init@ret_value^0,c
  1603                           
  1604                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 49:     }
  1605   0003AA  EF68  F002         	goto	l1791
  1606   0003AE                     l1781:
  1607                           
  1608                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 54:                  (*tris_regs[_pin_config->Port] 
      +                          &= ~(1 << _pin_config->Pin));
  1609   0003AE  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1610   0003B2  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1611   0003B6  30DF               	rrcf	223,w,c
  1612   0003B8  32E8               	rrcf	wreg,f,c
  1613   0003BA  32E8               	rrcf	wreg,f,c
  1614   0003BC  0B07               	andlw	7
  1615   0003BE  6E53               	movwf	??_gpio_pin_init^0,c
  1616   0003C0  0E01               	movlw	1
  1617   0003C2  6E54               	movwf	(??_gpio_pin_init+1)^0,c
  1618   0003C4  2A53               	incf	??_gpio_pin_init^0,f,c
  1619   0003C6  EFE7  F001         	goto	u1044
  1620   0003CA                     u1045:
  1621   0003CA  90D8               	bcf	status,0,c
  1622   0003CC  3654               	rlcf	(??_gpio_pin_init+1)^0,f,c
  1623   0003CE                     u1044:
  1624   0003CE  2E53               	decfsz	??_gpio_pin_init^0,f,c
  1625   0003D0  EFE5  F001         	goto	u1045
  1626   0003D4  5054               	movf	(??_gpio_pin_init+1)^0,w,c
  1627   0003D6  0AFF               	xorlw	255
  1628   0003D8  6E55               	movwf	(??_gpio_pin_init+2)^0,c
  1629   0003DA  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1630   0003DE  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1631   0003E2  50DF               	movf	223,w,c
  1632   0003E4  0B07               	andlw	7
  1633   0003E6  6E56               	movwf	(??_gpio_pin_init+3)^0,c
  1634   0003E8  5056               	movf	(??_gpio_pin_init+3)^0,w,c
  1635   0003EA  0D02               	mullw	2
  1636   0003EC  0E15               	movlw	low _tris_regs
  1637   0003EE  24F3               	addwf	243,w,c
  1638   0003F0  6ED9               	movwf	fsr2l,c
  1639   0003F2  0E00               	movlw	high _tris_regs
  1640   0003F4  20F4               	addwfc	prodh,w,c
  1641   0003F6  6EDA               	movwf	fsr2h,c
  1642   0003F8  CFDE F057          	movff	postinc2,??_gpio_pin_init+4
  1643   0003FC  CFDD F058          	movff	postdec2,??_gpio_pin_init+5
  1644   000400  C057  FFD9         	movff	??_gpio_pin_init+4,fsr2l
  1645   000404  C058  FFDA         	movff	??_gpio_pin_init+5,fsr2h
  1646   000408  5055               	movf	(??_gpio_pin_init+2)^0,w,c
  1647   00040A  16DF               	andwf	indf2,f,c
  1648                           
  1649                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 55:                  break;
  1650   00040C  EF59  F002         	goto	l1789
  1651   000410                     l1783:
  1652                           
  1653                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 58:                  (*tris_regs[_pin_config->Port] 
      +                          |= (1 << _pin_config->Pin));
  1654   000410  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1655   000414  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1656   000418  30DF               	rrcf	223,w,c
  1657   00041A  32E8               	rrcf	wreg,f,c
  1658   00041C  32E8               	rrcf	wreg,f,c
  1659   00041E  0B07               	andlw	7
  1660   000420  6E53               	movwf	??_gpio_pin_init^0,c
  1661   000422  0E01               	movlw	1
  1662   000424  6E54               	movwf	(??_gpio_pin_init+1)^0,c
  1663   000426  2A53               	incf	??_gpio_pin_init^0,f,c
  1664   000428  EF18  F002         	goto	u1054
  1665   00042C                     u1055:
  1666   00042C  90D8               	bcf	status,0,c
  1667   00042E  3654               	rlcf	(??_gpio_pin_init+1)^0,f,c
  1668   000430                     u1054:
  1669   000430  2E53               	decfsz	??_gpio_pin_init^0,f,c
  1670   000432  EF16  F002         	goto	u1055
  1671   000436  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1672   00043A  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1673   00043E  50DF               	movf	223,w,c
  1674   000440  0B07               	andlw	7
  1675   000442  6E55               	movwf	(??_gpio_pin_init+2)^0,c
  1676   000444  5055               	movf	(??_gpio_pin_init+2)^0,w,c
  1677   000446  0D02               	mullw	2
  1678   000448  0E15               	movlw	low _tris_regs
  1679   00044A  24F3               	addwf	243,w,c
  1680   00044C  6ED9               	movwf	fsr2l,c
  1681   00044E  0E00               	movlw	high _tris_regs
  1682   000450  20F4               	addwfc	prodh,w,c
  1683   000452  6EDA               	movwf	fsr2h,c
  1684   000454  CFDE F056          	movff	postinc2,??_gpio_pin_init+3
  1685   000458  CFDD F057          	movff	postdec2,??_gpio_pin_init+4
  1686   00045C  C056  FFD9         	movff	??_gpio_pin_init+3,fsr2l
  1687   000460  C057  FFDA         	movff	??_gpio_pin_init+4,fsr2h
  1688   000464  5054               	movf	(??_gpio_pin_init+1)^0,w,c
  1689   000466  12DF               	iorwf	indf2,f,c
  1690                           
  1691                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 59:                  break;
  1692   000468  EF59  F002         	goto	l1789
  1693   00046C                     l1785:
  1694                           
  1695                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 62:           }
  1696   00046C  EF59  F002         	goto	l1789
  1697   000470                     l1787:
  1698   000470  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1699   000474  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1700   000478  BCDF               	btfsc	indf2,6,c
  1701   00047A  EF41  F002         	goto	u1061
  1702   00047E  EF44  F002         	goto	u1060
  1703   000482                     u1061:
  1704   000482  0E01               	movlw	1
  1705   000484  EF45  F002         	goto	u1070
  1706   000488                     u1060:
  1707   000488  0E00               	movlw	0
  1708   00048A                     u1070:
  1709   00048A  6E53               	movwf	??_gpio_pin_init^0,c
  1710   00048C  6A54               	clrf	(??_gpio_pin_init+1)^0,c
  1711                           
  1712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1713                           ; Switch size 1, requested type "simple"
  1714                           ; Number of cases is 1, Range of values is 0 to 0
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte            4     3 (average)
  1718                           ;	Chosen strategy is simple_byte
  1719   00048E  5054               	movf	(??_gpio_pin_init+1)^0,w,c
  1720   000490  0A00               	xorlw	0	; case 0
  1721   000492  B4D8               	btfsc	status,2,c
  1722   000494  EF4E  F002         	goto	l2201
  1723   000498  EF36  F002         	goto	l1785
  1724   00049C                     l2201:
  1725                           
  1726                           ; Switch size 1, requested type "simple"
  1727                           ; Number of cases is 2, Range of values is 0 to 1
  1728                           ; switch strategies available:
  1729                           ; Name         Instructions Cycles
  1730                           ; simple_byte            7     4 (average)
  1731                           ;	Chosen strategy is simple_byte
  1732   00049C  5053               	movf	??_gpio_pin_init^0,w,c
  1733   00049E  0A00               	xorlw	0	; case 0
  1734   0004A0  B4D8               	btfsc	status,2,c
  1735   0004A2  EFD7  F001         	goto	l1781
  1736   0004A6  0A01               	xorlw	1	; case 1
  1737   0004A8  B4D8               	btfsc	status,2,c
  1738   0004AA  EF08  F002         	goto	l1783
  1739   0004AE  EF36  F002         	goto	l1785
  1740   0004B2                     l1789:
  1741                           
  1742                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 63:         ret_value = gpio_pin_write_logic(_pin_co
      +                          nfig,_pin_config->Logic);
  1743   0004B2  C051  F047         	movff	gpio_pin_init@_pin_config,gpio_pin_write_logic@_pin_config
  1744   0004B6  C052  F048         	movff	gpio_pin_init@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  1745   0004BA  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1746   0004BE  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1747   0004C2  0E00               	movlw	0
  1748   0004C4  BEDF               	btfsc	indf2,7,c
  1749   0004C6  0E01               	movlw	1
  1750   0004C8  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  1751   0004CA  EC6A  F002         	call	_gpio_pin_write_logic	;wreg free
  1752   0004CE  6E59               	movwf	gpio_pin_init@ret_value^0,c
  1753   0004D0                     l1791:
  1754                           
  1755                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 66:     return ret_value;
  1756   0004D0  5059               	movf	gpio_pin_init@ret_value^0,w,c
  1757   0004D2  0012               	return		;funcret
  1758   0004D4                     __end_of_gpio_pin_init:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _gpio_pin_write_logic *****************
  1762 ;; Defined at:
  1763 ;;		line 85 in file "MCAL_Layer/GPIO_Module/hal_gpio.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  _pin_config     2    2[COMRAM] PTR const struct .
  1766 ;;		 -> int1_obj(5), int0_obj(5), 
  1767 ;;  logic           1    4[COMRAM] enum E2965
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  ret_value       1   11[COMRAM] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      unsigned char 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1779 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;Total ram usage:       10 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 3
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_gpio_pin_init
  1790 ;;		_seven_segment_write_number
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text7
  1795   0004D4                     __ptext7:
  1796                           	callstack 0
  1797   0004D4                     _gpio_pin_write_logic:
  1798                           	callstack 25
  1799   0004D4                     
  1800                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 87:      Std_ReturnType ret_value =(Std_ReturnType)0
      +                          x01 ;
  1801   0004D4  0E01               	movlw	1
  1802   0004D6  6E50               	movwf	gpio_pin_write_logic@ret_value^0,c
  1803   0004D8                     
  1804                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 89:     if(( ((void*)0) == _pin_config ) || (_pin_co
      +                          nfig->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
  1805   0004D8  5047               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1806   0004DA  1048               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  1807   0004DC  B4D8               	btfsc	status,2,c
  1808   0004DE  EF73  F002         	goto	u961
  1809   0004E2  EF75  F002         	goto	u960
  1810   0004E6                     u961:
  1811   0004E6  EF95  F002         	goto	l1753
  1812   0004EA                     u960:
  1813   0004EA  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1814   0004EE  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1815   0004F2  30DF               	rrcf	223,w,c
  1816   0004F4  32E8               	rrcf	wreg,f,c
  1817   0004F6  32E8               	rrcf	wreg,f,c
  1818   0004F8  0B07               	andlw	7
  1819   0004FA  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1820   0004FC  0E08               	movlw	8
  1821   0004FE  604A               	cpfslt	??_gpio_pin_write_logic^0,c
  1822   000500  EF84  F002         	goto	u971
  1823   000504  EF86  F002         	goto	u970
  1824   000508                     u971:
  1825   000508  EF95  F002         	goto	l1753
  1826   00050C                     u970:
  1827   00050C  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1828   000510  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1829   000514  50DF               	movf	223,w,c
  1830   000516  0B07               	andlw	7
  1831   000518  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1832   00051A  0E04               	movlw	4
  1833   00051C  644A               	cpfsgt	??_gpio_pin_write_logic^0,c
  1834   00051E  EF93  F002         	goto	u981
  1835   000522  EF95  F002         	goto	u980
  1836   000526                     u981:
  1837   000526  EFF8  F002         	goto	l1761
  1838   00052A                     u980:
  1839   00052A                     l1753:
  1840                           
  1841                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 90:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 91:    
      +                               ret_value = (Std_ReturnType)0x00 ;
  1842   00052A  0E00               	movlw	0
  1843   00052C  6E50               	movwf	gpio_pin_write_logic@ret_value^0,c
  1844                           
  1845                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 92:     }
  1846   00052E  EF0D  F003         	goto	l1763
  1847   000532                     l1755:
  1848                           
  1849                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 97:                  (*lat_regs[_pin_config->Port] &
      +                          = ~(1 << _pin_config->Pin));
  1850   000532  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1851   000536  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1852   00053A  30DF               	rrcf	223,w,c
  1853   00053C  32E8               	rrcf	wreg,f,c
  1854   00053E  32E8               	rrcf	wreg,f,c
  1855   000540  0B07               	andlw	7
  1856   000542  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1857   000544  0E01               	movlw	1
  1858   000546  6E4B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1859   000548  2A4A               	incf	??_gpio_pin_write_logic^0,f,c
  1860   00054A  EFA9  F002         	goto	u994
  1861   00054E                     u995:
  1862   00054E  90D8               	bcf	status,0,c
  1863   000550  364B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1864   000552                     u994:
  1865   000552  2E4A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1866   000554  EFA7  F002         	goto	u995
  1867   000558  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1868   00055A  0AFF               	xorlw	255
  1869   00055C  6E4C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1870   00055E  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1871   000562  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1872   000566  50DF               	movf	223,w,c
  1873   000568  0B07               	andlw	7
  1874   00056A  6E4D               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1875   00056C  504D               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1876   00056E  0D02               	mullw	2
  1877   000570  0E0B               	movlw	low _lat_regs
  1878   000572  24F3               	addwf	243,w,c
  1879   000574  6ED9               	movwf	fsr2l,c
  1880   000576  0E00               	movlw	high _lat_regs
  1881   000578  20F4               	addwfc	prodh,w,c
  1882   00057A  6EDA               	movwf	fsr2h,c
  1883   00057C  CFDE F04E          	movff	postinc2,??_gpio_pin_write_logic+4
  1884   000580  CFDD F04F          	movff	postdec2,??_gpio_pin_write_logic+5
  1885   000584  C04E  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1886   000588  C04F  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1887   00058C  504C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1888   00058E  16DF               	andwf	indf2,f,c
  1889                           
  1890                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 99:                  break;
  1891   000590  EF0D  F003         	goto	l1763
  1892   000594                     l1757:
  1893                           
  1894                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 102:                  (*lat_regs[_pin_config->Port] 
      +                          |= (1 << _pin_config->Pin));
  1895   000594  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1896   000598  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1897   00059C  30DF               	rrcf	223,w,c
  1898   00059E  32E8               	rrcf	wreg,f,c
  1899   0005A0  32E8               	rrcf	wreg,f,c
  1900   0005A2  0B07               	andlw	7
  1901   0005A4  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1902   0005A6  0E01               	movlw	1
  1903   0005A8  6E4B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1904   0005AA  2A4A               	incf	??_gpio_pin_write_logic^0,f,c
  1905   0005AC  EFDA  F002         	goto	u1004
  1906   0005B0                     u1005:
  1907   0005B0  90D8               	bcf	status,0,c
  1908   0005B2  364B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1909   0005B4                     u1004:
  1910   0005B4  2E4A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1911   0005B6  EFD8  F002         	goto	u1005
  1912   0005BA  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1913   0005BE  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1914   0005C2  50DF               	movf	223,w,c
  1915   0005C4  0B07               	andlw	7
  1916   0005C6  6E4C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1917   0005C8  504C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1918   0005CA  0D02               	mullw	2
  1919   0005CC  0E0B               	movlw	low _lat_regs
  1920   0005CE  24F3               	addwf	243,w,c
  1921   0005D0  6ED9               	movwf	fsr2l,c
  1922   0005D2  0E00               	movlw	high _lat_regs
  1923   0005D4  20F4               	addwfc	prodh,w,c
  1924   0005D6  6EDA               	movwf	fsr2h,c
  1925   0005D8  CFDE F04D          	movff	postinc2,??_gpio_pin_write_logic+3
  1926   0005DC  CFDD F04E          	movff	postdec2,??_gpio_pin_write_logic+4
  1927   0005E0  C04D  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1928   0005E4  C04E  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1929   0005E8  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1930   0005EA  12DF               	iorwf	indf2,f,c
  1931                           
  1932                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 104:                  break;
  1933   0005EC  EF0D  F003         	goto	l1763
  1934   0005F0                     l1761:
  1935   0005F0  5049               	movf	gpio_pin_write_logic@logic^0,w,c
  1936   0005F2  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1937   0005F4  6A4B               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1938                           
  1939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1940                           ; Switch size 1, requested type "simple"
  1941                           ; Number of cases is 1, Range of values is 0 to 0
  1942                           ; switch strategies available:
  1943                           ; Name         Instructions Cycles
  1944                           ; simple_byte            4     3 (average)
  1945                           ;	Chosen strategy is simple_byte
  1946   0005F6  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1947   0005F8  0A00               	xorlw	0	; case 0
  1948   0005FA  B4D8               	btfsc	status,2,c
  1949   0005FC  EF02  F003         	goto	l2203
  1950   000600  EF95  F002         	goto	l1753
  1951   000604                     l2203:
  1952                           
  1953                           ; Switch size 1, requested type "simple"
  1954                           ; Number of cases is 2, Range of values is 0 to 1
  1955                           ; switch strategies available:
  1956                           ; Name         Instructions Cycles
  1957                           ; simple_byte            7     4 (average)
  1958                           ;	Chosen strategy is simple_byte
  1959   000604  504A               	movf	??_gpio_pin_write_logic^0,w,c
  1960   000606  0A00               	xorlw	0	; case 0
  1961   000608  B4D8               	btfsc	status,2,c
  1962   00060A  EF99  F002         	goto	l1755
  1963   00060E  0A01               	xorlw	1	; case 1
  1964   000610  B4D8               	btfsc	status,2,c
  1965   000612  EFCA  F002         	goto	l1757
  1966   000616  EF95  F002         	goto	l1753
  1967   00061A                     l1763:
  1968                           
  1969                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 110:     return ret_value;
  1970   00061A  5050               	movf	gpio_pin_write_logic@ret_value^0,w,c
  1971   00061C  0012               	return		;funcret
  1972   00061E                     __end_of_gpio_pin_write_logic:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _INT2_SetInterruptHandler *****************
  1976 ;; Defined at:
  1977 ;;		line 309 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1980 ;;		 -> ContinuePause_ISR(1), StopWatchReset_ISR(1), 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  ret_value       1    0        unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      unsigned char 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 3
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_Interrupt_INTx_Enable
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text8
  2007   000B4E                     __ptext8:
  2008                           	callstack 0
  2009   000B4E                     _INT2_SetInterruptHandler:
  2010                           	callstack 26
  2011   000B4E                     
  2012                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 311:     if(((void*)0) == InterruptHand
      +                          ler){
  2013   000B4E  5047               	movf	INT2_SetInterruptHandler@InterruptHandler^0,w,c
  2014   000B50  1048               	iorwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2015   000B52  A4D8               	btfss	status,2,c
  2016   000B54  EFAE  F005         	goto	u1171
  2017   000B58  EFB0  F005         	goto	u1170
  2018   000B5C                     u1171:
  2019   000B5C  EFB2  F005         	goto	l1873
  2020   000B60                     u1170:
  2021   000B60                     
  2022                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 313:     }
  2023   000B60  EFB6  F005         	goto	l279
  2024   000B64                     l1873:
  2025                           
  2026                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 315:         INT2_InterruptHandler = In
      +                          terruptHandler ;
  2027   000B64  C047  F039         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2028   000B68  C048  F03A         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2029   000B6C                     l279:
  2030   000B6C  0012               	return		;funcret
  2031   000B6E                     __end_of_INT2_SetInterruptHandler:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _INT1_SetInterruptHandler *****************
  2035 ;; Defined at:
  2036 ;;		line 297 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2039 ;;		 -> ContinuePause_ISR(1), StopWatchReset_ISR(1), 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  ret_value       1    0        unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      unsigned char 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:        2 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 3
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_Interrupt_INTx_Enable
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text9
  2066   000B6E                     __ptext9:
  2067                           	callstack 0
  2068   000B6E                     _INT1_SetInterruptHandler:
  2069                           	callstack 26
  2070   000B6E                     
  2071                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 299:     if(((void*)0) == InterruptHand
      +                          ler){
  2072   000B6E  5047               	movf	INT1_SetInterruptHandler@InterruptHandler^0,w,c
  2073   000B70  1048               	iorwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2074   000B72  A4D8               	btfss	status,2,c
  2075   000B74  EFBE  F005         	goto	u1161
  2076   000B78  EFC0  F005         	goto	u1160
  2077   000B7C                     u1161:
  2078   000B7C  EFC2  F005         	goto	l1861
  2079   000B80                     u1160:
  2080   000B80                     
  2081                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 301:     }
  2082   000B80  EFC6  F005         	goto	l274
  2083   000B84                     l1861:
  2084                           
  2085                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 303:         INT1_InterruptHandler = In
      +                          terruptHandler ;
  2086   000B84  C047  F03B         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2087   000B88  C048  F03C         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2088   000B8C                     l274:
  2089   000B8C  0012               	return		;funcret
  2090   000B8E                     __end_of_INT1_SetInterruptHandler:
  2091                           	callstack 0
  2092                           
  2093 ;; *************** function _INT0_SetInterruptHandler *****************
  2094 ;; Defined at:
  2095 ;;		line 285 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2098 ;;		 -> ContinuePause_ISR(1), StopWatchReset_ISR(1), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  ret_value       1    0        unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;Total ram usage:        2 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 3
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_Interrupt_INTx_Enable
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text10
  2125   000B8E                     __ptext10:
  2126                           	callstack 0
  2127   000B8E                     _INT0_SetInterruptHandler:
  2128                           	callstack 26
  2129   000B8E                     
  2130                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 287:     if(((void*)0) == InterruptHand
      +                          ler){
  2131   000B8E  5047               	movf	INT0_SetInterruptHandler@InterruptHandler^0,w,c
  2132   000B90  1048               	iorwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2133   000B92  A4D8               	btfss	status,2,c
  2134   000B94  EFCE  F005         	goto	u1151
  2135   000B98  EFD0  F005         	goto	u1150
  2136   000B9C                     u1151:
  2137   000B9C  EFD2  F005         	goto	l1849
  2138   000BA0                     u1150:
  2139   000BA0                     
  2140                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 289:     }
  2141   000BA0  EFD6  F005         	goto	l269
  2142   000BA4                     l1849:
  2143                           
  2144                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 291:         INT0_InterruptHandler = In
      +                          terruptHandler ;
  2145   000BA4  C047  F03D         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2146   000BA8  C048  F03E         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2147   000BAC                     l269:
  2148   000BAC  0012               	return		;funcret
  2149   000BAE                     __end_of_INT0_SetInterruptHandler:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _Edge_Config *****************
  2153 ;; Defined at:
  2154 ;;		line 176 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  object          2    2[COMRAM] PTR const struct .
  2157 ;;		 -> int1_obj(5), int0_obj(5), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  ret_value       1    0        unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      unsigned char 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;Total ram usage:        4 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 3
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_Interrupt_INTx_Enable
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text11
  2184   00061E                     __ptext11:
  2185                           	callstack 0
  2186   00061E                     _Edge_Config:
  2187                           	callstack 26
  2188   00061E                     
  2189                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 178:     if(((void*)0) == object)
  2190   00061E  5047               	movf	Edge_Config@object^0,w,c
  2191   000620  1048               	iorwf	(Edge_Config@object+1)^0,w,c
  2192   000622  A4D8               	btfss	status,2,c
  2193   000624  EF16  F003         	goto	u1081
  2194   000628  EF18  F003         	goto	u1080
  2195   00062C                     u1081:
  2196   00062C  EF80  F003         	goto	l1837
  2197   000630                     u1080:
  2198   000630                     l1803:
  2199                           
  2200                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 181:     }
  2201   000630  EFA2  F003         	goto	l264
  2202   000634                     l1805:
  2203                           
  2204                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 186:                     if( object->ed
      +                          ge == INTERRUPT_FALLING_EDGE ) { (INTCON2bits.INTEDG0=0); }
  2205   000634  EE20 F003          	lfsr	2,3
  2206   000638  5047               	movf	Edge_Config@object^0,w,c
  2207   00063A  26D9               	addwf	fsr2l,f,c
  2208   00063C  5048               	movf	(Edge_Config@object+1)^0,w,c
  2209   00063E  22DA               	addwfc	fsr2h,f,c
  2210   000640  50DF               	movf	indf2,w,c
  2211   000642  A4D8               	btfss	status,2,c
  2212   000644  EF26  F003         	goto	u1091
  2213   000648  EF28  F003         	goto	u1090
  2214   00064C                     u1091:
  2215   00064C  EF2B  F003         	goto	l1809
  2216   000650                     u1090:
  2217   000650  9CF1               	bcf	241,6,c	;volatile
  2218   000652  EF3A  F003         	goto	l1813
  2219   000656                     l1809:
  2220   000656  EE20 F003          	lfsr	2,3
  2221   00065A  5047               	movf	Edge_Config@object^0,w,c
  2222   00065C  26D9               	addwf	fsr2l,f,c
  2223   00065E  5048               	movf	(Edge_Config@object+1)^0,w,c
  2224   000660  22DA               	addwfc	fsr2h,f,c
  2225   000662  04DE               	decf	postinc2,w,c
  2226   000664  A4D8               	btfss	status,2,c
  2227   000666  EF37  F003         	goto	u1101
  2228   00066A  EF39  F003         	goto	u1100
  2229   00066E                     u1101:
  2230   00066E  EF3A  F003         	goto	l1813
  2231   000672                     u1100:
  2232   000672  8CF1               	bsf	241,6,c	;volatile
  2233   000674                     l1813:
  2234                           
  2235                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 190:                     break;
  2236   000674  EFA2  F003         	goto	l264
  2237   000678                     l1815:
  2238                           
  2239                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 192:                     if(object->edg
      +                          e == INTERRUPT_FALLING_EDGE) { (INTCON2bits.INTEDG1=0); }
  2240   000678  EE20 F003          	lfsr	2,3
  2241   00067C  5047               	movf	Edge_Config@object^0,w,c
  2242   00067E  26D9               	addwf	fsr2l,f,c
  2243   000680  5048               	movf	(Edge_Config@object+1)^0,w,c
  2244   000682  22DA               	addwfc	fsr2h,f,c
  2245   000684  50DF               	movf	indf2,w,c
  2246   000686  A4D8               	btfss	status,2,c
  2247   000688  EF48  F003         	goto	u1111
  2248   00068C  EF4A  F003         	goto	u1110
  2249   000690                     u1111:
  2250   000690  EF4D  F003         	goto	l1819
  2251   000694                     u1110:
  2252   000694  9AF1               	bcf	241,5,c	;volatile
  2253   000696  EF3A  F003         	goto	l1813
  2254   00069A                     l1819:
  2255   00069A  EE20 F003          	lfsr	2,3
  2256   00069E  5047               	movf	Edge_Config@object^0,w,c
  2257   0006A0  26D9               	addwf	fsr2l,f,c
  2258   0006A2  5048               	movf	(Edge_Config@object+1)^0,w,c
  2259   0006A4  22DA               	addwfc	fsr2h,f,c
  2260   0006A6  04DE               	decf	postinc2,w,c
  2261   0006A8  A4D8               	btfss	status,2,c
  2262   0006AA  EF59  F003         	goto	u1121
  2263   0006AE  EF5B  F003         	goto	u1120
  2264   0006B2                     u1121:
  2265   0006B2  EF3A  F003         	goto	l1813
  2266   0006B6                     u1120:
  2267   0006B6  8AF1               	bsf	241,5,c	;volatile
  2268   0006B8  EF3A  F003         	goto	l1813
  2269   0006BC                     l1825:
  2270                           
  2271                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 198:                     if(object->edg
      +                          e == INTERRUPT_FALLING_EDGE) { (INTCON2bits.INTEDG2=0); }
  2272   0006BC  EE20 F003          	lfsr	2,3
  2273   0006C0  5047               	movf	Edge_Config@object^0,w,c
  2274   0006C2  26D9               	addwf	fsr2l,f,c
  2275   0006C4  5048               	movf	(Edge_Config@object+1)^0,w,c
  2276   0006C6  22DA               	addwfc	fsr2h,f,c
  2277   0006C8  50DF               	movf	indf2,w,c
  2278   0006CA  A4D8               	btfss	status,2,c
  2279   0006CC  EF6A  F003         	goto	u1131
  2280   0006D0  EF6C  F003         	goto	u1130
  2281   0006D4                     u1131:
  2282   0006D4  EF6F  F003         	goto	l1829
  2283   0006D8                     u1130:
  2284   0006D8  98F1               	bcf	241,4,c	;volatile
  2285   0006DA  EF3A  F003         	goto	l1813
  2286   0006DE                     l1829:
  2287   0006DE  EE20 F003          	lfsr	2,3
  2288   0006E2  5047               	movf	Edge_Config@object^0,w,c
  2289   0006E4  26D9               	addwf	fsr2l,f,c
  2290   0006E6  5048               	movf	(Edge_Config@object+1)^0,w,c
  2291   0006E8  22DA               	addwfc	fsr2h,f,c
  2292   0006EA  04DE               	decf	postinc2,w,c
  2293   0006EC  A4D8               	btfss	status,2,c
  2294   0006EE  EF7B  F003         	goto	u1141
  2295   0006F2  EF7D  F003         	goto	u1140
  2296   0006F6                     u1141:
  2297   0006F6  EF3A  F003         	goto	l1813
  2298   0006FA                     u1140:
  2299   0006FA  88F1               	bsf	241,4,c	;volatile
  2300   0006FC  EF3A  F003         	goto	l1813
  2301   000700                     l1837:
  2302   000700  EE20 F002          	lfsr	2,2
  2303   000704  5047               	movf	Edge_Config@object^0,w,c
  2304   000706  26D9               	addwf	fsr2l,f,c
  2305   000708  5048               	movf	(Edge_Config@object+1)^0,w,c
  2306   00070A  22DA               	addwfc	fsr2h,f,c
  2307   00070C  30DF               	rrcf	223,w,c
  2308   00070E  32E8               	rrcf	wreg,f,c
  2309   000710  32E8               	rrcf	wreg,f,c
  2310   000712  0B07               	andlw	7
  2311   000714  6E49               	movwf	??_Edge_Config^0,c
  2312   000716  6A4A               	clrf	(??_Edge_Config+1)^0,c
  2313                           
  2314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2315                           ; Switch size 1, requested type "simple"
  2316                           ; Number of cases is 1, Range of values is 0 to 0
  2317                           ; switch strategies available:
  2318                           ; Name         Instructions Cycles
  2319                           ; simple_byte            4     3 (average)
  2320                           ;	Chosen strategy is simple_byte
  2321   000718  504A               	movf	(??_Edge_Config+1)^0,w,c
  2322   00071A  0A00               	xorlw	0	; case 0
  2323   00071C  B4D8               	btfsc	status,2,c
  2324   00071E  EF93  F003         	goto	l2205
  2325   000722  EF18  F003         	goto	l1803
  2326   000726                     l2205:
  2327                           
  2328                           ; Switch size 1, requested type "simple"
  2329                           ; Number of cases is 3, Range of values is 0 to 2
  2330                           ; switch strategies available:
  2331                           ; Name         Instructions Cycles
  2332                           ; simple_byte           10     6 (average)
  2333                           ;	Chosen strategy is simple_byte
  2334   000726  5049               	movf	??_Edge_Config^0,w,c
  2335   000728  0A00               	xorlw	0	; case 0
  2336   00072A  B4D8               	btfsc	status,2,c
  2337   00072C  EF1A  F003         	goto	l1805
  2338   000730  0A01               	xorlw	1	; case 1
  2339   000732  B4D8               	btfsc	status,2,c
  2340   000734  EF3C  F003         	goto	l1815
  2341   000738  0A03               	xorlw	3	; case 2
  2342   00073A  B4D8               	btfsc	status,2,c
  2343   00073C  EF5E  F003         	goto	l1825
  2344   000740  EF18  F003         	goto	l1803
  2345   000744                     l264:
  2346   000744  0012               	return		;funcret
  2347   000746                     __end_of_Edge_Config:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function _InterruptManager *****************
  2351 ;; Defined at:
  2352 ;;		line 27 in file "MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:        2 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 2
  2373 ;; This function calls:
  2374 ;;		_INT0_ISR
  2375 ;;		_INT1_ISR
  2376 ;; This function is called by:
  2377 ;;		Interrupt level 2
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	intcode
  2382   000008                     __pintcode:
  2383                           	callstack 0
  2384   000008                     _InterruptManager:
  2385                           	callstack 25
  2386                           
  2387                           ;incstack = 0
  2388   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2389   00000A  EDDA  F004         	call	int_func,f	;refresh shadow registers
  2390                           
  2391                           	psect	intcode_body
  2392   0009B4                     __pintcode_body:
  2393                           	callstack 25
  2394   0009B4                     int_func:
  2395                           	callstack 25
  2396   0009B4  0006               	pop		; remove dummy address from shadow register refresh
  2397   0009B6  CFFA F045          	movff	pclath,??_InterruptManager
  2398   0009BA  CFFB F046          	movff	pclatu,??_InterruptManager+1
  2399   0009BE                     
  2400                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 28:     if((1 == INTCONbits.INT0IE )&& (
      +                          1 == INTCONbits.INT0IF))
  2401   0009BE  A8F2               	btfss	242,4,c	;volatile
  2402   0009C0  EFE4  F004         	goto	i2u86_41
  2403   0009C4  EFE6  F004         	goto	i2u86_40
  2404   0009C8                     i2u86_41:
  2405   0009C8  EFEF  F004         	goto	i2l341
  2406   0009CC                     i2u86_40:
  2407   0009CC  A2F2               	btfss	242,1,c	;volatile
  2408   0009CE  EFEB  F004         	goto	i2u87_41
  2409   0009D2  EFED  F004         	goto	i2u87_40
  2410   0009D6                     i2u87_41:
  2411   0009D6  EFEF  F004         	goto	i2l341
  2412   0009DA                     i2u87_40:
  2413   0009DA                     
  2414                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 29:     {;MCAL_Layer/INTERRUPT/mcal_inte
      +                          rrupt_manager.c: 30:         INT0_ISR();
  2415   0009DA  EC7B  F005         	call	_INT0_ISR	;wreg free
  2416   0009DE                     i2l341:
  2417                           
  2418                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 34:     if((1 == INTCON3bits.INT1IE )&& 
      +                          (1 == INTCON3bits.INT1IF))
  2419   0009DE  A6F0               	btfss	240,3,c	;volatile
  2420   0009E0  EFF4  F004         	goto	i2u88_41
  2421   0009E4  EFF6  F004         	goto	i2u88_40
  2422   0009E8                     i2u88_41:
  2423   0009E8  EFFF  F004         	goto	i2l344
  2424   0009EC                     i2u88_40:
  2425   0009EC  A0F0               	btfss	240,0,c	;volatile
  2426   0009EE  EFFB  F004         	goto	i2u89_41
  2427   0009F2  EFFD  F004         	goto	i2u89_40
  2428   0009F6                     i2u89_41:
  2429   0009F6  EFFF  F004         	goto	i2l344
  2430   0009FA                     i2u89_40:
  2431   0009FA                     
  2432                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 35:     {;MCAL_Layer/INTERRUPT/mcal_inte
      +                          rrupt_manager.c: 36:         INT1_ISR();
  2433   0009FA  EC63  F005         	call	_INT1_ISR	;wreg free
  2434   0009FE                     i2l344:
  2435   0009FE  C046  FFFB         	movff	??_InterruptManager+1,pclatu
  2436   000A02  C045  FFFA         	movff	??_InterruptManager,pclath
  2437   000A06  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2438   000A08  0011               	retfie		f
  2439   000A0A                     __end_of_InterruptManager:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function _INT1_ISR *****************
  2443 ;; Defined at:
  2444 ;;		line 330 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 1
  2465 ;; This function calls:
  2466 ;;		Absolute function
  2467 ;;		_ContinuePause_ISR
  2468 ;;		_StopWatchReset_ISR
  2469 ;; This function is called by:
  2470 ;;		_InterruptManager
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text13
  2475   000AC6                     __ptext13:
  2476                           	callstack 0
  2477   000AC6                     _INT1_ISR:
  2478                           	callstack 25
  2479   000AC6                     
  2480                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 331:     (INTCON3bits.INT1IF=0);
  2481   000AC6  90F0               	bcf	240,0,c	;volatile
  2482   000AC8                     
  2483                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 332:     if(INT1_InterruptHandler)
  2484   000AC8  503B               	movf	_INT1_InterruptHandler^0,w,c
  2485   000ACA  103C               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  2486   000ACC  B4D8               	btfsc	status,2,c
  2487   000ACE  EF6B  F005         	goto	i2u29_41
  2488   000AD2  EF6D  F005         	goto	i2u29_40
  2489   000AD6                     i2u29_41:
  2490   000AD6  EF7A  F005         	goto	i2l287
  2491   000ADA                     i2u29_40:
  2492   000ADA                     
  2493                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 333:     {;MCAL_Layer/INTERRUPT/mcal_ex
      +                          ternal_interrupt.c: 334:         INT1_InterruptHandler();
  2494   000ADA  D802               	call	i2u30_48
  2495   000ADC  EF7A  F005         	goto	i2u30_49
  2496   000AE0                     i2u30_48:
  2497   000AE0  0005               	push	
  2498   000AE2  6EFA               	movwf	pclath,c
  2499   000AE4  503B               	movf	_INT1_InterruptHandler^0,w,c
  2500   000AE6  6EFD               	movwf	tosl,c
  2501   000AE8  503C               	movf	(_INT1_InterruptHandler+1)^0,w,c
  2502   000AEA  6EFE               	movwf	tosh,c
  2503   000AEC  50F8               	movf	tblptru,w,c
  2504   000AEE  6EFF               	movwf	tosu,c
  2505   000AF0  50FA               	movf	pclath,w,c
  2506   000AF2  0012               	return		;indir
  2507   000AF4                     i2u30_49:
  2508   000AF4                     i2l287:
  2509   000AF4  0012               	return		;funcret
  2510   000AF6                     __end_of_INT1_ISR:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _INT0_ISR *****************
  2514 ;; Defined at:
  2515 ;;		line 321 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 1
  2536 ;; This function calls:
  2537 ;;		Absolute function
  2538 ;;		_ContinuePause_ISR
  2539 ;;		_StopWatchReset_ISR
  2540 ;; This function is called by:
  2541 ;;		_InterruptManager
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text14
  2546   000AF6                     __ptext14:
  2547                           	callstack 0
  2548   000AF6                     _INT0_ISR:
  2549                           	callstack 25
  2550   000AF6                     
  2551                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 322:     (INTCONbits.INT0IF=0);
  2552   000AF6  92F2               	bcf	242,1,c	;volatile
  2553   000AF8                     
  2554                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 324:     if(INT0_InterruptHandler)
  2555   000AF8  503D               	movf	_INT0_InterruptHandler^0,w,c
  2556   000AFA  103E               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  2557   000AFC  B4D8               	btfsc	status,2,c
  2558   000AFE  EF83  F005         	goto	i2u27_41
  2559   000B02  EF85  F005         	goto	i2u27_40
  2560   000B06                     i2u27_41:
  2561   000B06  EF92  F005         	goto	i2l283
  2562   000B0A                     i2u27_40:
  2563   000B0A                     
  2564                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 325:     {;MCAL_Layer/INTERRUPT/mcal_ex
      +                          ternal_interrupt.c: 326:         INT0_InterruptHandler();
  2565   000B0A  D802               	call	i2u28_48
  2566   000B0C  EF92  F005         	goto	i2u28_49
  2567   000B10                     i2u28_48:
  2568   000B10  0005               	push	
  2569   000B12  6EFA               	movwf	pclath,c
  2570   000B14  503D               	movf	_INT0_InterruptHandler^0,w,c
  2571   000B16  6EFD               	movwf	tosl,c
  2572   000B18  503E               	movf	(_INT0_InterruptHandler+1)^0,w,c
  2573   000B1A  6EFE               	movwf	tosh,c
  2574   000B1C  50F8               	movf	tblptru,w,c
  2575   000B1E  6EFF               	movwf	tosu,c
  2576   000B20  50FA               	movf	pclath,w,c
  2577   000B22  0012               	return		;indir
  2578   000B24                     i2u28_49:
  2579   000B24                     i2l283:
  2580   000B24  0012               	return		;funcret
  2581   000B26                     __end_of_INT0_ISR:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _ContinuePause_ISR *****************
  2585 ;; Defined at:
  2586 ;;		line 29 in file "appliction.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_INT0_ISR
  2610 ;;		_INT1_ISR
  2611 ;;		_INT2_ISR
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text15
  2616   000BAE                     __ptext15:
  2617                           	callstack 0
  2618   000BAE                     _ContinuePause_ISR:
  2619                           	callstack 25
  2620   000BAE                     
  2621                           ;appliction.c: 31:     if(0==watchFlag){
  2622   000BAE  503F               	movf	_watchFlag^0,w,c
  2623   000BB0  A4D8               	btfss	status,2,c
  2624   000BB2  EFDD  F005         	goto	i2u23_41
  2625   000BB6  EFDF  F005         	goto	i2u23_40
  2626   000BBA                     i2u23_41:
  2627   000BBA  EFE3  F005         	goto	i2l1209
  2628   000BBE                     i2u23_40:
  2629   000BBE                     
  2630                           ;appliction.c: 32:         watchFlag=1;
  2631   000BBE  0E01               	movlw	1
  2632   000BC0  6E3F               	movwf	_watchFlag^0,c
  2633                           
  2634                           ;appliction.c: 33:     }
  2635   000BC2  EFE5  F005         	goto	i2l372
  2636   000BC6                     i2l1209:
  2637                           
  2638                           ;appliction.c: 35:     {;appliction.c: 36:        watchFlag = 0;
  2639   000BC6  0E00               	movlw	0
  2640   000BC8  6E3F               	movwf	_watchFlag^0,c
  2641   000BCA                     i2l372:
  2642   000BCA  0012               	return		;funcret
  2643   000BCC                     __end_of_ContinuePause_ISR:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _StopWatchReset_ISR *****************
  2647 ;; Defined at:
  2648 ;;		line 21 in file "appliction.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_INT0_ISR
  2672 ;;		_INT1_ISR
  2673 ;;		_INT2_ISR
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text16
  2678   000BCC                     __ptext16:
  2679                           	callstack 0
  2680   000BCC                     _StopWatchReset_ISR:
  2681                           	callstack 25
  2682   000BCC                     
  2683                           ;appliction.c: 22:     miniSeconds = 0;
  2684   000BCC  0E00               	movlw	0
  2685   000BCE  6E43               	movwf	_miniSeconds^0,c
  2686                           
  2687                           ;appliction.c: 23:     seconds = 0;
  2688   000BD0  0E00               	movlw	0
  2689   000BD2  6E42               	movwf	_seconds^0,c
  2690                           
  2691                           ;appliction.c: 24:     minutes =0;
  2692   000BD4  0E00               	movlw	0
  2693   000BD6  6E41               	movwf	_minutes^0,c
  2694                           
  2695                           ;appliction.c: 25:     counter=0;
  2696   000BD8  0E00               	movlw	0
  2697   000BDA  6E40               	movwf	_counter^0,c
  2698                           
  2699                           ;appliction.c: 26:     watchFlag=0;
  2700   000BDC  0E00               	movlw	0
  2701   000BDE  6E3F               	movwf	_watchFlag^0,c
  2702   000BE0  0012               	return		;funcret
  2703   000BE2                     __end_of_StopWatchReset_ISR:
  2704                           	callstack 0
  2705   000000                     
  2706                           	psect	text17
  2707   000000                     __ptext17:
  2708                           	callstack 0
  2709   000000                     
  2710                           	psect	rparam
  2711   000000                     
  2712                           	psect	temp
  2713   00005F                     btemp:
  2714                           	callstack 0
  2715   00005F                     	ds	1
  2716   000000                     int$flags	set	btemp
  2717   000000                     wtemp8	set	btemp+1
  2718   000000                     ttemp5	set	btemp+1
  2719   000000                     ttemp6	set	btemp+4
  2720   000000                     ttemp7	set	btemp+8
  2721                           
  2722                           	psect	idloc
  2723                           
  2724                           ;Config register IDLOC0 @ 0x200000
  2725                           ;	unspecified, using default values
  2726   200000                     	org	2097152
  2727   200000  FF                 	db	255
  2728                           
  2729                           ;Config register IDLOC1 @ 0x200001
  2730                           ;	unspecified, using default values
  2731   200001                     	org	2097153
  2732   200001  FF                 	db	255
  2733                           
  2734                           ;Config register IDLOC2 @ 0x200002
  2735                           ;	unspecified, using default values
  2736   200002                     	org	2097154
  2737   200002  FF                 	db	255
  2738                           
  2739                           ;Config register IDLOC3 @ 0x200003
  2740                           ;	unspecified, using default values
  2741   200003                     	org	2097155
  2742   200003  FF                 	db	255
  2743                           
  2744                           ;Config register IDLOC4 @ 0x200004
  2745                           ;	unspecified, using default values
  2746   200004                     	org	2097156
  2747   200004  FF                 	db	255
  2748                           
  2749                           ;Config register IDLOC5 @ 0x200005
  2750                           ;	unspecified, using default values
  2751   200005                     	org	2097157
  2752   200005  FF                 	db	255
  2753                           
  2754                           ;Config register IDLOC6 @ 0x200006
  2755                           ;	unspecified, using default values
  2756   200006                     	org	2097158
  2757   200006  FF                 	db	255
  2758                           
  2759                           ;Config register IDLOC7 @ 0x200007
  2760                           ;	unspecified, using default values
  2761   200007                     	org	2097159
  2762   200007  FF                 	db	255
  2763                           
  2764                           	psect	config
  2765                           
  2766                           ; Padding undefined space
  2767   300000                     	org	3145728
  2768   300000  FF                 	db	255
  2769                           
  2770                           ;Config register CONFIG1H @ 0x300001
  2771                           ;	Oscillator Selection bits
  2772                           ;	OSC = HS, HS oscillator
  2773                           ;	Fail-Safe Clock Monitor Enable bit
  2774                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2775                           ;	Internal/External Oscillator Switchover bit
  2776                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2777   300001                     	org	3145729
  2778   300001  02                 	db	2
  2779                           
  2780                           ;Config register CONFIG2L @ 0x300002
  2781                           ;	Power-up Timer Enable bit
  2782                           ;	PWRT = OFF, PWRT disabled
  2783                           ;	Brown-out Reset Enable bits
  2784                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2785                           ;	Brown Out Reset Voltage bits
  2786                           ;	BORV = 1, 
  2787   300002                     	org	3145730
  2788   300002  09                 	db	9
  2789                           
  2790                           ;Config register CONFIG2H @ 0x300003
  2791                           ;	Watchdog Timer Enable bit
  2792                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2793                           ;	Watchdog Timer Postscale Select bits
  2794                           ;	WDTPS = 32768, 1:32768
  2795   300003                     	org	3145731
  2796   300003  1E                 	db	30
  2797                           
  2798                           ; Padding undefined space
  2799   300004                     	org	3145732
  2800   300004  FF                 	db	255
  2801                           
  2802                           ;Config register CONFIG3H @ 0x300005
  2803                           ;	CCP2 MUX bit
  2804                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2805                           ;	PORTB A/D Enable bit
  2806                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2807                           ;	Low-Power Timer1 Oscillator Enable bit
  2808                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2809                           ;	MCLR Pin Enable bit
  2810                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2811   300005                     	org	3145733
  2812   300005  81                 	db	129
  2813                           
  2814                           ;Config register CONFIG4L @ 0x300006
  2815                           ;	Stack Full/Underflow Reset Enable bit
  2816                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2817                           ;	Single-Supply ICSP Enable bit
  2818                           ;	LVP = OFF, Single-Supply ICSP disabled
  2819                           ;	Extended Instruction Set Enable bit
  2820                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2821                           ;	Background Debugger Enable bit
  2822                           ;	DEBUG = 0x1, unprogrammed default
  2823   300006                     	org	3145734
  2824   300006  81                 	db	129
  2825                           
  2826                           ; Padding undefined space
  2827   300007                     	org	3145735
  2828   300007  FF                 	db	255
  2829                           
  2830                           ;Config register CONFIG5L @ 0x300008
  2831                           ;	Code Protection bit
  2832                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2833                           ;	Code Protection bit
  2834                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2835                           ;	Code Protection bit
  2836                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2837                           ;	Code Protection bit
  2838                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2839   300008                     	org	3145736
  2840   300008  0F                 	db	15
  2841                           
  2842                           ;Config register CONFIG5H @ 0x300009
  2843                           ;	Boot Block Code Protection bit
  2844                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2845                           ;	Data EEPROM Code Protection bit
  2846                           ;	CPD = OFF, Data EEPROM not code-protected
  2847   300009                     	org	3145737
  2848   300009  C0                 	db	192
  2849                           
  2850                           ;Config register CONFIG6L @ 0x30000A
  2851                           ;	Write Protection bit
  2852                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2853                           ;	Write Protection bit
  2854                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2855                           ;	Write Protection bit
  2856                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2857                           ;	Write Protection bit
  2858                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2859   30000A                     	org	3145738
  2860   30000A  0F                 	db	15
  2861                           
  2862                           ;Config register CONFIG6H @ 0x30000B
  2863                           ;	Configuration Register Write Protection bit
  2864                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2865                           ;	Boot Block Write Protection bit
  2866                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2867                           ;	Data EEPROM Write Protection bit
  2868                           ;	WRTD = OFF, Data EEPROM not write-protected
  2869   30000B                     	org	3145739
  2870   30000B  E0                 	db	224
  2871                           
  2872                           ;Config register CONFIG7L @ 0x30000C
  2873                           ;	Table Read Protection bit
  2874                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2875                           ;	Table Read Protection bit
  2876                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2877                           ;	Table Read Protection bit
  2878                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2879                           ;	Table Read Protection bit
  2880                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2881   30000C                     	org	3145740
  2882   30000C  0F                 	db	15
  2883                           
  2884                           ;Config register CONFIG7H @ 0x30000D
  2885                           ;	Boot Block Table Read Protection bit
  2886                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2887   30000D                     	org	3145741
  2888   30000D  40                 	db	64
  2889                           tosu	equ	0xFFF
  2890                           tosh	equ	0xFFE
  2891                           tosl	equ	0xFFD
  2892                           stkptr	equ	0xFFC
  2893                           pclatu	equ	0xFFB
  2894                           pclath	equ	0xFFA
  2895                           pcl	equ	0xFF9
  2896                           tblptru	equ	0xFF8
  2897                           tblptrh	equ	0xFF7
  2898                           tblptrl	equ	0xFF6
  2899                           tablat	equ	0xFF5
  2900                           prodh	equ	0xFF4
  2901                           prodl	equ	0xFF3
  2902                           indf0	equ	0xFEF
  2903                           postinc0	equ	0xFEE
  2904                           postdec0	equ	0xFED
  2905                           preinc0	equ	0xFEC
  2906                           plusw0	equ	0xFEB
  2907                           fsr0h	equ	0xFEA
  2908                           fsr0l	equ	0xFE9
  2909                           wreg	equ	0xFE8
  2910                           indf1	equ	0xFE7
  2911                           postinc1	equ	0xFE6
  2912                           postdec1	equ	0xFE5
  2913                           preinc1	equ	0xFE4
  2914                           plusw1	equ	0xFE3
  2915                           fsr1h	equ	0xFE2
  2916                           fsr1l	equ	0xFE1
  2917                           bsr	equ	0xFE0
  2918                           indf2	equ	0xFDF
  2919                           postinc2	equ	0xFDE
  2920                           postdec2	equ	0xFDD
  2921                           preinc2	equ	0xFDC
  2922                           plusw2	equ	0xFDB
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     26      94
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    int1_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    int0_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    Edge_Config@object.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    Edge_Config@object	PTR const struct . size(2) Largest target is 5
		 -> int1_obj(COMRAM[5]), int0_obj(COMRAM[5]), 

    RB7_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S371$EXT_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@object.EXT_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 0

    S371$EXT_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@object.EXT_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@object.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    S242$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    Interrupt_INTx_Enable@object.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    Interrupt_INTx_Enable@object	PTR const struct . size(2) Largest target is 5
		 -> int1_obj(COMRAM[5]), int0_obj(COMRAM[5]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> int1_obj(COMRAM[5]), int0_obj(COMRAM[5]), 

    gpio_pin_init@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> int1_obj(COMRAM[5]), int0_obj(COMRAM[5]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISB(BITBIGSFRhll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_Interrupt_INTx_Enable
    _gpio_port_write_logic->___awdiv
    _Interrupt_INTx_Enable->_gpio_pin_init
    _gpio_pin_init->_gpio_pin_write_logic

Critical Paths under _InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7465
                                             25 COMRAM     1     1      0
              _Interrupt_INTx_Enable
                            ___awdiv
                            ___awmod
                     _gpio_port_init
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1    1898
                                             10 COMRAM     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _gpio_port_init                                       5     4      1     242
                                              2 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1208
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Interrupt_INTx_Enable                                5     3      2    2905
                                             21 COMRAM     4     2      2
                        _Edge_Config
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
                      _gpio_pin_init
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_init                                        9     7      2    1739
                                             12 COMRAM     9     7      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                10     7      3     961
                                              2 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _INT2_SetInterruptHandler                             3     1      2     129
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     1      2     129
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INT0_SetInterruptHandler                             3     1      2     129
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Edge_Config                                          5     3      2     416
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                   Absolute function *
                  _ContinuePause_ISR *
                 _StopWatchReset_ISR *
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
                   Absolute function *
                  _ContinuePause_ISR *
                 _StopWatchReset_ISR *
 ---------------------------------------------------------------------------------
 (6) _StopWatchReset_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ContinuePause_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_INTx_Enable
     _Edge_Config
     _INT0_SetInterruptHandler
     _INT1_SetInterruptHandler
     _INT2_SetInterruptHandler
     _gpio_pin_init
       _gpio_pin_write_logic
   ___awdiv
   ___awmod
   _gpio_port_init
   _gpio_port_write_logic
     ___awdiv (ARG)
     ___awmod (ARG)

 _InterruptManager (ROOT)
   _INT0_ISR
     Absolute function(Fake) *
     _ContinuePause_ISR *
     _StopWatchReset_ISR *
   _INT1_ISR
     Absolute function(Fake) *
     _ContinuePause_ISR *
     _StopWatchReset_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1A      5E       1       74.6%
BITBIGSFRhll        59      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      26        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Apr 05 21:05:36 2023

                      ??_InterruptManager 0045                              ___awdiv@sign 004C  
                                     l102 04D2                                       l121 061C  
                                     l210 079E                                       l211 07CC  
                                     l140 0A4E                                       l213 083E  
                                     l208 0770                                       l152 0A8A  
                                     l264 0744                                       l274 0B8C  
                                     l269 0BAC                                       l279 0B6C  
                                     l640 09B2                                       l627 0902  
                                     u960 04EA                                       u961 04E6  
                                     u970 050C                                       u971 0508  
                                     u980 052A                                       u981 0526  
                                     u994 0552                                       u995 054E  
              ??_INT0_SetInterruptHandler 0049                                       _ret 0044  
                            ___awmod@sign 004C                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                                    l2001 0930                                      l2011 0968  
                                    l2003 0938                                      l2021 09A2  
                                    l2013 097E                                      l2005 094A  
                                    l2101 0042                                      l2023 09AA  
                                    l2015 0986                                      l2007 0952  
                                    l2111 0096                                      l2201 049C  
                                    l2017 098C                                      l2009 095A  
                                    l2121 011E                                      l2113 00B2  
                                    l2105 0056                                      l2203 0604  
                                    l2019 0992                                      l2123 0154  
                                    l2115 00E8                                      l2107 007C  
                                    l2131 019A                                      l2205 0726  
                                    l2141 01D2                                      l2125 0164  
                                    l2117 00F8                                      l2109 008C  
                                    l2133 01AA                                      l2151 0264  
                                    l2143 01F8                                      l2135 01BA  
                                    l2127 016E                                      l2119 0102  
                                    l2161 02E0                                      l2153 0274  
                                    l2145 0208                                      l2137 01BE  
                                    l2129 018A                                      l2163 02EA  
                                    l2155 027E                                      l2147 0212  
                                    l2171 031C                                      l2181 0348  
                                    l2173 031E                                      l2165 0306  
                                    l2157 029A                                      l2149 022E  
                                    l2175 0330                                      l2167 0316  
                                    l2159 02D0                                      l1801 061E  
                                    l2177 0332                                      l1811 0672  
                                    l1803 0630                                      l2179 0336  
                                    l2099 0012                                      l1821 06B6  
                                    l1813 0674                                      l1805 0634  
                                    l1901 0746                                      l1831 06FA  
                                    l1815 0678                                      l1807 0650  
                                    l1751 050C                                      l2199 0820  
                                    l1911 0794                                      l1903 0746  
                                    l1825 06BC                                      l1817 0694  
                                    l1809 0656                                      l1761 05F0  
                                    l1753 052A                                      l1745 04D4  
                                    l1921 07AE                                      l1913 0796  
                                    l1905 0758                                      l1827 06D8  
                                    l1819 069A                                      l1851 0BAC  
                                    l1843 0B8E                                      l1755 0532  
                                    l1763 061A                                      l1747 04D8  
                                    l1771 0354                                      l1931 07DC  
                                    l1923 07B0                                      l1915 0798  
                                    l1907 075C                                      l1829 06DE  
                                    l1837 0700                                      l1845 0B8E  
                                    l1861 0B84                                      l1757 0594  
                                    l1749 04EA                                      l1781 03AE  
                                    l1773 0354                                      l1933 07DE  
                                    l1925 07C6                                      l1917 079A  
                                    l1909 0774                                      l1941 07FA  
                                    l1847 0BA0                                      l1863 0B8C  
                                    l1855 0B6E                                      l1871 0B60  
                                    l1783 0410                                      l1791 04D0  
                                    l1775 0366                                      l1935 07F4  
                                    l1919 07A2                                      l1951 0852  
                                    l1849 0BA4                                      l1857 0B6E  
                                    l1873 0B64                                      l1785 046C  
                                    l1777 0388                                      l1929 07D0  
                                    l1961 0878                                      l1953 085A  
                                    l1881 0A10                                      l1859 0B80  
                                    l1875 0B6C                                      l1867 0B4E  
                                    l1787 0470                                      l1779 03A6  
                                    l1971 08B0                                      l1963 0880  
                                    l1955 085E                                      l1947 0840  
                                    l1883 0A20                                      l1891 0A52  
                                    l1869 0B4E                                      l1789 04B2  
                                    l1981 08DC                                      l1973 08B6  
                                    l1965 0892                                      l1957 086C  
                                    l1949 0844                                      l1885 0A28  
                                    l1893 0A52                                      l1799 061E  
                                    l1975 08CC                                      l1967 089A  
                                    l1983 08E2                                      l1959 0874  
                                    l1991 0904                                      l1887 0A4C  
                                    l1879 0A0C                                      l1895 0A62  
                                    l1985 08F2                                      l1977 08D4  
                                    l1969 08A2                                      l1993 0908  
                                    l1897 0A66                                      l1987 08FA  
                                    l1979 08D6                                      l1995 0916  
                                    l1997 091E                                      l1999 0922  
                                    u1010 0366                                      u1011 0362  
                                    u1100 0672                                      u1004 05B4  
                                    u1020 0388                                      u1101 066E  
                                    u1005 05B0                                      u1021 0384  
                                    u1110 0694                                      u1030 03A6  
                                    u1111 0690                                      u1031 03A2  
                                    u1120 06B6                                      u1200 0758  
                                    u1121 06B2                                      u1201 0754  
                                    u1130 06D8                                      u1210 0852  
                                    u1131 06D4                                      u1211 084E  
                                    u1140 06FA                                      u1060 0488  
                                    u1044 03CE                                      u1220 086C  
                                    u1300 0968                                      u1141 06F6  
                                    u1061 0482                                      u1045 03CA  
                                    u1221 0868                                      u1301 0964  
                                    u1150 0BA0                                      u1070 048A  
                                    u1054 0430                                      u1230 0892  
                                    u1310 097E                                      u1151 0B9C  
                                    u1055 042C                                      u1231 088E  
                                    u1311 097A                                      u1080 0630  
                                    u1160 0B80                                      u1240 08B0  
                                    u1320 09A2                                      u1400 01BA  
                                    u1081 062C                                      u1161 0B7C  
                                    u1241 08AC                                      u1321 099E  
                                    u1401 01B6                                      u1090 0650  
                                    u1170 0B60                                      u1250 08CC  
                                    u1410 01CE                                      u1091 064C  
                                    u1171 0B5C                                      u1251 08C8  
                                    u1411 01CA                                      u1260 08F2  
                                    u1180 0A20                                      u1420 0330  
                                    u1261 08EE                                      u1181 0A1C  
                                    u1421 032C                                      _LATA 000F89  
                                    u1270 0916                                      u1190 0A62  
                                    u1430 0348                                      _LATB 000F8A  
                                    u1271 0912                                      u1191 0A5E  
                                    u1431 0344                                      _LATC 000F8B  
                                    u1280 0930                                      _LATD 000F8C  
                                    u1281 092C                                      _LATE 000F8D  
                                    u1290 094A                                      u1291 0946  
                                    u1507 01FE                                      u1380 0052  
                                    u1517 0234                                      u1381 004E  
                                    u1390 01AA                                      u1527 026A  
                                    u1391 01A6                                      u1447 0082  
                                    u1537 02A0                                      u1457 00B8  
                                    u1547 02D6                                      u1467 00EE  
                                    u1557 030C                                      u1477 0124  
                                    u1487 015A                                      u1497 0190  
                _RB4_InterruptHandlerHigh 0037                                      _main 0012  
                _RB7_InterruptHandlerHigh 002B                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005F  
               ?_INT2_SetInterruptHandler 0047                                      prodl 000FF3  
                                    start 000E                              ___param_bank 000000  
                             _Edge_Config 061E                     _gpio_port_write_logic 0A50  
                    _gpio_pin_write_logic 04D4                          __end_of_INT0_ISR 0B26  
                        __end_of_INT1_ISR 0AF6                                     ?_main 0045  
                         __end_of___awdiv 0904                           __end_of___awmod 09B4  
                         ___awdiv@divisor 0049                                     i2l341 09DE  
                                   i2l344 09FE                                     i2l283 0B24  
                                   i2l372 0BCA                                     i2l367 0BE0  
                                   i2l287 0AF4                           ___awdiv@counter 004B  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                _INT1_SetInterruptHandler 0B6E                                     pclath 000FFA  
                                   pclatu 000FFB                                     tablat 000FF5  
                                   ttemp5 0060                                     ttemp6 0063  
                                   ttemp7 0067                                     status 000FD8  
                                   wtemp8 0060                     fp__StopWatchReset_ISR 0000  
                         __initialization 0A8C                              __end_of_main 0354  
                   ?_gpio_pin_write_logic 0047                                    ??_main 005E  
                           __activetblptr 000002                          ___awdiv@dividend 0047  
                                  i2l1203 0BCC                                    i2l1205 0BAE  
                                  i2l1207 0BBE                                    i2l1209 0BC6  
                                  i2l1281 0AF8                                    i2l1283 0B0A  
                                  i2l1285 0AC6                                    i2l1279 0AF6  
                                  i2l1287 0AC8                                    i2l1289 0ADA  
                                  i2l1641 09EC                                    i2l1643 09FA  
                                  i2l1635 09BE                                    i2l1637 09CC  
                                  i2l1639 09DA                 gpio_port_write_logic@port 0052  
                 _RB6_InterruptHandlerLow 002D                    ?_gpio_port_write_logic 004F  
                               ??___awdiv 004B                                 ??___awmod 004B  
                           _gpio_pin_init 0354                                    clear_0 0AB2  
                        ___awdiv@quotient 004D                           ___awmod@divisor 0049  
                                  isa$std 000001                           ___awmod@counter 004B  
           __end_of_Interrupt_INTx_Enable 0840                              __pdataCOMRAM 0001  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8  INT2_SetInterruptHandler@InterruptHandler 0047  
INT1_SetInterruptHandler@InterruptHandler 0047  INT0_SetInterruptHandler@InterruptHandler 0047  
                              __accesstop 0080                   __end_of__initialization 0AB8  
                               ?_INT0_ISR 0045                                 ?_INT1_ISR 0045  
                           ___rparam_used 000001                    ??_gpio_pin_write_logic 004A  
                          __pcstackCOMRAM 0045                        _StopWatchReset_ISR 0BCC  
                          ?_gpio_pin_init 0051                       ?_StopWatchReset_ISR 0045  
        __end_of_INT2_SetInterruptHandler 0B6E                     _INT0_InterruptHandler 003D  
                    ??_StopWatchReset_ISR 0045                                ??_INT0_ISR 0045  
                              ??_INT1_ISR 0045                              ?_Edge_Config 0047  
              ??_INT1_SetInterruptHandler 0049                                   i2u23_40 0BBE  
                                 i2u30_48 0AE0                                   i2u23_41 0BBA  
                                 i2u30_49 0AF4                                   i2u27_40 0B0A  
                                 i2u27_41 0B06                                   i2u28_48 0B10  
                                 i2u29_40 0ADA                                   i2u28_49 0B24  
                                 i2u29_41 0AD6                                   i2u86_40 09CC  
                                 i2u86_41 09C8                                   i2u87_40 09DA  
                                 i2u87_41 09D6                                   i2u88_40 09EC  
                                 i2u88_41 09E8                                   i2u89_40 09FA  
                                 i2u89_41 09F6                  _RB6_InterruptHandlerHigh 002F  
               ?_INT0_SetInterruptHandler 0047                                   __Hparam 0000  
                                 __Lparam 0000                           ??_gpio_pin_init 0053  
                                 ___awdiv 0840                                   ___awmod 0904  
                                 __pcinit 0A8C                                   __ramtop 1000  
                       gpio_port_init@dir 0047                                   __ptext0 0012  
                                 __ptext1 0A50                                   __ptext2 0A0A  
                                 __ptext3 0904                                   __ptext4 0840  
                                 __ptext5 0746                                   __ptext6 0354  
                                 __ptext7 04D4                                   __ptext8 0B4E  
                                 __ptext9 0B6E                                   _counter 0040  
                        ___awmod@dividend 0047                                   _minutes 0041  
                                 _seconds 0042                            __pintcode_body 09B4  
                    end_of_initialization 0AB8                            _gpio_port_init 0A0A  
                _INT2_SetInterruptHandler 0B4E                             __Lmediumconst 0000  
                                 int_func 09B4                   ??_gpio_port_write_logic 0050  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                  gpio_pin_init@ret_value 0059                     _INT1_InterruptHandler 003B  
                        _InterruptManager 0008                         _ContinuePause_ISR 0BAE  
                  __end_of_gpio_port_init 0A50                        ?_ContinuePause_ISR 0045  
                     ??_ContinuePause_ISR 0045                   _RB4_InterruptHandlerLow 0035  
                 _RB7_InterruptHandlerLow 0029                             __pidataCOMRAM 0B26  
               __end_of_ContinuePause_ISR 0BCC                     _Interrupt_INTx_Enable 0746  
                     start_initialization 0A8C                           ?_gpio_port_init 0047  
                             __pbssCOMRAM 0029          __end_of_INT0_SetInterruptHandler 0BAE  
                gpio_pin_init@_pin_config 0051                     _INT2_InterruptHandler 0039  
                               __pintcode 0008           gpio_pin_write_logic@_pin_config 0047  
                                ?___awdiv 0047                                  ?___awmod 0047  
               gpio_pin_write_logic@logic 0049                    ?_Interrupt_INTx_Enable 005A  
              ??_INT2_SetInterruptHandler 0049                         Edge_Config@object 0047  
                _RB5_InterruptHandlerHigh 0033                                  _INT0_ISR 0AF6  
                                _INT1_ISR 0AC6                 ?_INT1_SetInterruptHandler 0047  
                __end_of_InterruptManager 0A0A             __end_of_gpio_port_write_logic 0A8C  
                               _watchFlag 003F                     __end_of_gpio_pin_init 04D4  
                 gpio_port_init@ret_value 004A                                 _port_regs 0001  
                               _tris_regs 0015                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 0AA0  
                _INT0_SetInterruptHandler 0B8E               Interrupt_INTx_Enable@object 005A  
                                __Hrparam 0000                                  __Lrparam 0000  
                        ??_gpio_port_init 0048                               _miniSeconds 0043  
                      gpio_port_init@port 004B                                  __ptext10 0B8E  
                                __ptext11 061E                                  __ptext13 0AC6  
                                __ptext14 0AF6                                  __ptext15 0BAE  
           gpio_pin_write_logic@ret_value 0050                                  __ptext16 0BCC  
                                __ptext17 0000                                  _int0_obj 0024  
                                _int1_obj 001F                                  _lat_regs 000B  
                 _RB5_InterruptHandlerLow 0031                                  isa$xinst 000000  
                           ??_Edge_Config 0049                                  int$flags 005F  
                              _INTCONbits 000FF2              __end_of_gpio_pin_write_logic 061E  
                                intlevel2 0000                      fp__ContinuePause_ISR 0000  
                 ??_Interrupt_INTx_Enable 005C                       __end_of_Edge_Config 0746  
        __end_of_INT1_SetInterruptHandler 0B8E                gpio_port_write_logic@logic 004F  
              __end_of_StopWatchReset_ISR 0BE2                         ?_InterruptManager 0045  
