

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Apr 06 01:09:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4620 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	idataCOMRAM
    72   000B3E                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _port_regs
    76   000B3E  80                 	db	128
    77   000B3F  0F                 	db	15
    78   000B40  81                 	db	129
    79   000B41  0F                 	db	15
    80   000B42  82                 	db	130
    81   000B43  0F                 	db	15
    82   000B44  83                 	db	131
    83   000B45  0F                 	db	15
    84   000B46  84                 	db	132
    85   000B47  0F                 	db	15
    86                           
    87                           ;initializer for _lat_regs
    88   000B48  89                 	db	137
    89   000B49  0F                 	db	15
    90   000B4A  8A                 	db	138
    91   000B4B  0F                 	db	15
    92   000B4C  8B                 	db	139
    93   000B4D  0F                 	db	15
    94   000B4E  8C                 	db	140
    95   000B4F  0F                 	db	15
    96   000B50  8D                 	db	141
    97   000B51  0F                 	db	15
    98                           
    99                           ;initializer for _tris_regs
   100   000B52  92                 	db	146
   101   000B53  0F                 	db	15
   102   000B54  93                 	db	147
   103   000B55  0F                 	db	15
   104   000B56  94                 	db	148
   105   000B57  0F                 	db	15
   106   000B58  95                 	db	149
   107   000B59  0F                 	db	15
   108   000B5A  96                 	db	150
   109   000B5B  0F                 	db	15
   110                           
   111                           ;initializer for _int1_obj
   112   000B5C  C6                 	db	low _ContinuePause_ISR
   113   000B5D  0B                 	db	high _ContinuePause_ISR
   114   000B5E  49                 	db	73
   115   000B5F  01                 	db	1
   116   000B60  00                 	db	0
   117                           
   118                           ;initializer for _int0_obj
   119   000B61  E4                 	db	low _StopWatchReset_ISR
   120   000B62  0B                 	db	high _StopWatchReset_ISR
   121   000B63  41                 	db	65
   122   000B64  01                 	db	1
   123   000B65  00                 	db	0
   124   000000                     _INTCON2bits	set	4081
   125   000000                     _PORTE	set	3972
   126   000000                     _PORTD	set	3971
   127   000000                     _PORTC	set	3970
   128   000000                     _PORTB	set	3969
   129   000000                     _PORTA	set	3968
   130   000000                     _LATA	set	3977
   131   000000                     _TRISA	set	3986
   132   000000                     _INTCON3bits	set	4080
   133   000000                     _INTCONbits	set	4082
   134   000000                     _TRISE	set	3990
   135   000000                     _TRISD	set	3989
   136   000000                     _TRISC	set	3988
   137   000000                     _TRISB	set	3987
   138   000000                     _LATE	set	3981
   139   000000                     _LATD	set	3980
   140   000000                     _LATC	set	3979
   141   000000                     _LATB	set	3978
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   000AA4                     __pcinit:
   147                           	callstack 0
   148   000AA4                     start_initialization:
   149                           	callstack 0
   150   000AA4                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (40 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155   000AA4  0E3E               	movlw	low __pidataCOMRAM
   156   000AA6  6EF6               	movwf	tblptrl,c
   157   000AA8  0E0B               	movlw	high __pidataCOMRAM
   158   000AAA  6EF7               	movwf	tblptrh,c
   159   000AAC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160   000AAE  6EF8               	movwf	tblptru,c
   161   000AB0  EE00  F001         	lfsr	0,__pdataCOMRAM
   162   000AB4  EE10 F028          	lfsr	1,40
   163   000AB8                     copy_data0:
   164   000AB8  0009               	tblrd		*+
   165   000ABA  CFF5 FFEE          	movff	tablat,postinc0
   166   000ABE  50E5               	movf	postdec1,w,c
   167   000AC0  50E1               	movf	fsr1l,w,c
   168   000AC2  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to COMRAM (28 bytes)
   171   000AC4  EE00  F029         	lfsr	0,__pbssCOMRAM
   172   000AC8  0E1C               	movlw	28
   173   000ACA                     clear_0:
   174   000ACA  6AEE               	clrf	postinc0,c
   175   000ACC  06E8               	decf	wreg,f,c
   176   000ACE  E1FD               	bnz	clear_0
   177   000AD0                     end_of_initialization:
   178                           	callstack 0
   179   000AD0                     __end_of__initialization:
   180                           	callstack 0
   181   000AD0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   182   000AD2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   183   000AD4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184   000AD6  6EF8               	movwf	tblptru,c
   185   000AD8  0100               	movlb	0
   186   000ADA  EF09  F000         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189   000029                     __pbssCOMRAM:
   190                           	callstack 0
   191   000029                     _RB7_InterruptHandlerLow:
   192                           	callstack 0
   193   000029                     	ds	2
   194   00002B                     _RB7_InterruptHandlerHigh:
   195                           	callstack 0
   196   00002B                     	ds	2
   197   00002D                     _RB6_InterruptHandlerLow:
   198                           	callstack 0
   199   00002D                     	ds	2
   200   00002F                     _RB6_InterruptHandlerHigh:
   201                           	callstack 0
   202   00002F                     	ds	2
   203   000031                     _RB5_InterruptHandlerLow:
   204                           	callstack 0
   205   000031                     	ds	2
   206   000033                     _RB5_InterruptHandlerHigh:
   207                           	callstack 0
   208   000033                     	ds	2
   209   000035                     _RB4_InterruptHandlerLow:
   210                           	callstack 0
   211   000035                     	ds	2
   212   000037                     _RB4_InterruptHandlerHigh:
   213                           	callstack 0
   214   000037                     	ds	2
   215   000039                     _INT2_InterruptHandler:
   216                           	callstack 0
   217   000039                     	ds	2
   218   00003B                     _INT1_InterruptHandler:
   219                           	callstack 0
   220   00003B                     	ds	2
   221   00003D                     _INT0_InterruptHandler:
   222                           	callstack 0
   223   00003D                     	ds	2
   224   00003F                     _watchFlag:
   225                           	callstack 0
   226   00003F                     	ds	1
   227   000040                     _counter:
   228                           	callstack 0
   229   000040                     	ds	1
   230   000041                     _minutes:
   231                           	callstack 0
   232   000041                     	ds	1
   233   000042                     _seconds:
   234                           	callstack 0
   235   000042                     	ds	1
   236   000043                     _miniSeconds:
   237                           	callstack 0
   238   000043                     	ds	1
   239   000044                     _ret:
   240                           	callstack 0
   241   000044                     	ds	1
   242                           
   243                           	psect	dataCOMRAM
   244   000001                     __pdataCOMRAM:
   245                           	callstack 0
   246   000001                     _port_regs:
   247                           	callstack 0
   248   000001                     	ds	10
   249   00000B                     _lat_regs:
   250                           	callstack 0
   251   00000B                     	ds	10
   252   000015                     _tris_regs:
   253                           	callstack 0
   254   000015                     	ds	10
   255   00001F                     _int1_obj:
   256                           	callstack 0
   257   00001F                     	ds	5
   258   000024                     _int0_obj:
   259                           	callstack 0
   260   000024                     	ds	5
   261                           
   262                           	psect	cstackCOMRAM
   263   000045                     __pcstackCOMRAM:
   264                           	callstack 0
   265   000045                     ??_InterruptManager:
   266   000045                     
   267                           ; 2 bytes @ 0x0
   268   000045                     	ds	2
   269   000047                     ?___awdiv:
   270                           	callstack 0
   271   000047                     ?___awmod:
   272                           	callstack 0
   273   000047                     gpio_port_init@dir:
   274                           	callstack 0
   275   000047                     gpio_pin_write_logic@_pin_config:
   276                           	callstack 0
   277   000047                     Edge_Config@object:
   278                           	callstack 0
   279   000047                     INT0_SetInterruptHandler@InterruptHandler:
   280                           	callstack 0
   281   000047                     INT1_SetInterruptHandler@InterruptHandler:
   282                           	callstack 0
   283   000047                     INT2_SetInterruptHandler@InterruptHandler:
   284                           	callstack 0
   285   000047                     ___awdiv@dividend:
   286                           	callstack 0
   287   000047                     ___awmod@dividend:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x2
   291   000047                     	ds	1
   292   000048                     ??_gpio_port_init:
   293                           
   294                           ; 1 bytes @ 0x3
   295   000048                     	ds	1
   296   000049                     ??_Edge_Config:
   297   000049                     gpio_pin_write_logic@logic:
   298                           	callstack 0
   299   000049                     ___awdiv@divisor:
   300                           	callstack 0
   301   000049                     ___awmod@divisor:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x4
   305   000049                     	ds	1
   306   00004A                     ??_gpio_pin_write_logic:
   307   00004A                     gpio_port_init@ret_value:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x5
   311   00004A                     	ds	1
   312   00004B                     gpio_port_init@port:
   313                           	callstack 0
   314   00004B                     ___awdiv@counter:
   315                           	callstack 0
   316   00004B                     ___awmod@counter:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x6
   320   00004B                     	ds	1
   321   00004C                     ___awdiv@sign:
   322                           	callstack 0
   323   00004C                     ___awmod@sign:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x7
   327   00004C                     	ds	1
   328   00004D                     ___awdiv@quotient:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x8
   332   00004D                     	ds	2
   333   00004F                     gpio_port_write_logic@logic:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xA
   337   00004F                     	ds	1
   338   000050                     ??_gpio_port_write_logic:
   339   000050                     gpio_pin_write_logic@ret_value:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0xB
   343   000050                     	ds	1
   344   000051                     gpio_pin_init@_pin_config:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0xC
   348   000051                     	ds	1
   349   000052                     gpio_port_write_logic@port:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0xD
   353   000052                     	ds	1
   354   000053                     ??_gpio_pin_init:
   355                           
   356                           ; 1 bytes @ 0xE
   357   000053                     	ds	6
   358   000059                     gpio_pin_init@ret_value:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x14
   362   000059                     	ds	1
   363   00005A                     Interrupt_INTx_Enable@object:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x15
   367   00005A                     	ds	2
   368   00005C                     ??_Interrupt_INTx_Enable:
   369                           
   370                           ; 1 bytes @ 0x17
   371   00005C                     	ds	2
   372   00005E                     ??_main:
   373                           
   374                           ; 1 bytes @ 0x19
   375   00005E                     	ds	1
   376                           
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 59 in file "appliction.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  2  380[None  ] int 
   389 ;; Registers used:
   390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;Total ram usage:        1 bytes
   401 ;; Hardware stack levels required when called: 6
   402 ;; This function calls:
   403 ;;		_Interrupt_INTx_Enable
   404 ;;		___awdiv
   405 ;;		___awmod
   406 ;;		_gpio_port_init
   407 ;;		_gpio_port_write_logic
   408 ;; This function is called by:
   409 ;;		Startup code after reset
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text0
   414   000012                     __ptext0:
   415                           	callstack 0
   416   000012                     _main:
   417                           	callstack 25
   418   000012                     
   419                           ;appliction.c: 60:     Interrupt_INTx_Enable(&int0_obj);
   420   000012  0E24               	movlw	low _int0_obj
   421   000014  6E5A               	movwf	Interrupt_INTx_Enable@object^0,c
   422   000016  0E00               	movlw	high _int0_obj
   423   000018  6E5B               	movwf	(Interrupt_INTx_Enable@object+1)^0,c
   424   00001A  ECAF  F003         	call	_Interrupt_INTx_Enable	;wreg free
   425                           
   426                           ;appliction.c: 61:     Interrupt_INTx_Enable(&int1_obj);
   427   00001E  0E1F               	movlw	low _int1_obj
   428   000020  6E5A               	movwf	Interrupt_INTx_Enable@object^0,c
   429   000022  0E00               	movlw	high _int1_obj
   430   000024  6E5B               	movwf	(Interrupt_INTx_Enable@object+1)^0,c
   431   000026  ECAF  F003         	call	_Interrupt_INTx_Enable	;wreg free
   432                           
   433                           ;appliction.c: 63:     ret=gpio_port_init(PORTC_INDEX,0xF0);
   434   00002A  0EF0               	movlw	240
   435   00002C  6E47               	movwf	gpio_port_init@dir^0,c
   436   00002E  0E02               	movlw	2
   437   000030  EC11  F005         	call	_gpio_port_init
   438   000034  6E44               	movwf	_ret^0,c
   439                           
   440                           ;appliction.c: 64:     ret=gpio_port_init(PORTD_INDEX,0x00);
   441   000036  0E00               	movlw	0
   442   000038  6E47               	movwf	gpio_port_init@dir^0,c
   443   00003A  0E03               	movlw	3
   444   00003C  EC11  F005         	call	_gpio_port_init
   445   000040  6E44               	movwf	_ret^0,c
   446   000042                     l2106:
   447                           
   448                           ;appliction.c: 67:         if(1==watchFlag)
   449   000042  043F               	decf	_watchFlag^0,w,c
   450   000044  A4D8               	btfss	status,2,c
   451   000046  EF27  F000         	goto	u1391
   452   00004A  EF29  F000         	goto	u1390
   453   00004E                     u1391:
   454   00004E  EFD5  F000         	goto	l2138
   455   000052                     u1390:
   456   000052  EFCD  F000         	goto	l2136
   457   000056                     l2110:
   458                           
   459                           ;appliction.c: 70:             {;appliction.c: 71:             gpio_port_write_logic(POR
      +                          TD_INDEX,0x3B);
   460   000056  0E3B               	movlw	59
   461   000058  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   462   00005A  0E03               	movlw	3
   463   00005C  EC34  F005         	call	_gpio_port_write_logic
   464                           
   465                           ;appliction.c: 72:             gpio_port_write_logic(PORTC_INDEX,((uint8)seconds/10));
   466   000060  C042  F047         	movff	_seconds,___awdiv@dividend
   467   000064  6A48               	clrf	(___awdiv@dividend+1)^0,c
   468   000066  0E00               	movlw	0
   469   000068  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   470   00006A  0E0A               	movlw	10
   471   00006C  6E49               	movwf	___awdiv@divisor^0,c
   472   00006E  EC2C  F004         	call	___awdiv	;wreg free
   473   000072  5047               	movf	?___awdiv^0,w,c
   474   000074  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   475   000076  0E02               	movlw	2
   476   000078  EC34  F005         	call	_gpio_port_write_logic
   477   00007C                     
   478                           ;appliction.c: 73:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   479   00007C  0E07               	movlw	7
   480   00007E  6E5E               	movwf	??_main^0,c
   481   000080  0E7D               	movlw	125
   482   000082                     u1467:
   483   000082  2EE8               	decfsz	wreg,f,c
   484   000084  D7FE               	bra	u1467
   485   000086  2E5E               	decfsz	??_main^0,f,c
   486   000088  D7FC               	bra	u1467
   487   00008A  F000               	nop	
   488   00008C                     
   489                           ;appliction.c: 74:             gpio_port_write_logic(PORTD_INDEX,0x37);
   490   00008C  0E37               	movlw	55
   491   00008E  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   492   000090  0E03               	movlw	3
   493   000092  EC34  F005         	call	_gpio_port_write_logic
   494   000096                     
   495                           ;appliction.c: 75:             gpio_port_write_logic(PORTC_INDEX,((uint8)seconds%10));
   496   000096  C042  F047         	movff	_seconds,___awmod@dividend
   497   00009A  6A48               	clrf	(___awmod@dividend+1)^0,c
   498   00009C  0E00               	movlw	0
   499   00009E  6E4A               	movwf	(___awmod@divisor+1)^0,c
   500   0000A0  0E0A               	movlw	10
   501   0000A2  6E49               	movwf	___awmod@divisor^0,c
   502   0000A4  EC8E  F004         	call	___awmod	;wreg free
   503   0000A8  5047               	movf	?___awmod^0,w,c
   504   0000AA  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   505   0000AC  0E02               	movlw	2
   506   0000AE  EC34  F005         	call	_gpio_port_write_logic
   507   0000B2                     
   508                           ;appliction.c: 76:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   509   0000B2  0E07               	movlw	7
   510   0000B4  6E5E               	movwf	??_main^0,c
   511   0000B6  0E7D               	movlw	125
   512   0000B8                     u1477:
   513   0000B8  2EE8               	decfsz	wreg,f,c
   514   0000BA  D7FE               	bra	u1477
   515   0000BC  2E5E               	decfsz	??_main^0,f,c
   516   0000BE  D7FC               	bra	u1477
   517   0000C0  F000               	nop	
   518                           
   519                           ;appliction.c: 78:             gpio_port_write_logic(PORTD_INDEX,0x2F);
   520   0000C2  0E2F               	movlw	47
   521   0000C4  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   522   0000C6  0E03               	movlw	3
   523   0000C8  EC34  F005         	call	_gpio_port_write_logic
   524                           
   525                           ;appliction.c: 79:             gpio_port_write_logic(PORTC_INDEX,((uint8)miniSeconds/10)
      +                          );
   526   0000CC  C043  F047         	movff	_miniSeconds,___awdiv@dividend
   527   0000D0  6A48               	clrf	(___awdiv@dividend+1)^0,c
   528   0000D2  0E00               	movlw	0
   529   0000D4  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   530   0000D6  0E0A               	movlw	10
   531   0000D8  6E49               	movwf	___awdiv@divisor^0,c
   532   0000DA  EC2C  F004         	call	___awdiv	;wreg free
   533   0000DE  5047               	movf	?___awdiv^0,w,c
   534   0000E0  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   535   0000E2  0E02               	movlw	2
   536   0000E4  EC34  F005         	call	_gpio_port_write_logic
   537   0000E8                     
   538                           ;appliction.c: 80:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   539   0000E8  0E07               	movlw	7
   540   0000EA  6E5E               	movwf	??_main^0,c
   541   0000EC  0E7D               	movlw	125
   542   0000EE                     u1487:
   543   0000EE  2EE8               	decfsz	wreg,f,c
   544   0000F0  D7FE               	bra	u1487
   545   0000F2  2E5E               	decfsz	??_main^0,f,c
   546   0000F4  D7FC               	bra	u1487
   547   0000F6  F000               	nop	
   548   0000F8                     
   549                           ;appliction.c: 81:             gpio_port_write_logic(PORTD_INDEX,0x1F);
   550   0000F8  0E1F               	movlw	31
   551   0000FA  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   552   0000FC  0E03               	movlw	3
   553   0000FE  EC34  F005         	call	_gpio_port_write_logic
   554   000102                     
   555                           ;appliction.c: 82:             gpio_port_write_logic(PORTC_INDEX,((uint8)miniSeconds%10)
      +                          );
   556   000102  C043  F047         	movff	_miniSeconds,___awmod@dividend
   557   000106  6A48               	clrf	(___awmod@dividend+1)^0,c
   558   000108  0E00               	movlw	0
   559   00010A  6E4A               	movwf	(___awmod@divisor+1)^0,c
   560   00010C  0E0A               	movlw	10
   561   00010E  6E49               	movwf	___awmod@divisor^0,c
   562   000110  EC8E  F004         	call	___awmod	;wreg free
   563   000114  5047               	movf	?___awmod^0,w,c
   564   000116  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   565   000118  0E02               	movlw	2
   566   00011A  EC34  F005         	call	_gpio_port_write_logic
   567   00011E                     
   568                           ;appliction.c: 83:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   569   00011E  0E07               	movlw	7
   570   000120  6E5E               	movwf	??_main^0,c
   571   000122  0E7D               	movlw	125
   572   000124                     u1497:
   573   000124  2EE8               	decfsz	wreg,f,c
   574   000126  D7FE               	bra	u1497
   575   000128  2E5E               	decfsz	??_main^0,f,c
   576   00012A  D7FC               	bra	u1497
   577   00012C  F000               	nop	
   578                           
   579                           ;appliction.c: 85:             gpio_port_write_logic(PORTD_INDEX,0x3E);
   580   00012E  0E3E               	movlw	62
   581   000130  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   582   000132  0E03               	movlw	3
   583   000134  EC34  F005         	call	_gpio_port_write_logic
   584                           
   585                           ;appliction.c: 86:             gpio_port_write_logic(PORTC_INDEX,((uint8)minutes/10));
   586   000138  C041  F047         	movff	_minutes,___awdiv@dividend
   587   00013C  6A48               	clrf	(___awdiv@dividend+1)^0,c
   588   00013E  0E00               	movlw	0
   589   000140  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   590   000142  0E0A               	movlw	10
   591   000144  6E49               	movwf	___awdiv@divisor^0,c
   592   000146  EC2C  F004         	call	___awdiv	;wreg free
   593   00014A  5047               	movf	?___awdiv^0,w,c
   594   00014C  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   595   00014E  0E02               	movlw	2
   596   000150  EC34  F005         	call	_gpio_port_write_logic
   597   000154                     
   598                           ;appliction.c: 87:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   599   000154  0E07               	movlw	7
   600   000156  6E5E               	movwf	??_main^0,c
   601   000158  0E7D               	movlw	125
   602   00015A                     u1507:
   603   00015A  2EE8               	decfsz	wreg,f,c
   604   00015C  D7FE               	bra	u1507
   605   00015E  2E5E               	decfsz	??_main^0,f,c
   606   000160  D7FC               	bra	u1507
   607   000162  F000               	nop	
   608   000164                     
   609                           ;appliction.c: 88:             gpio_port_write_logic(PORTD_INDEX,0x3D);
   610   000164  0E3D               	movlw	61
   611   000166  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   612   000168  0E03               	movlw	3
   613   00016A  EC34  F005         	call	_gpio_port_write_logic
   614   00016E                     
   615                           ;appliction.c: 89:             gpio_port_write_logic(PORTC_INDEX,((uint8)minutes%10));
   616   00016E  C041  F047         	movff	_minutes,___awmod@dividend
   617   000172  6A48               	clrf	(___awmod@dividend+1)^0,c
   618   000174  0E00               	movlw	0
   619   000176  6E4A               	movwf	(___awmod@divisor+1)^0,c
   620   000178  0E0A               	movlw	10
   621   00017A  6E49               	movwf	___awmod@divisor^0,c
   622   00017C  EC8E  F004         	call	___awmod	;wreg free
   623   000180  5047               	movf	?___awmod^0,w,c
   624   000182  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   625   000184  0E02               	movlw	2
   626   000186  EC34  F005         	call	_gpio_port_write_logic
   627   00018A                     
   628                           ;appliction.c: 90:             _delay((unsigned long)((2500)*(8000000UL/4000000.0)));
   629   00018A  0E07               	movlw	7
   630   00018C  6E5E               	movwf	??_main^0,c
   631   00018E  0E7D               	movlw	125
   632   000190                     u1517:
   633   000190  2EE8               	decfsz	wreg,f,c
   634   000192  D7FE               	bra	u1517
   635   000194  2E5E               	decfsz	??_main^0,f,c
   636   000196  D7FC               	bra	u1517
   637   000198  F000               	nop	
   638   00019A                     l2136:
   639                           
   640                           ;appliction.c: 69:             while(watchFlag)
   641   00019A  503F               	movf	_watchFlag^0,w,c
   642   00019C  A4D8               	btfss	status,2,c
   643   00019E  EFD3  F000         	goto	u1401
   644   0001A2  EFD5  F000         	goto	u1400
   645   0001A6                     u1401:
   646   0001A6  EF2B  F000         	goto	l2110
   647   0001AA                     u1400:
   648   0001AA                     l2138:
   649                           
   650                           ;appliction.c: 94:         if(0==watchFlag){
   651   0001AA  503F               	movf	_watchFlag^0,w,c
   652   0001AC  A4D8               	btfss	status,2,c
   653   0001AE  EFDB  F000         	goto	u1411
   654   0001B2  EFDD  F000         	goto	u1410
   655   0001B6                     u1411:
   656   0001B6  EF21  F000         	goto	l2106
   657   0001BA                     u1410:
   658   0001BA                     
   659                           ;appliction.c: 95:             for(counter=0;counter<2;counter++){
   660   0001BA  0E00               	movlw	0
   661   0001BC  6E40               	movwf	_counter^0,c
   662   0001BE                     l2142:
   663   0001BE  0E01               	movlw	1
   664   0001C0  6440               	cpfsgt	_counter^0,c
   665   0001C2  EFE5  F000         	goto	u1421
   666   0001C6  EFE7  F000         	goto	u1420
   667   0001CA                     u1421:
   668   0001CA  EFE9  F000         	goto	l2146
   669   0001CE                     u1420:
   670   0001CE  EF8E  F001         	goto	l2176
   671   0001D2                     l2146:
   672                           
   673                           ;appliction.c: 96:             gpio_port_write_logic(PORTD_INDEX,0x3B);
   674   0001D2  0E3B               	movlw	59
   675   0001D4  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   676   0001D6  0E03               	movlw	3
   677   0001D8  EC34  F005         	call	_gpio_port_write_logic
   678                           
   679                           ;appliction.c: 97:             gpio_port_write_logic(PORTC_INDEX,((uint8)seconds/10));
   680   0001DC  C042  F047         	movff	_seconds,___awdiv@dividend
   681   0001E0  6A48               	clrf	(___awdiv@dividend+1)^0,c
   682   0001E2  0E00               	movlw	0
   683   0001E4  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   684   0001E6  0E0A               	movlw	10
   685   0001E8  6E49               	movwf	___awdiv@divisor^0,c
   686   0001EA  EC2C  F004         	call	___awdiv	;wreg free
   687   0001EE  5047               	movf	?___awdiv^0,w,c
   688   0001F0  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   689   0001F2  0E02               	movlw	2
   690   0001F4  EC34  F005         	call	_gpio_port_write_logic
   691   0001F8                     
   692                           ;appliction.c: 98:             _delay((unsigned long)((4000)*(8000000UL/4000000.0)));
   693   0001F8  0E0B               	movlw	11
   694   0001FA  6E5E               	movwf	??_main^0,c
   695   0001FC  0E62               	movlw	98
   696   0001FE                     u1527:
   697   0001FE  2EE8               	decfsz	wreg,f,c
   698   000200  D7FE               	bra	u1527
   699   000202  2E5E               	decfsz	??_main^0,f,c
   700   000204  D7FC               	bra	u1527
   701   000206  D000               	nop2	
   702   000208                     
   703                           ;appliction.c: 99:             gpio_port_write_logic(PORTD_INDEX,0x37);
   704   000208  0E37               	movlw	55
   705   00020A  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   706   00020C  0E03               	movlw	3
   707   00020E  EC34  F005         	call	_gpio_port_write_logic
   708   000212                     
   709                           ;appliction.c: 100:             gpio_port_write_logic(PORTC_INDEX,((uint8)seconds%10));
   710   000212  C042  F047         	movff	_seconds,___awmod@dividend
   711   000216  6A48               	clrf	(___awmod@dividend+1)^0,c
   712   000218  0E00               	movlw	0
   713   00021A  6E4A               	movwf	(___awmod@divisor+1)^0,c
   714   00021C  0E0A               	movlw	10
   715   00021E  6E49               	movwf	___awmod@divisor^0,c
   716   000220  EC8E  F004         	call	___awmod	;wreg free
   717   000224  5047               	movf	?___awmod^0,w,c
   718   000226  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   719   000228  0E02               	movlw	2
   720   00022A  EC34  F005         	call	_gpio_port_write_logic
   721   00022E                     
   722                           ;appliction.c: 101:             _delay((unsigned long)((4000)*(8000000UL/4000000.0)));
   723   00022E  0E0B               	movlw	11
   724   000230  6E5E               	movwf	??_main^0,c
   725   000232  0E62               	movlw	98
   726   000234                     u1537:
   727   000234  2EE8               	decfsz	wreg,f,c
   728   000236  D7FE               	bra	u1537
   729   000238  2E5E               	decfsz	??_main^0,f,c
   730   00023A  D7FC               	bra	u1537
   731   00023C  D000               	nop2	
   732                           
   733                           ;appliction.c: 103:             gpio_port_write_logic(PORTD_INDEX,0x2F);
   734   00023E  0E2F               	movlw	47
   735   000240  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   736   000242  0E03               	movlw	3
   737   000244  EC34  F005         	call	_gpio_port_write_logic
   738                           
   739                           ;appliction.c: 104:             gpio_port_write_logic(PORTC_INDEX,((uint8)miniSeconds/10
      +                          ));
   740   000248  C043  F047         	movff	_miniSeconds,___awdiv@dividend
   741   00024C  6A48               	clrf	(___awdiv@dividend+1)^0,c
   742   00024E  0E00               	movlw	0
   743   000250  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   744   000252  0E0A               	movlw	10
   745   000254  6E49               	movwf	___awdiv@divisor^0,c
   746   000256  EC2C  F004         	call	___awdiv	;wreg free
   747   00025A  5047               	movf	?___awdiv^0,w,c
   748   00025C  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   749   00025E  0E02               	movlw	2
   750   000260  EC34  F005         	call	_gpio_port_write_logic
   751   000264                     
   752                           ;appliction.c: 105:             _delay((unsigned long)((4000)*(8000000UL/4000000.0)));
   753   000264  0E0B               	movlw	11
   754   000266  6E5E               	movwf	??_main^0,c
   755   000268  0E62               	movlw	98
   756   00026A                     u1547:
   757   00026A  2EE8               	decfsz	wreg,f,c
   758   00026C  D7FE               	bra	u1547
   759   00026E  2E5E               	decfsz	??_main^0,f,c
   760   000270  D7FC               	bra	u1547
   761   000272  D000               	nop2	
   762   000274                     
   763                           ;appliction.c: 106:             gpio_port_write_logic(PORTD_INDEX,0x1F);
   764   000274  0E1F               	movlw	31
   765   000276  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   766   000278  0E03               	movlw	3
   767   00027A  EC34  F005         	call	_gpio_port_write_logic
   768   00027E                     
   769                           ;appliction.c: 107:             gpio_port_write_logic(PORTC_INDEX,((uint8)miniSeconds%10
      +                          ));
   770   00027E  C043  F047         	movff	_miniSeconds,___awmod@dividend
   771   000282  6A48               	clrf	(___awmod@dividend+1)^0,c
   772   000284  0E00               	movlw	0
   773   000286  6E4A               	movwf	(___awmod@divisor+1)^0,c
   774   000288  0E0A               	movlw	10
   775   00028A  6E49               	movwf	___awmod@divisor^0,c
   776   00028C  EC8E  F004         	call	___awmod	;wreg free
   777   000290  5047               	movf	?___awmod^0,w,c
   778   000292  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   779   000294  0E02               	movlw	2
   780   000296  EC34  F005         	call	_gpio_port_write_logic
   781   00029A                     
   782                           ;appliction.c: 108:             _delay((unsigned long)((4000)*(8000000UL/4000000.0)));
   783   00029A  0E0B               	movlw	11
   784   00029C  6E5E               	movwf	??_main^0,c
   785   00029E  0E62               	movlw	98
   786   0002A0                     u1557:
   787   0002A0  2EE8               	decfsz	wreg,f,c
   788   0002A2  D7FE               	bra	u1557
   789   0002A4  2E5E               	decfsz	??_main^0,f,c
   790   0002A6  D7FC               	bra	u1557
   791   0002A8  D000               	nop2	
   792                           
   793                           ;appliction.c: 110:             gpio_port_write_logic(PORTD_INDEX,0x3E);
   794   0002AA  0E3E               	movlw	62
   795   0002AC  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   796   0002AE  0E03               	movlw	3
   797   0002B0  EC34  F005         	call	_gpio_port_write_logic
   798                           
   799                           ;appliction.c: 111:             gpio_port_write_logic(PORTC_INDEX,((uint8)minutes/10));
   800   0002B4  C041  F047         	movff	_minutes,___awdiv@dividend
   801   0002B8  6A48               	clrf	(___awdiv@dividend+1)^0,c
   802   0002BA  0E00               	movlw	0
   803   0002BC  6E4A               	movwf	(___awdiv@divisor+1)^0,c
   804   0002BE  0E0A               	movlw	10
   805   0002C0  6E49               	movwf	___awdiv@divisor^0,c
   806   0002C2  EC2C  F004         	call	___awdiv	;wreg free
   807   0002C6  5047               	movf	?___awdiv^0,w,c
   808   0002C8  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   809   0002CA  0E02               	movlw	2
   810   0002CC  EC34  F005         	call	_gpio_port_write_logic
   811   0002D0                     
   812                           ;appliction.c: 112:             _delay((unsigned long)((4000)*(8000000UL/4000000.0)));
   813   0002D0  0E0B               	movlw	11
   814   0002D2  6E5E               	movwf	??_main^0,c
   815   0002D4  0E62               	movlw	98
   816   0002D6                     u1567:
   817   0002D6  2EE8               	decfsz	wreg,f,c
   818   0002D8  D7FE               	bra	u1567
   819   0002DA  2E5E               	decfsz	??_main^0,f,c
   820   0002DC  D7FC               	bra	u1567
   821   0002DE  D000               	nop2	
   822   0002E0                     
   823                           ;appliction.c: 113:             gpio_port_write_logic(PORTD_INDEX,0x3D);
   824   0002E0  0E3D               	movlw	61
   825   0002E2  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   826   0002E4  0E03               	movlw	3
   827   0002E6  EC34  F005         	call	_gpio_port_write_logic
   828   0002EA                     
   829                           ;appliction.c: 114:             gpio_port_write_logic(PORTC_INDEX,((uint8)minutes%10));
   830   0002EA  C041  F047         	movff	_minutes,___awmod@dividend
   831   0002EE  6A48               	clrf	(___awmod@dividend+1)^0,c
   832   0002F0  0E00               	movlw	0
   833   0002F2  6E4A               	movwf	(___awmod@divisor+1)^0,c
   834   0002F4  0E0A               	movlw	10
   835   0002F6  6E49               	movwf	___awmod@divisor^0,c
   836   0002F8  EC8E  F004         	call	___awmod	;wreg free
   837   0002FC  5047               	movf	?___awmod^0,w,c
   838   0002FE  6E4F               	movwf	gpio_port_write_logic@logic^0,c
   839   000300  0E02               	movlw	2
   840   000302  EC34  F005         	call	_gpio_port_write_logic
   841   000306                     
   842                           ;appliction.c: 115:             _delay((unsigned long)((4000)*(8000000UL/4000000.0)));
   843   000306  0E0B               	movlw	11
   844   000308  6E5E               	movwf	??_main^0,c
   845   00030A  0E62               	movlw	98
   846   00030C                     u1577:
   847   00030C  2EE8               	decfsz	wreg,f,c
   848   00030E  D7FE               	bra	u1577
   849   000310  2E5E               	decfsz	??_main^0,f,c
   850   000312  D7FC               	bra	u1577
   851   000314  D000               	nop2	
   852   000316                     
   853                           ;appliction.c: 116:             }
   854   000316  2A40               	incf	_counter^0,f,c
   855   000318  EFDF  F000         	goto	l2142
   856   00031C                     l2176:
   857                           
   858                           ;appliction.c: 118:             miniSeconds+=5;
   859   00031C  0E05               	movlw	5
   860   00031E  2643               	addwf	_miniSeconds^0,f,c
   861                           
   862                           ;appliction.c: 119:             if(90 < miniSeconds)
   863   000320  0E5A               	movlw	90
   864   000322  6443               	cpfsgt	_miniSeconds^0,c
   865   000324  EF96  F001         	goto	u1431
   866   000328  EF98  F001         	goto	u1430
   867   00032C                     u1431:
   868   00032C  EF9B  F001         	goto	l2182
   869   000330                     u1430:
   870   000330                     
   871                           ;appliction.c: 120:             {;appliction.c: 121:                 seconds++;
   872   000330  2A42               	incf	_seconds^0,f,c
   873   000332                     
   874                           ;appliction.c: 122:                 miniSeconds= 0;
   875   000332  0E00               	movlw	0
   876   000334  6E43               	movwf	_miniSeconds^0,c
   877   000336                     l2182:
   878                           
   879                           ;appliction.c: 125:             if(60 == seconds)
   880   000336  0E3C               	movlw	60
   881   000338  1842               	xorwf	_seconds^0,w,c
   882   00033A  A4D8               	btfss	status,2,c
   883   00033C  EFA2  F001         	goto	u1441
   884   000340  EFA4  F001         	goto	u1440
   885   000344                     u1441:
   886   000344  EFA7  F001         	goto	l2188
   887   000348                     u1440:
   888   000348                     
   889                           ;appliction.c: 126:             {;appliction.c: 127:                 minutes++;
   890   000348  2A41               	incf	_minutes^0,f,c
   891   00034A                     
   892                           ;appliction.c: 128:                 seconds= 0;
   893   00034A  0E00               	movlw	0
   894   00034C  6E42               	movwf	_seconds^0,c
   895   00034E                     l2188:
   896                           
   897                           ;appliction.c: 131:             if(60 == minutes)
   898   00034E  0E3C               	movlw	60
   899   000350  1841               	xorwf	_minutes^0,w,c
   900   000352  A4D8               	btfss	status,2,c
   901   000354  EFAE  F001         	goto	u1451
   902   000358  EFB0  F001         	goto	u1450
   903   00035C                     u1451:
   904   00035C  EF21  F000         	goto	l2106
   905   000360                     u1450:
   906   000360                     
   907                           ;appliction.c: 132:             {;appliction.c: 133:                 minutes=0;
   908   000360  0E00               	movlw	0
   909   000362  6E41               	movwf	_minutes^0,c
   910   000364  EF21  F000         	goto	l2106
   911   000368  EF07  F000         	goto	start
   912   00036C                     __end_of_main:
   913                           	callstack 0
   914                           
   915 ;; *************** function _gpio_port_write_logic *****************
   916 ;; Defined at:
   917 ;;		line 183 in file "MCAL_Layer/GPIO_Module/hal_gpio.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  port            1    wreg     enum E2983
   920 ;;  logic           1   10[COMRAM] unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  port            1   13[COMRAM] enum E2983
   923 ;;  ret_value       1    0        unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      unsigned char 
   926 ;; Registers used:
   927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   933 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;Total ram usage:        4 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 3
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text1
   948   000A68                     __ptext1:
   949                           	callstack 0
   950   000A68                     _gpio_port_write_logic:
   951                           	callstack 27
   952                           
   953                           ;incstack = 0
   954                           ;gpio_port_write_logic@port stored from wreg
   955   000A68  6E52               	movwf	gpio_port_write_logic@port^0,c
   956   000A6A                     
   957                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 187:     if(port > 5 -1)
   958   000A6A  0E04               	movlw	4
   959   000A6C  6452               	cpfsgt	gpio_port_write_logic@port^0,c
   960   000A6E  EF3B  F005         	goto	u1201
   961   000A72  EF3D  F005         	goto	u1200
   962   000A76                     u1201:
   963   000A76  EF3F  F005         	goto	l1902
   964   000A7A                     u1200:
   965   000A7A                     
   966                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 190:     }
   967   000A7A  EF51  F005         	goto	l152
   968   000A7E                     l1902:
   969                           
   970                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 192:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 193:  
      +                                 *lat_regs[port] = logic ;
   971   000A7E  5052               	movf	gpio_port_write_logic@port^0,w,c
   972   000A80  0D02               	mullw	2
   973   000A82  0E0B               	movlw	low _lat_regs
   974   000A84  24F3               	addwf	243,w,c
   975   000A86  6ED9               	movwf	fsr2l,c
   976   000A88  0E00               	movlw	high _lat_regs
   977   000A8A  20F4               	addwfc	prodh,w,c
   978   000A8C  6EDA               	movwf	fsr2h,c
   979   000A8E  CFDE F050          	movff	postinc2,??_gpio_port_write_logic
   980   000A92  CFDD F051          	movff	postdec2,??_gpio_port_write_logic+1
   981   000A96  C050  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   982   000A9A  C051  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   983   000A9E  C04F  FFDF         	movff	gpio_port_write_logic@logic,indf2
   984   000AA2                     l152:
   985   000AA2  0012               	return		;funcret
   986   000AA4                     __end_of_gpio_port_write_logic:
   987                           	callstack 0
   988                           
   989 ;; *************** function _gpio_port_init *****************
   990 ;; Defined at:
   991 ;;		line 150 in file "MCAL_Layer/GPIO_Module/hal_gpio.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  port            1    wreg     enum E2983
   994 ;;  dir             1    2[COMRAM] unsigned char 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  port            1    6[COMRAM] enum E2983
   997 ;;  ret_value       1    5[COMRAM] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      unsigned char 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1007 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;Total ram usage:        5 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 3
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text2
  1022   000A22                     __ptext2:
  1023                           	callstack 0
  1024   000A22                     _gpio_port_init:
  1025                           	callstack 27
  1026                           
  1027                           ;incstack = 0
  1028                           ;gpio_port_init@port stored from wreg
  1029   000A22  6E4B               	movwf	gpio_port_init@port^0,c
  1030   000A24                     
  1031                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 152:     Std_ReturnType ret_value =(Std_ReturnType)0
      +                          x01;
  1032   000A24  0E01               	movlw	1
  1033   000A26  6E4A               	movwf	gpio_port_init@ret_value^0,c
  1034   000A28                     
  1035                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 154:     if(port > 5 -1)
  1036   000A28  0E04               	movlw	4
  1037   000A2A  644B               	cpfsgt	gpio_port_init@port^0,c
  1038   000A2C  EF1A  F005         	goto	u1191
  1039   000A30  EF1C  F005         	goto	u1190
  1040   000A34                     u1191:
  1041   000A34  EF20  F005         	goto	l1890
  1042   000A38                     u1190:
  1043   000A38                     
  1044                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 155:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 156:  
      +                                 ret_value =(Std_ReturnType)0x00;
  1045   000A38  0E00               	movlw	0
  1046   000A3A  6E4A               	movwf	gpio_port_init@ret_value^0,c
  1047                           
  1048                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 157:     }
  1049   000A3C  EF32  F005         	goto	l1892
  1050   000A40                     l1890:
  1051                           
  1052                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 159:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 160:  
      +                                 *tris_regs[port] = dir ;
  1053   000A40  504B               	movf	gpio_port_init@port^0,w,c
  1054   000A42  0D02               	mullw	2
  1055   000A44  0E15               	movlw	low _tris_regs
  1056   000A46  24F3               	addwf	243,w,c
  1057   000A48  6ED9               	movwf	fsr2l,c
  1058   000A4A  0E00               	movlw	high _tris_regs
  1059   000A4C  20F4               	addwfc	prodh,w,c
  1060   000A4E  6EDA               	movwf	fsr2h,c
  1061   000A50  CFDE F048          	movff	postinc2,??_gpio_port_init
  1062   000A54  CFDD F049          	movff	postdec2,??_gpio_port_init+1
  1063   000A58  C048  FFD9         	movff	??_gpio_port_init,fsr2l
  1064   000A5C  C049  FFDA         	movff	??_gpio_port_init+1,fsr2h
  1065   000A60  C047  FFDF         	movff	gpio_port_init@dir,indf2
  1066   000A64                     l1892:
  1067                           
  1068                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 163:     return ret_value;
  1069   000A64  504A               	movf	gpio_port_init@ret_value^0,w,c
  1070   000A66  0012               	return		;funcret
  1071   000A68                     __end_of_gpio_port_init:
  1072                           	callstack 0
  1073                           
  1074 ;; *************** function ___awmod *****************
  1075 ;; Defined at:
  1076 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  dividend        2    2[COMRAM] int 
  1079 ;;  divisor         2    4[COMRAM] int 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  sign            1    7[COMRAM] unsigned char 
  1082 ;;  counter         1    6[COMRAM] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2    2[COMRAM] int 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        6 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 3
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text3
  1107   00091C                     __ptext3:
  1108                           	callstack 0
  1109   00091C                     ___awmod:
  1110                           	callstack 27
  1111   00091C  0E00               	movlw	0
  1112   00091E  6E4C               	movwf	___awmod@sign^0,c
  1113   000920  BE48               	btfsc	(___awmod@dividend+1)^0,7,c
  1114   000922  EF97  F004         	goto	u1280
  1115   000926  EF95  F004         	goto	u1281
  1116   00092A                     u1281:
  1117   00092A  EF9D  F004         	goto	l2004
  1118   00092E                     u1280:
  1119   00092E  6C47               	negf	___awmod@dividend^0,c
  1120   000930  1E48               	comf	(___awmod@dividend+1)^0,f,c
  1121   000932  B0D8               	btfsc	status,0,c
  1122   000934  2A48               	incf	(___awmod@dividend+1)^0,f,c
  1123   000936  0E01               	movlw	1
  1124   000938  6E4C               	movwf	___awmod@sign^0,c
  1125   00093A                     l2004:
  1126   00093A  BE4A               	btfsc	(___awmod@divisor+1)^0,7,c
  1127   00093C  EFA4  F004         	goto	u1290
  1128   000940  EFA2  F004         	goto	u1291
  1129   000944                     u1291:
  1130   000944  EFA8  F004         	goto	l2008
  1131   000948                     u1290:
  1132   000948  6C49               	negf	___awmod@divisor^0,c
  1133   00094A  1E4A               	comf	(___awmod@divisor+1)^0,f,c
  1134   00094C  B0D8               	btfsc	status,0,c
  1135   00094E  2A4A               	incf	(___awmod@divisor+1)^0,f,c
  1136   000950                     l2008:
  1137   000950  5049               	movf	___awmod@divisor^0,w,c
  1138   000952  104A               	iorwf	(___awmod@divisor+1)^0,w,c
  1139   000954  B4D8               	btfsc	status,2,c
  1140   000956  EFAF  F004         	goto	u1301
  1141   00095A  EFB1  F004         	goto	u1300
  1142   00095E                     u1301:
  1143   00095E  EFD5  F004         	goto	l2024
  1144   000962                     u1300:
  1145   000962  0E01               	movlw	1
  1146   000964  6E4B               	movwf	___awmod@counter^0,c
  1147   000966  EFB9  F004         	goto	l2014
  1148   00096A                     l2012:
  1149   00096A  90D8               	bcf	status,0,c
  1150   00096C  3649               	rlcf	___awmod@divisor^0,f,c
  1151   00096E  364A               	rlcf	(___awmod@divisor+1)^0,f,c
  1152   000970  2A4B               	incf	___awmod@counter^0,f,c
  1153   000972                     l2014:
  1154   000972  AE4A               	btfss	(___awmod@divisor+1)^0,7,c
  1155   000974  EFBE  F004         	goto	u1311
  1156   000978  EFC0  F004         	goto	u1310
  1157   00097C                     u1311:
  1158   00097C  EFB5  F004         	goto	l2012
  1159   000980                     u1310:
  1160   000980                     l2016:
  1161   000980  5049               	movf	___awmod@divisor^0,w,c
  1162   000982  5C47               	subwf	___awmod@dividend^0,w,c
  1163   000984  504A               	movf	(___awmod@divisor+1)^0,w,c
  1164   000986  5848               	subwfb	(___awmod@dividend+1)^0,w,c
  1165   000988  A0D8               	btfss	status,0,c
  1166   00098A  EFC9  F004         	goto	u1321
  1167   00098E  EFCB  F004         	goto	u1320
  1168   000992                     u1321:
  1169   000992  EFCF  F004         	goto	l2020
  1170   000996                     u1320:
  1171   000996  5049               	movf	___awmod@divisor^0,w,c
  1172   000998  5E47               	subwf	___awmod@dividend^0,f,c
  1173   00099A  504A               	movf	(___awmod@divisor+1)^0,w,c
  1174   00099C  5A48               	subwfb	(___awmod@dividend+1)^0,f,c
  1175   00099E                     l2020:
  1176   00099E  90D8               	bcf	status,0,c
  1177   0009A0  324A               	rrcf	(___awmod@divisor+1)^0,f,c
  1178   0009A2  3249               	rrcf	___awmod@divisor^0,f,c
  1179   0009A4  2E4B               	decfsz	___awmod@counter^0,f,c
  1180   0009A6  EFC0  F004         	goto	l2016
  1181   0009AA                     l2024:
  1182   0009AA  504C               	movf	___awmod@sign^0,w,c
  1183   0009AC  B4D8               	btfsc	status,2,c
  1184   0009AE  EFDB  F004         	goto	u1331
  1185   0009B2  EFDD  F004         	goto	u1330
  1186   0009B6                     u1331:
  1187   0009B6  EFE1  F004         	goto	l2028
  1188   0009BA                     u1330:
  1189   0009BA  6C47               	negf	___awmod@dividend^0,c
  1190   0009BC  1E48               	comf	(___awmod@dividend+1)^0,f,c
  1191   0009BE  B0D8               	btfsc	status,0,c
  1192   0009C0  2A48               	incf	(___awmod@dividend+1)^0,f,c
  1193   0009C2                     l2028:
  1194   0009C2  C047  F047         	movff	___awmod@dividend,?___awmod
  1195   0009C6  C048  F048         	movff	___awmod@dividend+1,?___awmod+1
  1196   0009CA  0012               	return		;funcret
  1197   0009CC                     __end_of___awmod:
  1198                           	callstack 0
  1199                           
  1200 ;; *************** function ___awdiv *****************
  1201 ;; Defined at:
  1202 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  dividend        2    2[COMRAM] int 
  1205 ;;  divisor         2    4[COMRAM] int 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  quotient        2    8[COMRAM] int 
  1208 ;;  sign            1    7[COMRAM] unsigned char 
  1209 ;;  counter         1    6[COMRAM] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  2    2[COMRAM] int 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;Total ram usage:        8 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 3
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text4
  1234   000858                     __ptext4:
  1235                           	callstack 0
  1236   000858                     ___awdiv:
  1237                           	callstack 27
  1238   000858  0E00               	movlw	0
  1239   00085A  6E4C               	movwf	___awdiv@sign^0,c
  1240   00085C  BE4A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1241   00085E  EF35  F004         	goto	u1220
  1242   000862  EF33  F004         	goto	u1221
  1243   000866                     u1221:
  1244   000866  EF3B  F004         	goto	l1960
  1245   00086A                     u1220:
  1246   00086A  6C49               	negf	___awdiv@divisor^0,c
  1247   00086C  1E4A               	comf	(___awdiv@divisor+1)^0,f,c
  1248   00086E  B0D8               	btfsc	status,0,c
  1249   000870  2A4A               	incf	(___awdiv@divisor+1)^0,f,c
  1250   000872  0E01               	movlw	1
  1251   000874  6E4C               	movwf	___awdiv@sign^0,c
  1252   000876                     l1960:
  1253   000876  BE48               	btfsc	(___awdiv@dividend+1)^0,7,c
  1254   000878  EF42  F004         	goto	u1230
  1255   00087C  EF40  F004         	goto	u1231
  1256   000880                     u1231:
  1257   000880  EF48  F004         	goto	l1966
  1258   000884                     u1230:
  1259   000884  6C47               	negf	___awdiv@dividend^0,c
  1260   000886  1E48               	comf	(___awdiv@dividend+1)^0,f,c
  1261   000888  B0D8               	btfsc	status,0,c
  1262   00088A  2A48               	incf	(___awdiv@dividend+1)^0,f,c
  1263   00088C  0E01               	movlw	1
  1264   00088E  1A4C               	xorwf	___awdiv@sign^0,f,c
  1265   000890                     l1966:
  1266   000890  0E00               	movlw	0
  1267   000892  6E4E               	movwf	(___awdiv@quotient+1)^0,c
  1268   000894  0E00               	movlw	0
  1269   000896  6E4D               	movwf	___awdiv@quotient^0,c
  1270   000898  5049               	movf	___awdiv@divisor^0,w,c
  1271   00089A  104A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1272   00089C  B4D8               	btfsc	status,2,c
  1273   00089E  EF53  F004         	goto	u1241
  1274   0008A2  EF55  F004         	goto	u1240
  1275   0008A6                     u1241:
  1276   0008A6  EF7D  F004         	goto	l1988
  1277   0008AA                     u1240:
  1278   0008AA  0E01               	movlw	1
  1279   0008AC  6E4B               	movwf	___awdiv@counter^0,c
  1280   0008AE  EF5D  F004         	goto	l1974
  1281   0008B2                     l1972:
  1282   0008B2  90D8               	bcf	status,0,c
  1283   0008B4  3649               	rlcf	___awdiv@divisor^0,f,c
  1284   0008B6  364A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1285   0008B8  2A4B               	incf	___awdiv@counter^0,f,c
  1286   0008BA                     l1974:
  1287   0008BA  AE4A               	btfss	(___awdiv@divisor+1)^0,7,c
  1288   0008BC  EF62  F004         	goto	u1251
  1289   0008C0  EF64  F004         	goto	u1250
  1290   0008C4                     u1251:
  1291   0008C4  EF59  F004         	goto	l1972
  1292   0008C8                     u1250:
  1293   0008C8                     l1976:
  1294   0008C8  90D8               	bcf	status,0,c
  1295   0008CA  364D               	rlcf	___awdiv@quotient^0,f,c
  1296   0008CC  364E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1297   0008CE  5049               	movf	___awdiv@divisor^0,w,c
  1298   0008D0  5C47               	subwf	___awdiv@dividend^0,w,c
  1299   0008D2  504A               	movf	(___awdiv@divisor+1)^0,w,c
  1300   0008D4  5848               	subwfb	(___awdiv@dividend+1)^0,w,c
  1301   0008D6  A0D8               	btfss	status,0,c
  1302   0008D8  EF70  F004         	goto	u1261
  1303   0008DC  EF72  F004         	goto	u1260
  1304   0008E0                     u1261:
  1305   0008E0  EF77  F004         	goto	l1984
  1306   0008E4                     u1260:
  1307   0008E4  5049               	movf	___awdiv@divisor^0,w,c
  1308   0008E6  5E47               	subwf	___awdiv@dividend^0,f,c
  1309   0008E8  504A               	movf	(___awdiv@divisor+1)^0,w,c
  1310   0008EA  5A48               	subwfb	(___awdiv@dividend+1)^0,f,c
  1311   0008EC  804D               	bsf	___awdiv@quotient^0,0,c
  1312   0008EE                     l1984:
  1313   0008EE  90D8               	bcf	status,0,c
  1314   0008F0  324A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1315   0008F2  3249               	rrcf	___awdiv@divisor^0,f,c
  1316   0008F4  2E4B               	decfsz	___awdiv@counter^0,f,c
  1317   0008F6  EF64  F004         	goto	l1976
  1318   0008FA                     l1988:
  1319   0008FA  504C               	movf	___awdiv@sign^0,w,c
  1320   0008FC  B4D8               	btfsc	status,2,c
  1321   0008FE  EF83  F004         	goto	u1271
  1322   000902  EF85  F004         	goto	u1270
  1323   000906                     u1271:
  1324   000906  EF89  F004         	goto	l1992
  1325   00090A                     u1270:
  1326   00090A  6C4D               	negf	___awdiv@quotient^0,c
  1327   00090C  1E4E               	comf	(___awdiv@quotient+1)^0,f,c
  1328   00090E  B0D8               	btfsc	status,0,c
  1329   000910  2A4E               	incf	(___awdiv@quotient+1)^0,f,c
  1330   000912                     l1992:
  1331   000912  C04D  F047         	movff	___awdiv@quotient,?___awdiv
  1332   000916  C04E  F048         	movff	___awdiv@quotient+1,?___awdiv+1
  1333   00091A  0012               	return		;funcret
  1334   00091C                     __end_of___awdiv:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _Interrupt_INTx_Enable *****************
  1338 ;; Defined at:
  1339 ;;		line 35 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  object          2   21[COMRAM] PTR const struct .
  1342 ;;		 -> int1_obj(5), int0_obj(5), 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  ret_value       1    0        unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      unsigned char 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;Total ram usage:        4 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 5
  1361 ;; This function calls:
  1362 ;;		_Edge_Config
  1363 ;;		_INT0_SetInterruptHandler
  1364 ;;		_INT1_SetInterruptHandler
  1365 ;;		_INT2_SetInterruptHandler
  1366 ;;		_gpio_pin_init
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text5
  1373   00075E                     __ptext5:
  1374                           	callstack 0
  1375   00075E                     _Interrupt_INTx_Enable:
  1376                           	callstack 25
  1377   00075E                     
  1378                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 37:     if(((void*)0) == object){
  1379   00075E  505A               	movf	Interrupt_INTx_Enable@object^0,w,c
  1380   000760  105B               	iorwf	(Interrupt_INTx_Enable@object+1)^0,w,c
  1381   000762  A4D8               	btfss	status,2,c
  1382   000764  EFB6  F003         	goto	u1211
  1383   000768  EFB8  F003         	goto	u1210
  1384   00076C                     u1211:
  1385   00076C  EFBA  F003         	goto	l1912
  1386   000770                     u1210:
  1387   000770                     l1910:
  1388                           
  1389                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 39:         }
  1390   000770  EF2B  F004         	goto	l213
  1391   000774                     l1912:
  1392   000774  0E02               	movlw	2
  1393   000776  245A               	addwf	Interrupt_INTx_Enable@object^0,w,c
  1394   000778  6E51               	movwf	gpio_pin_init@_pin_config^0,c
  1395   00077A  0E00               	movlw	0
  1396   00077C  205B               	addwfc	(Interrupt_INTx_Enable@object+1)^0,w,c
  1397   00077E  6E52               	movwf	(gpio_pin_init@_pin_config+1)^0,c
  1398   000780  ECB6  F001         	call	_gpio_pin_init	;wreg free
  1399                           
  1400                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 44:         switch(object->INTx_pin.Pin
      +                          ){
  1401   000784  EF09  F004         	goto	l1946
  1402   000788                     l208:
  1403                           
  1404                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 46:                     (INTCONbits.INT
      +                          0E=0);
  1405   000788  98F2               	bcf	242,4,c	;volatile
  1406                           
  1407                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 47:                     (INTCONbits.INT
      +                          0IF=0);
  1408   00078A  92F2               	bcf	242,1,c	;volatile
  1409   00078C                     
  1410                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 48:                     Edge_Config(obj
      +                          ect);
  1411   00078C  C05A  F047         	movff	Interrupt_INTx_Enable@object,Edge_Config@object
  1412   000790  C05B  F048         	movff	Interrupt_INTx_Enable@object+1,Edge_Config@object+1
  1413   000794  EC1B  F003         	call	_Edge_Config	;wreg free
  1414                           
  1415                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 49:                     INT0_SetInterru
      +                          ptHandler(object->EXT_InterruptHandler);
  1416   000798  C05A  FFD9         	movff	Interrupt_INTx_Enable@object,fsr2l
  1417   00079C  C05B  FFDA         	movff	Interrupt_INTx_Enable@object+1,fsr2h
  1418   0007A0  CFDE F047          	movff	postinc2,INT0_SetInterruptHandler@InterruptHandler
  1419   0007A4  CFDD F048          	movff	postdec2,INT0_SetInterruptHandler@InterruptHandler+1
  1420   0007A8  ECD3  F005         	call	_INT0_SetInterruptHandler	;wreg free
  1421   0007AC                     
  1422                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 53:                     (INTCONbits.GIE
      +                          =1);
  1423   0007AC  8EF2               	bsf	242,7,c	;volatile
  1424   0007AE                     
  1425                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 54:                     (INTCONbits.PEI
      +                          E=1);
  1426   0007AE  8CF2               	bsf	242,6,c	;volatile
  1427   0007B0                     
  1428                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 56:                     (INTCONbits.INT
      +                          0IE=1);
  1429   0007B0  88F2               	bsf	242,4,c	;volatile
  1430   0007B2                     l1922:
  1431                           
  1432                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 58:                     break;
  1433   0007B2  EF2B  F004         	goto	l213
  1434   0007B6                     l210:
  1435                           
  1436                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 60:                     (INTCON3bits.IN
      +                          T1IE=0);
  1437   0007B6  96F0               	bcf	240,3,c	;volatile
  1438                           
  1439                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 61:                     (INTCON3bits.IN
      +                          T1IF=0);
  1440   0007B8  90F0               	bcf	240,0,c	;volatile
  1441   0007BA                     
  1442                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 62:                     Edge_Config(obj
      +                          ect);
  1443   0007BA  C05A  F047         	movff	Interrupt_INTx_Enable@object,Edge_Config@object
  1444   0007BE  C05B  F048         	movff	Interrupt_INTx_Enable@object+1,Edge_Config@object+1
  1445   0007C2  EC1B  F003         	call	_Edge_Config	;wreg free
  1446   0007C6                     
  1447                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 66:                     (INTCONbits.GIE
      +                          =1);
  1448   0007C6  8EF2               	bsf	242,7,c	;volatile
  1449   0007C8                     
  1450                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 67:                     (INTCONbits.PEI
      +                          E=1);
  1451   0007C8  8CF2               	bsf	242,6,c	;volatile
  1452                           
  1453                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 69:                     INT1_SetInterru
      +                          ptHandler(object->EXT_InterruptHandler);
  1454   0007CA  C05A  FFD9         	movff	Interrupt_INTx_Enable@object,fsr2l
  1455   0007CE  C05B  FFDA         	movff	Interrupt_INTx_Enable@object+1,fsr2h
  1456   0007D2  CFDE F047          	movff	postinc2,INT1_SetInterruptHandler@InterruptHandler
  1457   0007D6  CFDD F048          	movff	postdec2,INT1_SetInterruptHandler@InterruptHandler+1
  1458   0007DA  ECC3  F005         	call	_INT1_SetInterruptHandler	;wreg free
  1459   0007DE                     
  1460                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 70:                     (INTCON3bits.IN
      +                          T1IE=1);
  1461   0007DE  86F0               	bsf	240,3,c	;volatile
  1462   0007E0  EFD9  F003         	goto	l1922
  1463   0007E4                     l211:
  1464                           
  1465                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 74:                     (INTCON3bits.IN
      +                          T2IE=0);
  1466   0007E4  98F0               	bcf	240,4,c	;volatile
  1467                           
  1468                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 75:                     (INTCON3bits.IN
      +                          T2IF=0);
  1469   0007E6  92F0               	bcf	240,1,c	;volatile
  1470   0007E8                     
  1471                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 76:                     Edge_Config(obj
      +                          ect);
  1472   0007E8  C05A  F047         	movff	Interrupt_INTx_Enable@object,Edge_Config@object
  1473   0007EC  C05B  F048         	movff	Interrupt_INTx_Enable@object+1,Edge_Config@object+1
  1474   0007F0  EC1B  F003         	call	_Edge_Config	;wreg free
  1475   0007F4                     
  1476                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 80:                     (INTCONbits.GIE
      +                          =1);
  1477   0007F4  8EF2               	bsf	242,7,c	;volatile
  1478   0007F6                     
  1479                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 81:                     (INTCONbits.PEI
      +                          E=1);
  1480   0007F6  8CF2               	bsf	242,6,c	;volatile
  1481                           
  1482                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 83:                     INT2_SetInterru
      +                          ptHandler(object->EXT_InterruptHandler);
  1483   0007F8  C05A  FFD9         	movff	Interrupt_INTx_Enable@object,fsr2l
  1484   0007FC  C05B  FFDA         	movff	Interrupt_INTx_Enable@object+1,fsr2h
  1485   000800  CFDE F047          	movff	postinc2,INT2_SetInterruptHandler@InterruptHandler
  1486   000804  CFDD F048          	movff	postdec2,INT2_SetInterruptHandler@InterruptHandler+1
  1487   000808  ECB3  F005         	call	_INT2_SetInterruptHandler	;wreg free
  1488   00080C                     
  1489                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 84:                     (INTCON3bits.IN
      +                          T2IE=1);
  1490   00080C  88F0               	bsf	240,4,c	;volatile
  1491   00080E  EFD9  F003         	goto	l1922
  1492   000812                     l1946:
  1493   000812  EE20 F002          	lfsr	2,2
  1494   000816  505A               	movf	Interrupt_INTx_Enable@object^0,w,c
  1495   000818  26D9               	addwf	fsr2l,f,c
  1496   00081A  505B               	movf	(Interrupt_INTx_Enable@object+1)^0,w,c
  1497   00081C  22DA               	addwfc	fsr2h,f,c
  1498   00081E  30DF               	rrcf	223,w,c
  1499   000820  32E8               	rrcf	wreg,f,c
  1500   000822  32E8               	rrcf	wreg,f,c
  1501   000824  0B07               	andlw	7
  1502   000826  6E5C               	movwf	??_Interrupt_INTx_Enable^0,c
  1503   000828  6A5D               	clrf	(??_Interrupt_INTx_Enable+1)^0,c
  1504                           
  1505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1506                           ; Switch size 1, requested type "simple"
  1507                           ; Number of cases is 1, Range of values is 0 to 0
  1508                           ; switch strategies available:
  1509                           ; Name         Instructions Cycles
  1510                           ; simple_byte            4     3 (average)
  1511                           ;	Chosen strategy is simple_byte
  1512   00082A  505D               	movf	(??_Interrupt_INTx_Enable+1)^0,w,c
  1513   00082C  0A00               	xorlw	0	; case 0
  1514   00082E  B4D8               	btfsc	status,2,c
  1515   000830  EF1C  F004         	goto	l2208
  1516   000834  EFB8  F003         	goto	l1910
  1517   000838                     l2208:
  1518                           
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 3, Range of values is 0 to 2
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte           10     6 (average)
  1524                           ;	Chosen strategy is simple_byte
  1525   000838  505C               	movf	??_Interrupt_INTx_Enable^0,w,c
  1526   00083A  0A00               	xorlw	0	; case 0
  1527   00083C  B4D8               	btfsc	status,2,c
  1528   00083E  EFC4  F003         	goto	l208
  1529   000842  0A01               	xorlw	1	; case 1
  1530   000844  B4D8               	btfsc	status,2,c
  1531   000846  EFDB  F003         	goto	l210
  1532   00084A  0A03               	xorlw	3	; case 2
  1533   00084C  B4D8               	btfsc	status,2,c
  1534   00084E  EFF2  F003         	goto	l211
  1535   000852  EFB8  F003         	goto	l1910
  1536   000856                     l213:
  1537   000856  0012               	return		;funcret
  1538   000858                     __end_of_Interrupt_INTx_Enable:
  1539                           	callstack 0
  1540                           
  1541 ;; *************** function _gpio_pin_init *****************
  1542 ;; Defined at:
  1543 ;;		line 42 in file "MCAL_Layer/GPIO_Module/hal_gpio.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  _pin_config     2   12[COMRAM] PTR const struct .
  1546 ;;		 -> int1_obj(5), int0_obj(5), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  ret_value       1   20[COMRAM] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      unsigned char 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:        9 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 4
  1565 ;; This function calls:
  1566 ;;		_gpio_pin_write_logic
  1567 ;; This function is called by:
  1568 ;;		_Interrupt_INTx_Enable
  1569 ;;		_button_init
  1570 ;;		_seven_segment_init
  1571 ;;		_Interrupt_RBx_Enable
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text6
  1576   00036C                     __ptext6:
  1577                           	callstack 0
  1578   00036C                     _gpio_pin_init:
  1579                           	callstack 25
  1580   00036C                     
  1581                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 46:     if(( ((void*)0) == _pin_config ) || (_pin_co
      +                          nfig->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
  1582   00036C  5051               	movf	gpio_pin_init@_pin_config^0,w,c
  1583   00036E  1052               	iorwf	(gpio_pin_init@_pin_config+1)^0,w,c
  1584   000370  B4D8               	btfsc	status,2,c
  1585   000372  EFBD  F001         	goto	u1021
  1586   000376  EFBF  F001         	goto	u1020
  1587   00037A                     u1021:
  1588   00037A  EFDF  F001         	goto	l1784
  1589   00037E                     u1020:
  1590   00037E  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1591   000382  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1592   000386  30DF               	rrcf	223,w,c
  1593   000388  32E8               	rrcf	wreg,f,c
  1594   00038A  32E8               	rrcf	wreg,f,c
  1595   00038C  0B07               	andlw	7
  1596   00038E  6E53               	movwf	??_gpio_pin_init^0,c
  1597   000390  0E08               	movlw	8
  1598   000392  6053               	cpfslt	??_gpio_pin_init^0,c
  1599   000394  EFCE  F001         	goto	u1031
  1600   000398  EFD0  F001         	goto	u1030
  1601   00039C                     u1031:
  1602   00039C  EFDF  F001         	goto	l1784
  1603   0003A0                     u1030:
  1604   0003A0  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1605   0003A4  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1606   0003A8  50DF               	movf	223,w,c
  1607   0003AA  0B07               	andlw	7
  1608   0003AC  6E53               	movwf	??_gpio_pin_init^0,c
  1609   0003AE  0E04               	movlw	4
  1610   0003B0  6453               	cpfsgt	??_gpio_pin_init^0,c
  1611   0003B2  EFDD  F001         	goto	u1041
  1612   0003B6  EFDF  F001         	goto	u1040
  1613   0003BA                     u1041:
  1614   0003BA  EF44  F002         	goto	l1792
  1615   0003BE                     u1040:
  1616   0003BE                     l1784:
  1617                           
  1618                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 47:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 48:    
      +                               ret_value = (Std_ReturnType)0x00 ;
  1619   0003BE  0E00               	movlw	0
  1620   0003C0  6E59               	movwf	gpio_pin_init@ret_value^0,c
  1621                           
  1622                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 49:     }
  1623   0003C2  EF74  F002         	goto	l1796
  1624   0003C6                     l1786:
  1625                           
  1626                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 54:                  (*tris_regs[_pin_config->Port] 
      +                          &= ~(1 << _pin_config->Pin));
  1627   0003C6  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1628   0003CA  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1629   0003CE  30DF               	rrcf	223,w,c
  1630   0003D0  32E8               	rrcf	wreg,f,c
  1631   0003D2  32E8               	rrcf	wreg,f,c
  1632   0003D4  0B07               	andlw	7
  1633   0003D6  6E53               	movwf	??_gpio_pin_init^0,c
  1634   0003D8  0E01               	movlw	1
  1635   0003DA  6E54               	movwf	(??_gpio_pin_init+1)^0,c
  1636   0003DC  2A53               	incf	??_gpio_pin_init^0,f,c
  1637   0003DE  EFF3  F001         	goto	u1054
  1638   0003E2                     u1055:
  1639   0003E2  90D8               	bcf	status,0,c
  1640   0003E4  3654               	rlcf	(??_gpio_pin_init+1)^0,f,c
  1641   0003E6                     u1054:
  1642   0003E6  2E53               	decfsz	??_gpio_pin_init^0,f,c
  1643   0003E8  EFF1  F001         	goto	u1055
  1644   0003EC  5054               	movf	(??_gpio_pin_init+1)^0,w,c
  1645   0003EE  0AFF               	xorlw	255
  1646   0003F0  6E55               	movwf	(??_gpio_pin_init+2)^0,c
  1647   0003F2  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1648   0003F6  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1649   0003FA  50DF               	movf	223,w,c
  1650   0003FC  0B07               	andlw	7
  1651   0003FE  6E56               	movwf	(??_gpio_pin_init+3)^0,c
  1652   000400  5056               	movf	(??_gpio_pin_init+3)^0,w,c
  1653   000402  0D02               	mullw	2
  1654   000404  0E15               	movlw	low _tris_regs
  1655   000406  24F3               	addwf	243,w,c
  1656   000408  6ED9               	movwf	fsr2l,c
  1657   00040A  0E00               	movlw	high _tris_regs
  1658   00040C  20F4               	addwfc	prodh,w,c
  1659   00040E  6EDA               	movwf	fsr2h,c
  1660   000410  CFDE F057          	movff	postinc2,??_gpio_pin_init+4
  1661   000414  CFDD F058          	movff	postdec2,??_gpio_pin_init+5
  1662   000418  C057  FFD9         	movff	??_gpio_pin_init+4,fsr2l
  1663   00041C  C058  FFDA         	movff	??_gpio_pin_init+5,fsr2h
  1664   000420  5055               	movf	(??_gpio_pin_init+2)^0,w,c
  1665   000422  16DF               	andwf	indf2,f,c
  1666                           
  1667                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 55:                  break;
  1668   000424  EF65  F002         	goto	l1794
  1669   000428                     l1788:
  1670                           
  1671                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 58:                  (*tris_regs[_pin_config->Port] 
      +                          |= (1 << _pin_config->Pin));
  1672   000428  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1673   00042C  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1674   000430  30DF               	rrcf	223,w,c
  1675   000432  32E8               	rrcf	wreg,f,c
  1676   000434  32E8               	rrcf	wreg,f,c
  1677   000436  0B07               	andlw	7
  1678   000438  6E53               	movwf	??_gpio_pin_init^0,c
  1679   00043A  0E01               	movlw	1
  1680   00043C  6E54               	movwf	(??_gpio_pin_init+1)^0,c
  1681   00043E  2A53               	incf	??_gpio_pin_init^0,f,c
  1682   000440  EF24  F002         	goto	u1064
  1683   000444                     u1065:
  1684   000444  90D8               	bcf	status,0,c
  1685   000446  3654               	rlcf	(??_gpio_pin_init+1)^0,f,c
  1686   000448                     u1064:
  1687   000448  2E53               	decfsz	??_gpio_pin_init^0,f,c
  1688   00044A  EF22  F002         	goto	u1065
  1689   00044E  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1690   000452  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1691   000456  50DF               	movf	223,w,c
  1692   000458  0B07               	andlw	7
  1693   00045A  6E55               	movwf	(??_gpio_pin_init+2)^0,c
  1694   00045C  5055               	movf	(??_gpio_pin_init+2)^0,w,c
  1695   00045E  0D02               	mullw	2
  1696   000460  0E15               	movlw	low _tris_regs
  1697   000462  24F3               	addwf	243,w,c
  1698   000464  6ED9               	movwf	fsr2l,c
  1699   000466  0E00               	movlw	high _tris_regs
  1700   000468  20F4               	addwfc	prodh,w,c
  1701   00046A  6EDA               	movwf	fsr2h,c
  1702   00046C  CFDE F056          	movff	postinc2,??_gpio_pin_init+3
  1703   000470  CFDD F057          	movff	postdec2,??_gpio_pin_init+4
  1704   000474  C056  FFD9         	movff	??_gpio_pin_init+3,fsr2l
  1705   000478  C057  FFDA         	movff	??_gpio_pin_init+4,fsr2h
  1706   00047C  5054               	movf	(??_gpio_pin_init+1)^0,w,c
  1707   00047E  12DF               	iorwf	indf2,f,c
  1708                           
  1709                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 59:                  break;
  1710   000480  EF65  F002         	goto	l1794
  1711   000484                     l1790:
  1712                           
  1713                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 62:           }
  1714   000484  EF65  F002         	goto	l1794
  1715   000488                     l1792:
  1716   000488  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1717   00048C  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1718   000490  BCDF               	btfsc	indf2,6,c
  1719   000492  EF4D  F002         	goto	u1071
  1720   000496  EF50  F002         	goto	u1070
  1721   00049A                     u1071:
  1722   00049A  0E01               	movlw	1
  1723   00049C  EF51  F002         	goto	u1080
  1724   0004A0                     u1070:
  1725   0004A0  0E00               	movlw	0
  1726   0004A2                     u1080:
  1727   0004A2  6E53               	movwf	??_gpio_pin_init^0,c
  1728   0004A4  6A54               	clrf	(??_gpio_pin_init+1)^0,c
  1729                           
  1730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1731                           ; Switch size 1, requested type "simple"
  1732                           ; Number of cases is 1, Range of values is 0 to 0
  1733                           ; switch strategies available:
  1734                           ; Name         Instructions Cycles
  1735                           ; simple_byte            4     3 (average)
  1736                           ;	Chosen strategy is simple_byte
  1737   0004A6  5054               	movf	(??_gpio_pin_init+1)^0,w,c
  1738   0004A8  0A00               	xorlw	0	; case 0
  1739   0004AA  B4D8               	btfsc	status,2,c
  1740   0004AC  EF5A  F002         	goto	l2210
  1741   0004B0  EF42  F002         	goto	l1790
  1742   0004B4                     l2210:
  1743                           
  1744                           ; Switch size 1, requested type "simple"
  1745                           ; Number of cases is 2, Range of values is 0 to 1
  1746                           ; switch strategies available:
  1747                           ; Name         Instructions Cycles
  1748                           ; simple_byte            7     4 (average)
  1749                           ;	Chosen strategy is simple_byte
  1750   0004B4  5053               	movf	??_gpio_pin_init^0,w,c
  1751   0004B6  0A00               	xorlw	0	; case 0
  1752   0004B8  B4D8               	btfsc	status,2,c
  1753   0004BA  EFE3  F001         	goto	l1786
  1754   0004BE  0A01               	xorlw	1	; case 1
  1755   0004C0  B4D8               	btfsc	status,2,c
  1756   0004C2  EF14  F002         	goto	l1788
  1757   0004C6  EF42  F002         	goto	l1790
  1758   0004CA                     l1794:
  1759                           
  1760                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 63:         ret_value = gpio_pin_write_logic(_pin_co
      +                          nfig,_pin_config->Logic);
  1761   0004CA  C051  F047         	movff	gpio_pin_init@_pin_config,gpio_pin_write_logic@_pin_config
  1762   0004CE  C052  F048         	movff	gpio_pin_init@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  1763   0004D2  C051  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  1764   0004D6  C052  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  1765   0004DA  0E00               	movlw	0
  1766   0004DC  BEDF               	btfsc	indf2,7,c
  1767   0004DE  0E01               	movlw	1
  1768   0004E0  6E49               	movwf	gpio_pin_write_logic@logic^0,c
  1769   0004E2  EC76  F002         	call	_gpio_pin_write_logic	;wreg free
  1770   0004E6  6E59               	movwf	gpio_pin_init@ret_value^0,c
  1771   0004E8                     l1796:
  1772                           
  1773                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 66:     return ret_value;
  1774   0004E8  5059               	movf	gpio_pin_init@ret_value^0,w,c
  1775   0004EA  0012               	return		;funcret
  1776   0004EC                     __end_of_gpio_pin_init:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function _gpio_pin_write_logic *****************
  1780 ;; Defined at:
  1781 ;;		line 85 in file "MCAL_Layer/GPIO_Module/hal_gpio.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  _pin_config     2    2[COMRAM] PTR const struct .
  1784 ;;		 -> int1_obj(5), int0_obj(5), 
  1785 ;;  logic           1    4[COMRAM] enum E2965
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  ret_value       1   11[COMRAM] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1797 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;Total ram usage:       10 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 3
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_gpio_pin_init
  1808 ;;		_seven_segment_write_number
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text7
  1813   0004EC                     __ptext7:
  1814                           	callstack 0
  1815   0004EC                     _gpio_pin_write_logic:
  1816                           	callstack 25
  1817   0004EC                     
  1818                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 87:      Std_ReturnType ret_value =(Std_ReturnType)0
      +                          x01 ;
  1819   0004EC  0E01               	movlw	1
  1820   0004EE  6E50               	movwf	gpio_pin_write_logic@ret_value^0,c
  1821   0004F0                     
  1822                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 89:     if(( ((void*)0) == _pin_config ) || (_pin_co
      +                          nfig->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
  1823   0004F0  5047               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1824   0004F2  1048               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  1825   0004F4  B4D8               	btfsc	status,2,c
  1826   0004F6  EF7F  F002         	goto	u971
  1827   0004FA  EF81  F002         	goto	u970
  1828   0004FE                     u971:
  1829   0004FE  EFA1  F002         	goto	l1758
  1830   000502                     u970:
  1831   000502  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1832   000506  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1833   00050A  30DF               	rrcf	223,w,c
  1834   00050C  32E8               	rrcf	wreg,f,c
  1835   00050E  32E8               	rrcf	wreg,f,c
  1836   000510  0B07               	andlw	7
  1837   000512  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1838   000514  0E08               	movlw	8
  1839   000516  604A               	cpfslt	??_gpio_pin_write_logic^0,c
  1840   000518  EF90  F002         	goto	u981
  1841   00051C  EF92  F002         	goto	u980
  1842   000520                     u981:
  1843   000520  EFA1  F002         	goto	l1758
  1844   000524                     u980:
  1845   000524  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1846   000528  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1847   00052C  50DF               	movf	223,w,c
  1848   00052E  0B07               	andlw	7
  1849   000530  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1850   000532  0E04               	movlw	4
  1851   000534  644A               	cpfsgt	??_gpio_pin_write_logic^0,c
  1852   000536  EF9F  F002         	goto	u991
  1853   00053A  EFA1  F002         	goto	u990
  1854   00053E                     u991:
  1855   00053E  EF04  F003         	goto	l1766
  1856   000542                     u990:
  1857   000542                     l1758:
  1858                           
  1859                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 90:     {;MCAL_Layer/GPIO_Module/hal_gpio.c: 91:    
      +                               ret_value = (Std_ReturnType)0x00 ;
  1860   000542  0E00               	movlw	0
  1861   000544  6E50               	movwf	gpio_pin_write_logic@ret_value^0,c
  1862                           
  1863                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 92:     }
  1864   000546  EF19  F003         	goto	l1768
  1865   00054A                     l1760:
  1866                           
  1867                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 97:                  (*lat_regs[_pin_config->Port] &
      +                          = ~(1 << _pin_config->Pin));
  1868   00054A  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1869   00054E  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1870   000552  30DF               	rrcf	223,w,c
  1871   000554  32E8               	rrcf	wreg,f,c
  1872   000556  32E8               	rrcf	wreg,f,c
  1873   000558  0B07               	andlw	7
  1874   00055A  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1875   00055C  0E01               	movlw	1
  1876   00055E  6E4B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1877   000560  2A4A               	incf	??_gpio_pin_write_logic^0,f,c
  1878   000562  EFB5  F002         	goto	u1004
  1879   000566                     u1005:
  1880   000566  90D8               	bcf	status,0,c
  1881   000568  364B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1882   00056A                     u1004:
  1883   00056A  2E4A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1884   00056C  EFB3  F002         	goto	u1005
  1885   000570  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1886   000572  0AFF               	xorlw	255
  1887   000574  6E4C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1888   000576  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1889   00057A  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1890   00057E  50DF               	movf	223,w,c
  1891   000580  0B07               	andlw	7
  1892   000582  6E4D               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1893   000584  504D               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1894   000586  0D02               	mullw	2
  1895   000588  0E0B               	movlw	low _lat_regs
  1896   00058A  24F3               	addwf	243,w,c
  1897   00058C  6ED9               	movwf	fsr2l,c
  1898   00058E  0E00               	movlw	high _lat_regs
  1899   000590  20F4               	addwfc	prodh,w,c
  1900   000592  6EDA               	movwf	fsr2h,c
  1901   000594  CFDE F04E          	movff	postinc2,??_gpio_pin_write_logic+4
  1902   000598  CFDD F04F          	movff	postdec2,??_gpio_pin_write_logic+5
  1903   00059C  C04E  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1904   0005A0  C04F  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1905   0005A4  504C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1906   0005A6  16DF               	andwf	indf2,f,c
  1907                           
  1908                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 99:                  break;
  1909   0005A8  EF19  F003         	goto	l1768
  1910   0005AC                     l1762:
  1911                           
  1912                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 102:                  (*lat_regs[_pin_config->Port] 
      +                          |= (1 << _pin_config->Pin));
  1913   0005AC  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1914   0005B0  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1915   0005B4  30DF               	rrcf	223,w,c
  1916   0005B6  32E8               	rrcf	wreg,f,c
  1917   0005B8  32E8               	rrcf	wreg,f,c
  1918   0005BA  0B07               	andlw	7
  1919   0005BC  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1920   0005BE  0E01               	movlw	1
  1921   0005C0  6E4B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1922   0005C2  2A4A               	incf	??_gpio_pin_write_logic^0,f,c
  1923   0005C4  EFE6  F002         	goto	u1014
  1924   0005C8                     u1015:
  1925   0005C8  90D8               	bcf	status,0,c
  1926   0005CA  364B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1927   0005CC                     u1014:
  1928   0005CC  2E4A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1929   0005CE  EFE4  F002         	goto	u1015
  1930   0005D2  C047  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1931   0005D6  C048  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1932   0005DA  50DF               	movf	223,w,c
  1933   0005DC  0B07               	andlw	7
  1934   0005DE  6E4C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1935   0005E0  504C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1936   0005E2  0D02               	mullw	2
  1937   0005E4  0E0B               	movlw	low _lat_regs
  1938   0005E6  24F3               	addwf	243,w,c
  1939   0005E8  6ED9               	movwf	fsr2l,c
  1940   0005EA  0E00               	movlw	high _lat_regs
  1941   0005EC  20F4               	addwfc	prodh,w,c
  1942   0005EE  6EDA               	movwf	fsr2h,c
  1943   0005F0  CFDE F04D          	movff	postinc2,??_gpio_pin_write_logic+3
  1944   0005F4  CFDD F04E          	movff	postdec2,??_gpio_pin_write_logic+4
  1945   0005F8  C04D  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1946   0005FC  C04E  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1947   000600  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1948   000602  12DF               	iorwf	indf2,f,c
  1949                           
  1950                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 104:                  break;
  1951   000604  EF19  F003         	goto	l1768
  1952   000608                     l1766:
  1953   000608  5049               	movf	gpio_pin_write_logic@logic^0,w,c
  1954   00060A  6E4A               	movwf	??_gpio_pin_write_logic^0,c
  1955   00060C  6A4B               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1956                           
  1957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1958                           ; Switch size 1, requested type "simple"
  1959                           ; Number of cases is 1, Range of values is 0 to 0
  1960                           ; switch strategies available:
  1961                           ; Name         Instructions Cycles
  1962                           ; simple_byte            4     3 (average)
  1963                           ;	Chosen strategy is simple_byte
  1964   00060E  504B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1965   000610  0A00               	xorlw	0	; case 0
  1966   000612  B4D8               	btfsc	status,2,c
  1967   000614  EF0E  F003         	goto	l2212
  1968   000618  EFA1  F002         	goto	l1758
  1969   00061C                     l2212:
  1970                           
  1971                           ; Switch size 1, requested type "simple"
  1972                           ; Number of cases is 2, Range of values is 0 to 1
  1973                           ; switch strategies available:
  1974                           ; Name         Instructions Cycles
  1975                           ; simple_byte            7     4 (average)
  1976                           ;	Chosen strategy is simple_byte
  1977   00061C  504A               	movf	??_gpio_pin_write_logic^0,w,c
  1978   00061E  0A00               	xorlw	0	; case 0
  1979   000620  B4D8               	btfsc	status,2,c
  1980   000622  EFA5  F002         	goto	l1760
  1981   000626  0A01               	xorlw	1	; case 1
  1982   000628  B4D8               	btfsc	status,2,c
  1983   00062A  EFD6  F002         	goto	l1762
  1984   00062E  EFA1  F002         	goto	l1758
  1985   000632                     l1768:
  1986                           
  1987                           ;MCAL_Layer/GPIO_Module/hal_gpio.c: 110:     return ret_value;
  1988   000632  5050               	movf	gpio_pin_write_logic@ret_value^0,w,c
  1989   000634  0012               	return		;funcret
  1990   000636                     __end_of_gpio_pin_write_logic:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _INT2_SetInterruptHandler *****************
  1994 ;; Defined at:
  1995 ;;		line 309 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1998 ;;		 -> ContinuePause_ISR(1), StopWatchReset_ISR(1), 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  ret_value       1    0        unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      unsigned char 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        2 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 3
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_Interrupt_INTx_Enable
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text8
  2025   000B66                     __ptext8:
  2026                           	callstack 0
  2027   000B66                     _INT2_SetInterruptHandler:
  2028                           	callstack 26
  2029   000B66                     
  2030                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 311:     if(((void*)0) == InterruptHand
      +                          ler){
  2031   000B66  5047               	movf	INT2_SetInterruptHandler@InterruptHandler^0,w,c
  2032   000B68  1048               	iorwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2033   000B6A  A4D8               	btfss	status,2,c
  2034   000B6C  EFBA  F005         	goto	u1181
  2035   000B70  EFBC  F005         	goto	u1180
  2036   000B74                     u1181:
  2037   000B74  EFBE  F005         	goto	l1878
  2038   000B78                     u1180:
  2039   000B78                     
  2040                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 313:     }
  2041   000B78  EFC2  F005         	goto	l279
  2042   000B7C                     l1878:
  2043                           
  2044                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 315:         INT2_InterruptHandler = In
      +                          terruptHandler ;
  2045   000B7C  C047  F039         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2046   000B80  C048  F03A         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2047   000B84                     l279:
  2048   000B84  0012               	return		;funcret
  2049   000B86                     __end_of_INT2_SetInterruptHandler:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _INT1_SetInterruptHandler *****************
  2053 ;; Defined at:
  2054 ;;		line 297 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2057 ;;		 -> ContinuePause_ISR(1), StopWatchReset_ISR(1), 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  ret_value       1    0        unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      unsigned char 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;Total ram usage:        2 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 3
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_Interrupt_INTx_Enable
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text9
  2084   000B86                     __ptext9:
  2085                           	callstack 0
  2086   000B86                     _INT1_SetInterruptHandler:
  2087                           	callstack 26
  2088   000B86                     
  2089                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 299:     if(((void*)0) == InterruptHand
      +                          ler){
  2090   000B86  5047               	movf	INT1_SetInterruptHandler@InterruptHandler^0,w,c
  2091   000B88  1048               	iorwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2092   000B8A  A4D8               	btfss	status,2,c
  2093   000B8C  EFCA  F005         	goto	u1171
  2094   000B90  EFCC  F005         	goto	u1170
  2095   000B94                     u1171:
  2096   000B94  EFCE  F005         	goto	l1866
  2097   000B98                     u1170:
  2098   000B98                     
  2099                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 301:     }
  2100   000B98  EFD2  F005         	goto	l274
  2101   000B9C                     l1866:
  2102                           
  2103                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 303:         INT1_InterruptHandler = In
      +                          terruptHandler ;
  2104   000B9C  C047  F03B         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2105   000BA0  C048  F03C         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2106   000BA4                     l274:
  2107   000BA4  0012               	return		;funcret
  2108   000BA6                     __end_of_INT1_SetInterruptHandler:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _INT0_SetInterruptHandler *****************
  2112 ;; Defined at:
  2113 ;;		line 285 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2116 ;;		 -> ContinuePause_ISR(1), StopWatchReset_ISR(1), 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  ret_value       1    0        unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      unsigned char 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;Total ram usage:        2 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 3
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_Interrupt_INTx_Enable
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text10
  2143   000BA6                     __ptext10:
  2144                           	callstack 0
  2145   000BA6                     _INT0_SetInterruptHandler:
  2146                           	callstack 26
  2147   000BA6                     
  2148                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 287:     if(((void*)0) == InterruptHand
      +                          ler){
  2149   000BA6  5047               	movf	INT0_SetInterruptHandler@InterruptHandler^0,w,c
  2150   000BA8  1048               	iorwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,w,c
  2151   000BAA  A4D8               	btfss	status,2,c
  2152   000BAC  EFDA  F005         	goto	u1161
  2153   000BB0  EFDC  F005         	goto	u1160
  2154   000BB4                     u1161:
  2155   000BB4  EFDE  F005         	goto	l1854
  2156   000BB8                     u1160:
  2157   000BB8                     
  2158                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 289:     }
  2159   000BB8  EFE2  F005         	goto	l269
  2160   000BBC                     l1854:
  2161                           
  2162                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 291:         INT0_InterruptHandler = In
      +                          terruptHandler ;
  2163   000BBC  C047  F03D         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2164   000BC0  C048  F03E         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2165   000BC4                     l269:
  2166   000BC4  0012               	return		;funcret
  2167   000BC6                     __end_of_INT0_SetInterruptHandler:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _Edge_Config *****************
  2171 ;; Defined at:
  2172 ;;		line 176 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  object          2    2[COMRAM] PTR const struct .
  2175 ;;		 -> int1_obj(5), int0_obj(5), 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  ret_value       1    0        unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      unsigned char 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;Total ram usage:        4 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 3
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_Interrupt_INTx_Enable
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text11
  2202   000636                     __ptext11:
  2203                           	callstack 0
  2204   000636                     _Edge_Config:
  2205                           	callstack 26
  2206   000636                     
  2207                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 178:     if(((void*)0) == object)
  2208   000636  5047               	movf	Edge_Config@object^0,w,c
  2209   000638  1048               	iorwf	(Edge_Config@object+1)^0,w,c
  2210   00063A  A4D8               	btfss	status,2,c
  2211   00063C  EF22  F003         	goto	u1091
  2212   000640  EF24  F003         	goto	u1090
  2213   000644                     u1091:
  2214   000644  EF8C  F003         	goto	l1842
  2215   000648                     u1090:
  2216   000648                     l1808:
  2217                           
  2218                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 181:     }
  2219   000648  EFAE  F003         	goto	l264
  2220   00064C                     l1810:
  2221                           
  2222                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 186:                     if( object->ed
      +                          ge == INTERRUPT_FALLING_EDGE ) { (INTCON2bits.INTEDG0=0); }
  2223   00064C  EE20 F003          	lfsr	2,3
  2224   000650  5047               	movf	Edge_Config@object^0,w,c
  2225   000652  26D9               	addwf	fsr2l,f,c
  2226   000654  5048               	movf	(Edge_Config@object+1)^0,w,c
  2227   000656  22DA               	addwfc	fsr2h,f,c
  2228   000658  50DF               	movf	indf2,w,c
  2229   00065A  A4D8               	btfss	status,2,c
  2230   00065C  EF32  F003         	goto	u1101
  2231   000660  EF34  F003         	goto	u1100
  2232   000664                     u1101:
  2233   000664  EF37  F003         	goto	l1814
  2234   000668                     u1100:
  2235   000668  9CF1               	bcf	241,6,c	;volatile
  2236   00066A  EF46  F003         	goto	l1818
  2237   00066E                     l1814:
  2238   00066E  EE20 F003          	lfsr	2,3
  2239   000672  5047               	movf	Edge_Config@object^0,w,c
  2240   000674  26D9               	addwf	fsr2l,f,c
  2241   000676  5048               	movf	(Edge_Config@object+1)^0,w,c
  2242   000678  22DA               	addwfc	fsr2h,f,c
  2243   00067A  04DE               	decf	postinc2,w,c
  2244   00067C  A4D8               	btfss	status,2,c
  2245   00067E  EF43  F003         	goto	u1111
  2246   000682  EF45  F003         	goto	u1110
  2247   000686                     u1111:
  2248   000686  EF46  F003         	goto	l1818
  2249   00068A                     u1110:
  2250   00068A  8CF1               	bsf	241,6,c	;volatile
  2251   00068C                     l1818:
  2252                           
  2253                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 190:                     break;
  2254   00068C  EFAE  F003         	goto	l264
  2255   000690                     l1820:
  2256                           
  2257                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 192:                     if(object->edg
      +                          e == INTERRUPT_FALLING_EDGE) { (INTCON2bits.INTEDG1=0); }
  2258   000690  EE20 F003          	lfsr	2,3
  2259   000694  5047               	movf	Edge_Config@object^0,w,c
  2260   000696  26D9               	addwf	fsr2l,f,c
  2261   000698  5048               	movf	(Edge_Config@object+1)^0,w,c
  2262   00069A  22DA               	addwfc	fsr2h,f,c
  2263   00069C  50DF               	movf	indf2,w,c
  2264   00069E  A4D8               	btfss	status,2,c
  2265   0006A0  EF54  F003         	goto	u1121
  2266   0006A4  EF56  F003         	goto	u1120
  2267   0006A8                     u1121:
  2268   0006A8  EF59  F003         	goto	l1824
  2269   0006AC                     u1120:
  2270   0006AC  9AF1               	bcf	241,5,c	;volatile
  2271   0006AE  EF46  F003         	goto	l1818
  2272   0006B2                     l1824:
  2273   0006B2  EE20 F003          	lfsr	2,3
  2274   0006B6  5047               	movf	Edge_Config@object^0,w,c
  2275   0006B8  26D9               	addwf	fsr2l,f,c
  2276   0006BA  5048               	movf	(Edge_Config@object+1)^0,w,c
  2277   0006BC  22DA               	addwfc	fsr2h,f,c
  2278   0006BE  04DE               	decf	postinc2,w,c
  2279   0006C0  A4D8               	btfss	status,2,c
  2280   0006C2  EF65  F003         	goto	u1131
  2281   0006C6  EF67  F003         	goto	u1130
  2282   0006CA                     u1131:
  2283   0006CA  EF46  F003         	goto	l1818
  2284   0006CE                     u1130:
  2285   0006CE  8AF1               	bsf	241,5,c	;volatile
  2286   0006D0  EF46  F003         	goto	l1818
  2287   0006D4                     l1830:
  2288                           
  2289                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 198:                     if(object->edg
      +                          e == INTERRUPT_FALLING_EDGE) { (INTCON2bits.INTEDG2=0); }
  2290   0006D4  EE20 F003          	lfsr	2,3
  2291   0006D8  5047               	movf	Edge_Config@object^0,w,c
  2292   0006DA  26D9               	addwf	fsr2l,f,c
  2293   0006DC  5048               	movf	(Edge_Config@object+1)^0,w,c
  2294   0006DE  22DA               	addwfc	fsr2h,f,c
  2295   0006E0  50DF               	movf	indf2,w,c
  2296   0006E2  A4D8               	btfss	status,2,c
  2297   0006E4  EF76  F003         	goto	u1141
  2298   0006E8  EF78  F003         	goto	u1140
  2299   0006EC                     u1141:
  2300   0006EC  EF7B  F003         	goto	l1834
  2301   0006F0                     u1140:
  2302   0006F0  98F1               	bcf	241,4,c	;volatile
  2303   0006F2  EF46  F003         	goto	l1818
  2304   0006F6                     l1834:
  2305   0006F6  EE20 F003          	lfsr	2,3
  2306   0006FA  5047               	movf	Edge_Config@object^0,w,c
  2307   0006FC  26D9               	addwf	fsr2l,f,c
  2308   0006FE  5048               	movf	(Edge_Config@object+1)^0,w,c
  2309   000700  22DA               	addwfc	fsr2h,f,c
  2310   000702  04DE               	decf	postinc2,w,c
  2311   000704  A4D8               	btfss	status,2,c
  2312   000706  EF87  F003         	goto	u1151
  2313   00070A  EF89  F003         	goto	u1150
  2314   00070E                     u1151:
  2315   00070E  EF46  F003         	goto	l1818
  2316   000712                     u1150:
  2317   000712  88F1               	bsf	241,4,c	;volatile
  2318   000714  EF46  F003         	goto	l1818
  2319   000718                     l1842:
  2320   000718  EE20 F002          	lfsr	2,2
  2321   00071C  5047               	movf	Edge_Config@object^0,w,c
  2322   00071E  26D9               	addwf	fsr2l,f,c
  2323   000720  5048               	movf	(Edge_Config@object+1)^0,w,c
  2324   000722  22DA               	addwfc	fsr2h,f,c
  2325   000724  30DF               	rrcf	223,w,c
  2326   000726  32E8               	rrcf	wreg,f,c
  2327   000728  32E8               	rrcf	wreg,f,c
  2328   00072A  0B07               	andlw	7
  2329   00072C  6E49               	movwf	??_Edge_Config^0,c
  2330   00072E  6A4A               	clrf	(??_Edge_Config+1)^0,c
  2331                           
  2332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2333                           ; Switch size 1, requested type "simple"
  2334                           ; Number of cases is 1, Range of values is 0 to 0
  2335                           ; switch strategies available:
  2336                           ; Name         Instructions Cycles
  2337                           ; simple_byte            4     3 (average)
  2338                           ;	Chosen strategy is simple_byte
  2339   000730  504A               	movf	(??_Edge_Config+1)^0,w,c
  2340   000732  0A00               	xorlw	0	; case 0
  2341   000734  B4D8               	btfsc	status,2,c
  2342   000736  EF9F  F003         	goto	l2214
  2343   00073A  EF24  F003         	goto	l1808
  2344   00073E                     l2214:
  2345                           
  2346                           ; Switch size 1, requested type "simple"
  2347                           ; Number of cases is 3, Range of values is 0 to 2
  2348                           ; switch strategies available:
  2349                           ; Name         Instructions Cycles
  2350                           ; simple_byte           10     6 (average)
  2351                           ;	Chosen strategy is simple_byte
  2352   00073E  5049               	movf	??_Edge_Config^0,w,c
  2353   000740  0A00               	xorlw	0	; case 0
  2354   000742  B4D8               	btfsc	status,2,c
  2355   000744  EF26  F003         	goto	l1810
  2356   000748  0A01               	xorlw	1	; case 1
  2357   00074A  B4D8               	btfsc	status,2,c
  2358   00074C  EF48  F003         	goto	l1820
  2359   000750  0A03               	xorlw	3	; case 2
  2360   000752  B4D8               	btfsc	status,2,c
  2361   000754  EF6A  F003         	goto	l1830
  2362   000758  EF24  F003         	goto	l1808
  2363   00075C                     l264:
  2364   00075C  0012               	return		;funcret
  2365   00075E                     __end_of_Edge_Config:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _InterruptManager *****************
  2369 ;; Defined at:
  2370 ;;		line 27 in file "MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;Total ram usage:        2 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 2
  2391 ;; This function calls:
  2392 ;;		_INT0_ISR
  2393 ;;		_INT1_ISR
  2394 ;; This function is called by:
  2395 ;;		Interrupt level 2
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	intcode
  2400   000008                     __pintcode:
  2401                           	callstack 0
  2402   000008                     _InterruptManager:
  2403                           	callstack 25
  2404                           
  2405                           ;incstack = 0
  2406   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2407   00000A  EDE6  F004         	call	int_func,f	;refresh shadow registers
  2408                           
  2409                           	psect	intcode_body
  2410   0009CC                     __pintcode_body:
  2411                           	callstack 25
  2412   0009CC                     int_func:
  2413                           	callstack 25
  2414   0009CC  0006               	pop		; remove dummy address from shadow register refresh
  2415   0009CE  CFFA F045          	movff	pclath,??_InterruptManager
  2416   0009D2  CFFB F046          	movff	pclatu,??_InterruptManager+1
  2417   0009D6                     
  2418                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 28:     if((1 == INTCONbits.INT0IE )&& (
      +                          1 == INTCONbits.INT0IF))
  2419   0009D6  A8F2               	btfss	242,4,c	;volatile
  2420   0009D8  EFF0  F004         	goto	i2u86_41
  2421   0009DC  EFF2  F004         	goto	i2u86_40
  2422   0009E0                     i2u86_41:
  2423   0009E0  EFFB  F004         	goto	i2l341
  2424   0009E4                     i2u86_40:
  2425   0009E4  A2F2               	btfss	242,1,c	;volatile
  2426   0009E6  EFF7  F004         	goto	i2u87_41
  2427   0009EA  EFF9  F004         	goto	i2u87_40
  2428   0009EE                     i2u87_41:
  2429   0009EE  EFFB  F004         	goto	i2l341
  2430   0009F2                     i2u87_40:
  2431   0009F2                     
  2432                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 29:     {;MCAL_Layer/INTERRUPT/mcal_inte
      +                          rrupt_manager.c: 30:         INT0_ISR();
  2433   0009F2  EC87  F005         	call	_INT0_ISR	;wreg free
  2434   0009F6                     i2l341:
  2435                           
  2436                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 34:     if((1 == INTCON3bits.INT1IE )&& 
      +                          (1 == INTCON3bits.INT1IF))
  2437   0009F6  A6F0               	btfss	240,3,c	;volatile
  2438   0009F8  EF00  F005         	goto	i2u88_41
  2439   0009FC  EF02  F005         	goto	i2u88_40
  2440   000A00                     i2u88_41:
  2441   000A00  EF0B  F005         	goto	i2l344
  2442   000A04                     i2u88_40:
  2443   000A04  A0F0               	btfss	240,0,c	;volatile
  2444   000A06  EF07  F005         	goto	i2u89_41
  2445   000A0A  EF09  F005         	goto	i2u89_40
  2446   000A0E                     i2u89_41:
  2447   000A0E  EF0B  F005         	goto	i2l344
  2448   000A12                     i2u89_40:
  2449   000A12                     
  2450                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 35:     {;MCAL_Layer/INTERRUPT/mcal_inte
      +                          rrupt_manager.c: 36:         INT1_ISR();
  2451   000A12  EC6F  F005         	call	_INT1_ISR	;wreg free
  2452   000A16                     i2l344:
  2453   000A16  C046  FFFB         	movff	??_InterruptManager+1,pclatu
  2454   000A1A  C045  FFFA         	movff	??_InterruptManager,pclath
  2455   000A1E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2456   000A20  0011               	retfie		f
  2457   000A22                     __end_of_InterruptManager:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _INT1_ISR *****************
  2461 ;; Defined at:
  2462 ;;		line 330 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 1
  2483 ;; This function calls:
  2484 ;;		Absolute function
  2485 ;;		_ContinuePause_ISR
  2486 ;;		_StopWatchReset_ISR
  2487 ;; This function is called by:
  2488 ;;		_InterruptManager
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text13
  2493   000ADE                     __ptext13:
  2494                           	callstack 0
  2495   000ADE                     _INT1_ISR:
  2496                           	callstack 25
  2497   000ADE                     
  2498                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 331:     (INTCON3bits.INT1IF=0);
  2499   000ADE  90F0               	bcf	240,0,c	;volatile
  2500   000AE0                     
  2501                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 332:     if(INT1_InterruptHandler)
  2502   000AE0  503B               	movf	_INT1_InterruptHandler^0,w,c
  2503   000AE2  103C               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  2504   000AE4  B4D8               	btfsc	status,2,c
  2505   000AE6  EF77  F005         	goto	i2u29_41
  2506   000AEA  EF79  F005         	goto	i2u29_40
  2507   000AEE                     i2u29_41:
  2508   000AEE  EF86  F005         	goto	i2l287
  2509   000AF2                     i2u29_40:
  2510   000AF2                     
  2511                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 333:     {;MCAL_Layer/INTERRUPT/mcal_ex
      +                          ternal_interrupt.c: 334:         INT1_InterruptHandler();
  2512   000AF2  D802               	call	i2u30_48
  2513   000AF4  EF86  F005         	goto	i2u30_49
  2514   000AF8                     i2u30_48:
  2515   000AF8  0005               	push	
  2516   000AFA  6EFA               	movwf	pclath,c
  2517   000AFC  503B               	movf	_INT1_InterruptHandler^0,w,c
  2518   000AFE  6EFD               	movwf	tosl,c
  2519   000B00  503C               	movf	(_INT1_InterruptHandler+1)^0,w,c
  2520   000B02  6EFE               	movwf	tosh,c
  2521   000B04  50F8               	movf	tblptru,w,c
  2522   000B06  6EFF               	movwf	tosu,c
  2523   000B08  50FA               	movf	pclath,w,c
  2524   000B0A  0012               	return		;indir
  2525   000B0C                     i2u30_49:
  2526   000B0C                     i2l287:
  2527   000B0C  0012               	return		;funcret
  2528   000B0E                     __end_of_INT1_ISR:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _INT0_ISR *****************
  2532 ;; Defined at:
  2533 ;;		line 321 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 1
  2554 ;; This function calls:
  2555 ;;		Absolute function
  2556 ;;		_ContinuePause_ISR
  2557 ;;		_StopWatchReset_ISR
  2558 ;; This function is called by:
  2559 ;;		_InterruptManager
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text14
  2564   000B0E                     __ptext14:
  2565                           	callstack 0
  2566   000B0E                     _INT0_ISR:
  2567                           	callstack 25
  2568   000B0E                     
  2569                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 322:     (INTCONbits.INT0IF=0);
  2570   000B0E  92F2               	bcf	242,1,c	;volatile
  2571   000B10                     
  2572                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 324:     if(INT0_InterruptHandler)
  2573   000B10  503D               	movf	_INT0_InterruptHandler^0,w,c
  2574   000B12  103E               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  2575   000B14  B4D8               	btfsc	status,2,c
  2576   000B16  EF8F  F005         	goto	i2u27_41
  2577   000B1A  EF91  F005         	goto	i2u27_40
  2578   000B1E                     i2u27_41:
  2579   000B1E  EF9E  F005         	goto	i2l283
  2580   000B22                     i2u27_40:
  2581   000B22                     
  2582                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 325:     {;MCAL_Layer/INTERRUPT/mcal_ex
      +                          ternal_interrupt.c: 326:         INT0_InterruptHandler();
  2583   000B22  D802               	call	i2u28_48
  2584   000B24  EF9E  F005         	goto	i2u28_49
  2585   000B28                     i2u28_48:
  2586   000B28  0005               	push	
  2587   000B2A  6EFA               	movwf	pclath,c
  2588   000B2C  503D               	movf	_INT0_InterruptHandler^0,w,c
  2589   000B2E  6EFD               	movwf	tosl,c
  2590   000B30  503E               	movf	(_INT0_InterruptHandler+1)^0,w,c
  2591   000B32  6EFE               	movwf	tosh,c
  2592   000B34  50F8               	movf	tblptru,w,c
  2593   000B36  6EFF               	movwf	tosu,c
  2594   000B38  50FA               	movf	pclath,w,c
  2595   000B3A  0012               	return		;indir
  2596   000B3C                     i2u28_49:
  2597   000B3C                     i2l283:
  2598   000B3C  0012               	return		;funcret
  2599   000B3E                     __end_of_INT0_ISR:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _ContinuePause_ISR *****************
  2603 ;; Defined at:
  2604 ;;		line 29 in file "appliction.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_INT0_ISR
  2628 ;;		_INT1_ISR
  2629 ;;		_INT2_ISR
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text15
  2634   000BC6                     __ptext15:
  2635                           	callstack 0
  2636   000BC6                     _ContinuePause_ISR:
  2637                           	callstack 25
  2638   000BC6                     
  2639                           ;appliction.c: 31:     if(0==watchFlag){
  2640   000BC6  503F               	movf	_watchFlag^0,w,c
  2641   000BC8  A4D8               	btfss	status,2,c
  2642   000BCA  EFE9  F005         	goto	i2u23_41
  2643   000BCE  EFEB  F005         	goto	i2u23_40
  2644   000BD2                     i2u23_41:
  2645   000BD2  EFEF  F005         	goto	i2l1210
  2646   000BD6                     i2u23_40:
  2647   000BD6                     
  2648                           ;appliction.c: 32:         watchFlag=1;
  2649   000BD6  0E01               	movlw	1
  2650   000BD8  6E3F               	movwf	_watchFlag^0,c
  2651                           
  2652                           ;appliction.c: 33:     }
  2653   000BDA  EFF1  F005         	goto	i2l372
  2654   000BDE                     i2l1210:
  2655                           
  2656                           ;appliction.c: 35:     {;appliction.c: 36:        watchFlag = 0;
  2657   000BDE  0E00               	movlw	0
  2658   000BE0  6E3F               	movwf	_watchFlag^0,c
  2659   000BE2                     i2l372:
  2660   000BE2  0012               	return		;funcret
  2661   000BE4                     __end_of_ContinuePause_ISR:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _StopWatchReset_ISR *****************
  2665 ;; Defined at:
  2666 ;;		line 21 in file "appliction.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;Total ram usage:        0 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_INT0_ISR
  2690 ;;		_INT1_ISR
  2691 ;;		_INT2_ISR
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text16
  2696   000BE4                     __ptext16:
  2697                           	callstack 0
  2698   000BE4                     _StopWatchReset_ISR:
  2699                           	callstack 25
  2700   000BE4                     
  2701                           ;appliction.c: 22:     miniSeconds = 0;
  2702   000BE4  0E00               	movlw	0
  2703   000BE6  6E43               	movwf	_miniSeconds^0,c
  2704                           
  2705                           ;appliction.c: 23:     seconds = 0;
  2706   000BE8  0E00               	movlw	0
  2707   000BEA  6E42               	movwf	_seconds^0,c
  2708                           
  2709                           ;appliction.c: 24:     minutes =0;
  2710   000BEC  0E00               	movlw	0
  2711   000BEE  6E41               	movwf	_minutes^0,c
  2712                           
  2713                           ;appliction.c: 25:     counter=0;
  2714   000BF0  0E00               	movlw	0
  2715   000BF2  6E40               	movwf	_counter^0,c
  2716                           
  2717                           ;appliction.c: 26:     watchFlag=0;
  2718   000BF4  0E00               	movlw	0
  2719   000BF6  6E3F               	movwf	_watchFlag^0,c
  2720   000BF8  0012               	return		;funcret
  2721   000BFA                     __end_of_StopWatchReset_ISR:
  2722                           	callstack 0
  2723   000000                     
  2724                           	psect	text17
  2725   000000                     __ptext17:
  2726                           	callstack 0
  2727   000000                     
  2728                           	psect	rparam
  2729   000000                     
  2730                           	psect	temp
  2731   00005F                     btemp:
  2732                           	callstack 0
  2733   00005F                     	ds	1
  2734   000000                     int$flags	set	btemp
  2735   000000                     wtemp8	set	btemp+1
  2736   000000                     ttemp5	set	btemp+1
  2737   000000                     ttemp6	set	btemp+4
  2738   000000                     ttemp7	set	btemp+8
  2739                           
  2740                           	psect	idloc
  2741                           
  2742                           ;Config register IDLOC0 @ 0x200000
  2743                           ;	unspecified, using default values
  2744   200000                     	org	2097152
  2745   200000  FF                 	db	255
  2746                           
  2747                           ;Config register IDLOC1 @ 0x200001
  2748                           ;	unspecified, using default values
  2749   200001                     	org	2097153
  2750   200001  FF                 	db	255
  2751                           
  2752                           ;Config register IDLOC2 @ 0x200002
  2753                           ;	unspecified, using default values
  2754   200002                     	org	2097154
  2755   200002  FF                 	db	255
  2756                           
  2757                           ;Config register IDLOC3 @ 0x200003
  2758                           ;	unspecified, using default values
  2759   200003                     	org	2097155
  2760   200003  FF                 	db	255
  2761                           
  2762                           ;Config register IDLOC4 @ 0x200004
  2763                           ;	unspecified, using default values
  2764   200004                     	org	2097156
  2765   200004  FF                 	db	255
  2766                           
  2767                           ;Config register IDLOC5 @ 0x200005
  2768                           ;	unspecified, using default values
  2769   200005                     	org	2097157
  2770   200005  FF                 	db	255
  2771                           
  2772                           ;Config register IDLOC6 @ 0x200006
  2773                           ;	unspecified, using default values
  2774   200006                     	org	2097158
  2775   200006  FF                 	db	255
  2776                           
  2777                           ;Config register IDLOC7 @ 0x200007
  2778                           ;	unspecified, using default values
  2779   200007                     	org	2097159
  2780   200007  FF                 	db	255
  2781                           
  2782                           	psect	config
  2783                           
  2784                           ; Padding undefined space
  2785   300000                     	org	3145728
  2786   300000  FF                 	db	255
  2787                           
  2788                           ;Config register CONFIG1H @ 0x300001
  2789                           ;	Oscillator Selection bits
  2790                           ;	OSC = HS, HS oscillator
  2791                           ;	Fail-Safe Clock Monitor Enable bit
  2792                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2793                           ;	Internal/External Oscillator Switchover bit
  2794                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2795   300001                     	org	3145729
  2796   300001  02                 	db	2
  2797                           
  2798                           ;Config register CONFIG2L @ 0x300002
  2799                           ;	Power-up Timer Enable bit
  2800                           ;	PWRT = OFF, PWRT disabled
  2801                           ;	Brown-out Reset Enable bits
  2802                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2803                           ;	Brown Out Reset Voltage bits
  2804                           ;	BORV = 1, 
  2805   300002                     	org	3145730
  2806   300002  09                 	db	9
  2807                           
  2808                           ;Config register CONFIG2H @ 0x300003
  2809                           ;	Watchdog Timer Enable bit
  2810                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2811                           ;	Watchdog Timer Postscale Select bits
  2812                           ;	WDTPS = 32768, 1:32768
  2813   300003                     	org	3145731
  2814   300003  1E                 	db	30
  2815                           
  2816                           ; Padding undefined space
  2817   300004                     	org	3145732
  2818   300004  FF                 	db	255
  2819                           
  2820                           ;Config register CONFIG3H @ 0x300005
  2821                           ;	CCP2 MUX bit
  2822                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2823                           ;	PORTB A/D Enable bit
  2824                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2825                           ;	Low-Power Timer1 Oscillator Enable bit
  2826                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2827                           ;	MCLR Pin Enable bit
  2828                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2829   300005                     	org	3145733
  2830   300005  81                 	db	129
  2831                           
  2832                           ;Config register CONFIG4L @ 0x300006
  2833                           ;	Stack Full/Underflow Reset Enable bit
  2834                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2835                           ;	Single-Supply ICSP Enable bit
  2836                           ;	LVP = OFF, Single-Supply ICSP disabled
  2837                           ;	Extended Instruction Set Enable bit
  2838                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2839                           ;	Background Debugger Enable bit
  2840                           ;	DEBUG = 0x1, unprogrammed default
  2841   300006                     	org	3145734
  2842   300006  81                 	db	129
  2843                           
  2844                           ; Padding undefined space
  2845   300007                     	org	3145735
  2846   300007  FF                 	db	255
  2847                           
  2848                           ;Config register CONFIG5L @ 0x300008
  2849                           ;	Code Protection bit
  2850                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2851                           ;	Code Protection bit
  2852                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2853                           ;	Code Protection bit
  2854                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2855                           ;	Code Protection bit
  2856                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2857   300008                     	org	3145736
  2858   300008  0F                 	db	15
  2859                           
  2860                           ;Config register CONFIG5H @ 0x300009
  2861                           ;	Boot Block Code Protection bit
  2862                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2863                           ;	Data EEPROM Code Protection bit
  2864                           ;	CPD = OFF, Data EEPROM not code-protected
  2865   300009                     	org	3145737
  2866   300009  C0                 	db	192
  2867                           
  2868                           ;Config register CONFIG6L @ 0x30000A
  2869                           ;	Write Protection bit
  2870                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2871                           ;	Write Protection bit
  2872                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2873                           ;	Write Protection bit
  2874                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2875                           ;	Write Protection bit
  2876                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2877   30000A                     	org	3145738
  2878   30000A  0F                 	db	15
  2879                           
  2880                           ;Config register CONFIG6H @ 0x30000B
  2881                           ;	Configuration Register Write Protection bit
  2882                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2883                           ;	Boot Block Write Protection bit
  2884                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2885                           ;	Data EEPROM Write Protection bit
  2886                           ;	WRTD = OFF, Data EEPROM not write-protected
  2887   30000B                     	org	3145739
  2888   30000B  E0                 	db	224
  2889                           
  2890                           ;Config register CONFIG7L @ 0x30000C
  2891                           ;	Table Read Protection bit
  2892                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2893                           ;	Table Read Protection bit
  2894                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2895                           ;	Table Read Protection bit
  2896                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2897                           ;	Table Read Protection bit
  2898                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2899   30000C                     	org	3145740
  2900   30000C  0F                 	db	15
  2901                           
  2902                           ;Config register CONFIG7H @ 0x30000D
  2903                           ;	Boot Block Table Read Protection bit
  2904                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2905   30000D                     	org	3145741
  2906   30000D  40                 	db	64
  2907                           tosu	equ	0xFFF
  2908                           tosh	equ	0xFFE
  2909                           tosl	equ	0xFFD
  2910                           stkptr	equ	0xFFC
  2911                           pclatu	equ	0xFFB
  2912                           pclath	equ	0xFFA
  2913                           pcl	equ	0xFF9
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           indf0	equ	0xFEF
  2921                           postinc0	equ	0xFEE
  2922                           postdec0	equ	0xFED
  2923                           preinc0	equ	0xFEC
  2924                           plusw0	equ	0xFEB
  2925                           fsr0h	equ	0xFEA
  2926                           fsr0l	equ	0xFE9
  2927                           wreg	equ	0xFE8
  2928                           indf1	equ	0xFE7
  2929                           postinc1	equ	0xFE6
  2930                           postdec1	equ	0xFE5
  2931                           preinc1	equ	0xFE4
  2932                           plusw1	equ	0xFE3
  2933                           fsr1h	equ	0xFE2
  2934                           fsr1l	equ	0xFE1
  2935                           bsr	equ	0xFE0
  2936                           indf2	equ	0xFDF
  2937                           postinc2	equ	0xFDE
  2938                           postdec2	equ	0xFDD
  2939                           preinc2	equ	0xFDC
  2940                           plusw2	equ	0xFDB
  2941                           fsr2h	equ	0xFDA
  2942                           fsr2l	equ	0xFD9
  2943                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     26      94
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    int1_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    int0_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    Edge_Config@object.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    Edge_Config@object	PTR const struct . size(2) Largest target is 5
		 -> int1_obj(COMRAM[5]), int0_obj(COMRAM[5]), 

    RB7_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S371$EXT_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@object.EXT_InterruptHandlerLow	PTR FTN()void  size(2) Largest target is 0

    S371$EXT_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@object.EXT_InterruptHandlerHigh	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@object.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    S242$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    Interrupt_INTx_Enable@object.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ContinuePause_ISR(), StopWatchReset_ISR(), 

    Interrupt_INTx_Enable@object	PTR const struct . size(2) Largest target is 5
		 -> int1_obj(COMRAM[5]), int0_obj(COMRAM[5]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> int1_obj(COMRAM[5]), int0_obj(COMRAM[5]), 

    gpio_pin_init@_pin_config	PTR const struct . size(2) Largest target is 5
		 -> int1_obj(COMRAM[5]), int0_obj(COMRAM[5]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISB(BITBIGSFRhll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_Interrupt_INTx_Enable
    _gpio_port_write_logic->___awdiv
    _Interrupt_INTx_Enable->_gpio_pin_init
    _gpio_pin_init->_gpio_pin_write_logic

Critical Paths under _InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7465
                                             25 COMRAM     1     1      0
              _Interrupt_INTx_Enable
                            ___awdiv
                            ___awmod
                     _gpio_port_init
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1    1898
                                             10 COMRAM     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _gpio_port_init                                       5     4      1     242
                                              2 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1208
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Interrupt_INTx_Enable                                5     3      2    2905
                                             21 COMRAM     4     2      2
                        _Edge_Config
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
                      _gpio_pin_init
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_init                                        9     7      2    1739
                                             12 COMRAM     9     7      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                10     7      3     961
                                              2 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _INT2_SetInterruptHandler                             3     1      2     129
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     1      2     129
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INT0_SetInterruptHandler                             3     1      2     129
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Edge_Config                                          5     3      2     416
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                   Absolute function *
                  _ContinuePause_ISR *
                 _StopWatchReset_ISR *
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
                   Absolute function *
                  _ContinuePause_ISR *
                 _StopWatchReset_ISR *
 ---------------------------------------------------------------------------------
 (6) _StopWatchReset_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ContinuePause_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_INTx_Enable
     _Edge_Config
     _INT0_SetInterruptHandler
     _INT1_SetInterruptHandler
     _INT2_SetInterruptHandler
     _gpio_pin_init
       _gpio_pin_write_logic
   ___awdiv
   ___awmod
   _gpio_port_init
   _gpio_port_write_logic
     ___awdiv (ARG)
     ___awmod (ARG)

 _InterruptManager (ROOT)
   _INT0_ISR
     Absolute function(Fake) *
     _ContinuePause_ISR *
     _StopWatchReset_ISR *
   _INT1_ISR
     Absolute function(Fake) *
     _ContinuePause_ISR *
     _StopWatchReset_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1A      5E       1       74.6%
BITBIGSFRhll        59      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      26        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Apr 06 01:09:35 2023

                      ??_InterruptManager 0045                              ___awdiv@sign 004C  
                                     l102 04EA                                       l121 0634  
                                     l210 07B6                                       l211 07E4  
                                     l140 0A66                                       l213 0856  
                                     l208 0788                                       l152 0AA2  
                                     l264 075C                                       l274 0BA4  
                                     l269 0BC4                                       l279 0B84  
                                     l641 09CA                                       l628 091A  
                                     u970 0502                                       u971 04FE  
                                     u980 0524                                       u981 0520  
                                     u990 0542                                       u991 053E  
              ??_INT0_SetInterruptHandler 0049                                       _ret 0044  
                            ___awmod@sign 004C                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
                                    l2000 092E                                      l2010 0962  
                                    l2002 0936                                      l2020 099E  
                                    l2012 096A                                      l2004 093A  
                                    l2022 09A4                                      l2014 0972  
                                    l2006 0948                                      l2110 0056  
                                    l2016 0980                                      l2024 09AA  
                                    l2008 0950                                      l2120 00E8  
                                    l2112 007C                                      l2104 0012  
                                    l2210 04B4                                      l2026 09BA  
                                    l2018 0996                                      l2130 0164  
                                    l2122 00F8                                      l2114 008C  
                                    l2106 0042                                      l2212 061C  
                                    l2028 09C2                                      l2140 01BA  
                                    l2132 016E                                      l2124 0102  
                                    l2116 0096                                      l2214 073E  
                                    l2150 0208                                      l2142 01BE  
                                    l2134 018A                                      l2126 011E  
                                    l2118 00B2                                      l2208 0838  
                                    l2160 027E                                      l2152 0212  
                                    l2128 0154                                      l2136 019A  
                                    l2170 0306                                      l2162 029A  
                                    l2154 022E                                      l2146 01D2  
                                    l2138 01AA                                      l2180 0332  
                                    l2172 0316                                      l2164 02D0  
                                    l2156 0264                                      l2148 01F8  
                                    l2190 0360                                      l2182 0336  
                                    l2166 02E0                                      l2158 0274  
                                    l2184 0348                                      l2168 02EA  
                                    l2176 031C                                      l1810 064C  
                                    l2186 034A                                      l2178 0330  
                                    l1820 0690                                      l1812 0668  
                                    l1804 0636                                      l1900 0A7A  
                                    l2188 034E                                      l1830 06D4  
                                    l1822 06AC                                      l1814 066E  
                                    l1806 0636                                      l1750 04EC  
                                    l1910 0770                                      l1902 0A7E  
                                    l1832 06F0                                      l1824 06B2  
                                    l1816 068A                                      l1808 0648  
                                    l1760 054A                                      l1752 04F0  
                                    l1920 07B0                                      l1912 0774  
                                    l1834 06F6                                      l1826 06CE  
                                    l1818 068C                                      l1842 0718  
                                    l1850 0BA6                                      l1762 05AC  
                                    l1754 0502                                      l1930 07DE  
                                    l1922 07B2                                      l1914 078C  
                                    l1906 075E                                      l1836 0712  
                                    l1852 0BB8                                      l1860 0B86  
                                    l1756 0524                                      l1780 037E  
                                    l1940 080C                                      l1924 07BA  
                                    l1916 07AC                                      l1908 075E  
                                    l1854 0BBC                                      l1862 0B86  
                                    l1766 0608                                      l1758 0542  
                                    l1790 0484                                      l1782 03A0  
                                    l1934 07E8                                      l1926 07C6  
                                    l1918 07AE                                      l1856 0BC4  
                                    l1848 0BA6                                      l1864 0B98  
                                    l1880 0B84                                      l1872 0B66  
                                    l1768 0632                                      l1792 0488  
                                    l1784 03BE                                      l1776 036C  
                                    l1936 07F4                                      l1928 07C8  
                                    l1960 0876                                      l1952 0858  
                                    l1866 0B9C                                      l1874 0B66  
                                    l1794 04CA                                      l1786 03C6  
                                    l1778 036C                                      l1938 07F6  
                                    l1946 0812                                      l1970 08AA  
                                    l1962 0884                                      l1954 085C  
                                    l1890 0A40                                      l1868 0BA4  
                                    l1876 0B78                                      l1788 0428  
                                    l1796 04E8                                      l1980 08E4  
                                    l1972 08B2                                      l1964 088C  
                                    l1956 086A                                      l1892 0A64  
                                    l1884 0A24                                      l1878 0B7C  
                                    l1990 090A                                      l1982 08EC  
                                    l1974 08BA                                      l1966 0890  
                                    l1958 0872                                      l1886 0A28  
                                    l1992 0912                                      l1984 08EE  
                                    l1976 08C8                                      l1968 0898  
                                    l1888 0A38                                      l1896 0A6A  
                                    l1986 08F4                                      l1978 08CE  
                                    l1898 0A6A                                      l1988 08FA  
                                    l1996 091C                                      l1998 0920  
                                    u1100 0668                                      u1004 056A  
                                    u1020 037E                                      u1101 0664  
                                    u1005 0566                                      u1021 037A  
                                    u1110 068A                                      u1014 05CC  
                                    u1030 03A0                                      u1111 0686  
                                    u1015 05C8                                      u1031 039C  
                                    u1120 06AC                                      u1040 03BE  
                                    u1200 0A7A                                      u1121 06A8  
                                    u1041 03BA                                      u1201 0A76  
                                    u1130 06CE                                      u1210 0770  
                                    u1131 06CA                                      u1211 076C  
                                    u1140 06F0                                      u1220 086A  
                                    u1300 0962                                      u1141 06EC  
                                    u1221 0866                                      u1301 095E  
                                    u1150 0712                                      u1070 04A0  
                                    u1054 03E6                                      u1230 0884  
                                    u1310 0980                                      u1151 070E  
                                    u1071 049A                                      u1055 03E2  
                                    u1231 0880                                      u1311 097C  
                                    u1160 0BB8                                      u1080 04A2  
                                    u1064 0448                                      u1240 08AA  
                                    u1320 0996                                      u1400 01AA  
                                    u1161 0BB4                                      u1065 0444  
                                    u1241 08A6                                      u1321 0992  
                                    u1401 01A6                                      u1090 0648  
                                    u1170 0B98                                      u1250 08C8  
                                    u1330 09BA                                      u1410 01BA  
                                    u1091 0644                                      u1171 0B94  
                                    u1251 08C4                                      u1331 09B6  
                                    u1411 01B6                                      u1180 0B78  
                                    u1260 08E4                                      u1420 01CE  
                                    u1181 0B74                                      u1261 08E0  
                                    u1421 01CA                                      _LATA 000F89  
                                    u1270 090A                                      u1190 0A38  
                                    u1430 0330                                      _LATB 000F8A  
                                    u1271 0906                                      u1191 0A34  
                                    u1431 032C                                      _LATC 000F8B  
                                    u1280 092E                                      u1440 0348  
                                    _LATD 000F8C                                      u1281 092A  
                                    u1441 0344                                      _LATE 000F8D  
                                    u1290 0948                                      u1450 0360  
                                    u1291 0944                                      u1451 035C  
                                    u1507 015A                                      u1517 0190  
                                    u1390 0052                                      u1527 01FE  
                                    u1391 004E                                      u1537 0234  
                                    u1547 026A                                      u1467 0082  
                                    u1557 02A0                                      u1477 00B8  
                                    u1567 02D6                                      u1487 00EE  
                                    u1577 030C                                      u1497 0124  
                _RB4_InterruptHandlerHigh 0037                                      _main 0012  
                _RB7_InterruptHandlerHigh 002B                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005F  
               ?_INT2_SetInterruptHandler 0047                                      prodl 000FF3  
                                    start 000E                              ___param_bank 000000  
                             _Edge_Config 0636                     _gpio_port_write_logic 0A68  
                    _gpio_pin_write_logic 04EC                          __end_of_INT0_ISR 0B3E  
                        __end_of_INT1_ISR 0B0E                                     ?_main 0045  
                         __end_of___awdiv 091C                           __end_of___awmod 09CC  
                         ___awdiv@divisor 0049                                     i2l341 09F6  
                                   i2l344 0A16                                     i2l283 0B3C  
                                   i2l372 0BE2                                     i2l367 0BF8  
                                   i2l287 0B0C                           ___awdiv@counter 004B  
                                   _PORTA 000F80                                     _PORTB 000F81  
                                   _PORTC 000F82                                     _PORTD 000F83  
                                   _PORTE 000F84                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                _INT1_SetInterruptHandler 0B86                                     pclath 000FFA  
                                   pclatu 000FFB                                     tablat 000FF5  
                                   ttemp5 0060                                     ttemp6 0063  
                                   ttemp7 0067                                     status 000FD8  
                                   wtemp8 0060                     fp__StopWatchReset_ISR 0000  
                         __initialization 0AA4                              __end_of_main 036C  
                   ?_gpio_pin_write_logic 0047                                    ??_main 005E  
                           __activetblptr 000002                          ___awdiv@dividend 0047  
                                  i2l1210 0BDE                                    i2l1204 0BE4  
                                  i2l1206 0BC6                                    i2l1208 0BD6  
                                  i2l1280 0B0E                                    i2l1282 0B10  
                                  i2l1290 0AF2                                    i2l1284 0B22  
                                  i2l1286 0ADE                                    i2l1288 0AE0  
                                  i2l1640 09F2                                    i2l1642 0A04  
                                  i2l1644 0A12                                    i2l1636 09D6  
                                  i2l1638 09E4                 gpio_port_write_logic@port 0052  
                 _RB6_InterruptHandlerLow 002D                    ?_gpio_port_write_logic 004F  
                               ??___awdiv 004B                                 ??___awmod 004B  
                           _gpio_pin_init 036C                                    clear_0 0ACA  
                        ___awdiv@quotient 004D                           ___awmod@divisor 0049  
                                  isa$std 000001                           ___awmod@counter 004B  
           __end_of_Interrupt_INTx_Enable 0858                              __pdataCOMRAM 0001  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8  INT2_SetInterruptHandler@InterruptHandler 0047  
INT1_SetInterruptHandler@InterruptHandler 0047  INT0_SetInterruptHandler@InterruptHandler 0047  
                              __accesstop 0080                   __end_of__initialization 0AD0  
                               ?_INT0_ISR 0045                                 ?_INT1_ISR 0045  
                           ___rparam_used 000001                    ??_gpio_pin_write_logic 004A  
                          __pcstackCOMRAM 0045                        _StopWatchReset_ISR 0BE4  
                          ?_gpio_pin_init 0051                       ?_StopWatchReset_ISR 0045  
        __end_of_INT2_SetInterruptHandler 0B86                     _INT0_InterruptHandler 003D  
                    ??_StopWatchReset_ISR 0045                                ??_INT0_ISR 0045  
                              ??_INT1_ISR 0045                              ?_Edge_Config 0047  
              ??_INT1_SetInterruptHandler 0049                                   i2u23_40 0BD6  
                                 i2u30_48 0AF8                                   i2u23_41 0BD2  
                                 i2u30_49 0B0C                                   i2u27_40 0B22  
                                 i2u27_41 0B1E                                   i2u28_48 0B28  
                                 i2u29_40 0AF2                                   i2u28_49 0B3C  
                                 i2u29_41 0AEE                                   i2u86_40 09E4  
                                 i2u86_41 09E0                                   i2u87_40 09F2  
                                 i2u87_41 09EE                                   i2u88_40 0A04  
                                 i2u88_41 0A00                                   i2u89_40 0A12  
                                 i2u89_41 0A0E                  _RB6_InterruptHandlerHigh 002F  
               ?_INT0_SetInterruptHandler 0047                                   __Hparam 0000  
                                 __Lparam 0000                           ??_gpio_pin_init 0053  
                                 ___awdiv 0858                                   ___awmod 091C  
                                 __pcinit 0AA4                                   __ramtop 1000  
                       gpio_port_init@dir 0047                                   __ptext0 0012  
                                 __ptext1 0A68                                   __ptext2 0A22  
                                 __ptext3 091C                                   __ptext4 0858  
                                 __ptext5 075E                                   __ptext6 036C  
                                 __ptext7 04EC                                   __ptext8 0B66  
                                 __ptext9 0B86                                   _counter 0040  
                        ___awmod@dividend 0047                                   _minutes 0041  
                                 _seconds 0042                            __pintcode_body 09CC  
                    end_of_initialization 0AD0                            _gpio_port_init 0A22  
                _INT2_SetInterruptHandler 0B66                             __Lmediumconst 0000  
                                 int_func 09CC                   ??_gpio_port_write_logic 0050  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                  gpio_pin_init@ret_value 0059                     _INT1_InterruptHandler 003B  
                        _InterruptManager 0008                         _ContinuePause_ISR 0BC6  
                  __end_of_gpio_port_init 0A68                        ?_ContinuePause_ISR 0045  
                     ??_ContinuePause_ISR 0045                   _RB4_InterruptHandlerLow 0035  
                 _RB7_InterruptHandlerLow 0029                             __pidataCOMRAM 0B3E  
               __end_of_ContinuePause_ISR 0BE4                     _Interrupt_INTx_Enable 075E  
                     start_initialization 0AA4                           ?_gpio_port_init 0047  
                             __pbssCOMRAM 0029          __end_of_INT0_SetInterruptHandler 0BC6  
                gpio_pin_init@_pin_config 0051                     _INT2_InterruptHandler 0039  
                               __pintcode 0008           gpio_pin_write_logic@_pin_config 0047  
                                ?___awdiv 0047                                  ?___awmod 0047  
               gpio_pin_write_logic@logic 0049                    ?_Interrupt_INTx_Enable 005A  
              ??_INT2_SetInterruptHandler 0049                         Edge_Config@object 0047  
                _RB5_InterruptHandlerHigh 0033                                  _INT0_ISR 0B0E  
                                _INT1_ISR 0ADE                 ?_INT1_SetInterruptHandler 0047  
                __end_of_InterruptManager 0A22             __end_of_gpio_port_write_logic 0AA4  
                               _watchFlag 003F                     __end_of_gpio_pin_init 04EC  
                 gpio_port_init@ret_value 004A                                 _port_regs 0001  
                               _tris_regs 0015                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 0AB8  
                _INT0_SetInterruptHandler 0BA6               Interrupt_INTx_Enable@object 005A  
                                __Hrparam 0000                                  __Lrparam 0000  
                        ??_gpio_port_init 0048                               _miniSeconds 0043  
                      gpio_port_init@port 004B                                  __ptext10 0BA6  
                                __ptext11 0636                                  __ptext13 0ADE  
                                __ptext14 0B0E                                  __ptext15 0BC6  
           gpio_pin_write_logic@ret_value 0050                                  __ptext16 0BE4  
                                __ptext17 0000                                  _int0_obj 0024  
                                _int1_obj 001F                                  _lat_regs 000B  
                 _RB5_InterruptHandlerLow 0031                                  isa$xinst 000000  
                           ??_Edge_Config 0049                                  int$flags 005F  
                              _INTCONbits 000FF2              __end_of_gpio_pin_write_logic 0636  
                                intlevel2 0000                      fp__ContinuePause_ISR 0000  
                 ??_Interrupt_INTx_Enable 005C                       __end_of_Edge_Config 075E  
        __end_of_INT1_SetInterruptHandler 0BA6                gpio_port_write_logic@logic 004F  
              __end_of_StopWatchReset_ISR 0BFA                         ?_InterruptManager 0045  
