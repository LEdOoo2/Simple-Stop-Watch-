Version 4.0 HI-TECH Software Intermediate Code
"1381 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1603
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1825
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2047
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2269
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"881
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"993
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1105
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1217
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1329
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"53
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"190
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"361
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"536
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"678
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"49 MCAL_Layer/GPIO_Module/hal_gpio.h
[; ;MCAL_Layer/GPIO_Module/hal_gpio.h: 49: typedef struct{
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . Port Pin Direction Logic ]
"34 MCAL_Layer/GPIO_Module/hal_gpio.c
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 34:           }
[c E2969 0 1 .. ]
[n E2969 . OUTPUT INPUT  ]
"63
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 63:         ret_value = gpio_pin_write_logic(_pin_config,_pin_config->Logic);
[c E2965 0 1 .. ]
[n E2965 . LOW HIGH  ]
"78 MCAL_Layer/GPIO_Module/hal_gpio.h
[; ;MCAL_Layer/GPIO_Module/hal_gpio.h: 78: Std_ReturnType gpio_pin_write_logic(const Pin_Config_t *_pin_config , Logic_t logic);
[v _gpio_pin_write_logic `(uc ~T0 @X0 0 ef2`*CS273`E2965 ]
"150 MCAL_Layer/GPIO_Module/hal_gpio.c
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 150: Std_ReturnType gpio_port_init(Port_Index_t port , uint8 dir){
[c E2983 0 1 2 3 4 .. ]
[n E2983 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"55 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"10 MCAL_Layer/GPIO_Module/hal_gpio.c
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 10: volatile uint8 *tris_regs[]={&TRISA,&TRISB,&TRISC,&TRISD,&TRISE};
[v _tris_regs `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_regs
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"11
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 11: volatile uint8 *lat_regs[]={&LATA,&LATB,&LATC,&LATD,&LATE};
[v _lat_regs `*Vuc ~T0 @X0 -> 5 `i e ]
[i _lat_regs
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"12
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 12: volatile uint8 *port_regs[]={&PORTA,&PORTB,&PORTC,&PORTD,&PORTE};
[v _port_regs `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_regs
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"14
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 14: Std_ReturnType gpio_pin_direction_init(const Pin_Config_t *_pin_config){
[v _gpio_pin_direction_init `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_direction_init ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"16
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 16:     Std_ReturnType ret_value =(Std_ReturnType)0x01 ;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"18
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 18:     if(( ((void*)0) == _pin_config ) || (_pin_config->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
[e $ ! || || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i > -> . *U __pin_config 0 `i - -> 5 `i -> 1 `i 275  ]
"19
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 19:     {
{
"20
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 20:         ret_value = (Std_ReturnType)0x00 ;
[e = _ret_value -> -> 0 `i `uc ]
"21
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 21:     }
}
[e $U 276  ]
"22
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 22:     else
[e :U 275 ]
"23
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 23:     {
{
"24
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 24:         switch(_pin_config->Direction){
[e $U 278  ]
{
"25
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 25:              case OUTPUT:
[e :U 279 ]
"26
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 26:                  (*tris_regs[_pin_config->Port] &= ~(1 << _pin_config->Pin));
[e =& *U *U + &U _tris_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_regs `ui `ux -> ~ << -> 1 `i -> . *U __pin_config 1 `i `uc ]
"27
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 27:                  break;
[e $U 277  ]
"29
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 29:              case INPUT:
[e :U 280 ]
"30
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 30:                  (*tris_regs[_pin_config->Port] |= (1 << _pin_config->Pin));
[e =| *U *U + &U _tris_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_regs `ui `ux -> << -> 1 `i -> . *U __pin_config 1 `i `uc ]
"31
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 31:                  break;
[e $U 277  ]
"33
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 33:              default : ret_value = (Std_ReturnType)0x00 ;
[e :U 281 ]
[e = _ret_value -> -> 0 `i `uc ]
"34
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 34:           }
}
[e $U 277  ]
[e :U 278 ]
[e [\ -> . *U __pin_config 2 `i , $ . `E2969 0 279
 , $ . `E2969 1 280
 281 ]
[e :U 277 ]
"35
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 35:      }
}
[e :U 276 ]
"37
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 37:     return ret_value;
[e ) _ret_value ]
[e $UE 274  ]
"39
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 39: }
[e :UE 274 ]
}
"42
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 42: Std_ReturnType gpio_pin_init(const Pin_Config_t *_pin_config){
[v _gpio_pin_init `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_init ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"44
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 44:     Std_ReturnType ret_value =(Std_ReturnType)0x01 ;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"46
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 46:     if(( ((void*)0) == _pin_config ) || (_pin_config->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
[e $ ! || || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i > -> . *U __pin_config 0 `i - -> 5 `i -> 1 `i 283  ]
"47
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 47:     {
{
"48
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 48:         ret_value = (Std_ReturnType)0x00 ;
[e = _ret_value -> -> 0 `i `uc ]
"49
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 49:     }
}
[e $U 284  ]
"50
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 50:     else
[e :U 283 ]
"51
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 51:     {
{
"52
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 52:         switch(_pin_config->Direction){
[e $U 286  ]
{
"53
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 53:              case OUTPUT:
[e :U 287 ]
"54
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 54:                  (*tris_regs[_pin_config->Port] &= ~(1 << _pin_config->Pin));
[e =& *U *U + &U _tris_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_regs `ui `ux -> ~ << -> 1 `i -> . *U __pin_config 1 `i `uc ]
"55
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 55:                  break;
[e $U 285  ]
"57
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 57:              case INPUT:
[e :U 288 ]
"58
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 58:                  (*tris_regs[_pin_config->Port] |= (1 << _pin_config->Pin));
[e =| *U *U + &U _tris_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_regs `ui `ux -> << -> 1 `i -> . *U __pin_config 1 `i `uc ]
"59
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 59:                  break;
[e $U 285  ]
"61
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 61:              default : ret_value = (Std_ReturnType)0x00 ;
[e :U 289 ]
[e = _ret_value -> -> 0 `i `uc ]
"62
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 62:           }
}
[e $U 285  ]
[e :U 286 ]
[e [\ -> . *U __pin_config 2 `i , $ . `E2969 0 287
 , $ . `E2969 1 288
 289 ]
[e :U 285 ]
"63
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 63:         ret_value = gpio_pin_write_logic(_pin_config,_pin_config->Logic);
[e = _ret_value ( _gpio_pin_write_logic (2 , __pin_config -> . *U __pin_config 3 `E2965 ]
"64
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 64:      }
}
[e :U 284 ]
"66
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 66:     return ret_value;
[e ) _ret_value ]
[e $UE 282  ]
"67
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 67: }
[e :UE 282 ]
}
"69
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 69: Std_ReturnType gpio_pin_get_direction_status(const Pin_Config_t *_pin_config ,Direction_t *dir_status){
[v _gpio_pin_get_direction_status `(uc ~T0 @X0 1 ef2`*CS273`*E2969 ]
{
[e :U _gpio_pin_get_direction_status ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _dir_status `*E2969 ~T0 @X0 1 r2 ]
[f ]
"71
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 71:     Std_ReturnType ret_value =(Std_ReturnType)0x01;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"73
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 73:     if(( ((void*)0) == _pin_config ) || (((void*)0) == dir_status) || (_pin_config->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
[e $ ! || || || == -> -> -> 0 `i `*v `*CS273 __pin_config == -> -> -> 0 `i `*v `*E2969 _dir_status > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i > -> . *U __pin_config 0 `i - -> 5 `i -> 1 `i 291  ]
"74
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 74:     {
{
"75
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 75:         ret_value=(Std_ReturnType)0x00 ;
[e = _ret_value -> -> 0 `i `uc ]
"77
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 77:     }
}
[e $U 292  ]
"78
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 78:     else
[e :U 291 ]
"79
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 79:     {
{
"80
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 80:         *dir_status = ((*tris_regs[_pin_config->Port] >> _pin_config->Pin)& 1);
[e = *U _dir_status -> & >> -> *U *U + &U _tris_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_regs `ui `ux `i -> . *U __pin_config 1 `i -> 1 `i `E2969 ]
"81
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 81:     }
}
[e :U 292 ]
"82
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 82:     return ret_value ;
[e ) _ret_value ]
[e $UE 290  ]
"83
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 83: }
[e :UE 290 ]
}
"85
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 85: Std_ReturnType gpio_pin_write_logic(const Pin_Config_t *_pin_config , Logic_t logic){
[v _gpio_pin_write_logic `(uc ~T0 @X0 1 ef2`*CS273`E2965 ]
{
[e :U _gpio_pin_write_logic ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _logic `E2965 ~T0 @X0 1 r2 ]
[f ]
"87
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 87:      Std_ReturnType ret_value =(Std_ReturnType)0x01 ;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"89
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 89:     if(( ((void*)0) == _pin_config ) || (_pin_config->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
[e $ ! || || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i > -> . *U __pin_config 0 `i - -> 5 `i -> 1 `i 294  ]
"90
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 90:     {
{
"91
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 91:         ret_value = (Std_ReturnType)0x00 ;
[e = _ret_value -> -> 0 `i `uc ]
"92
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 92:     }
}
[e $U 295  ]
"93
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 93:     else
[e :U 294 ]
"94
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 94:     {
{
"95
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 95:         switch(logic){
[e $U 297  ]
{
"96
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 96:              case LOW:
[e :U 298 ]
"97
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 97:                  (*lat_regs[_pin_config->Port] &= ~(1 << _pin_config->Pin));
[e =& *U *U + &U _lat_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_regs `ui `ux -> ~ << -> 1 `i -> . *U __pin_config 1 `i `uc ]
"99
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 99:                  break;
[e $U 296  ]
"101
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 101:              case HIGH:
[e :U 299 ]
"102
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 102:                  (*lat_regs[_pin_config->Port] |= (1 << _pin_config->Pin));
[e =| *U *U + &U _lat_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_regs `ui `ux -> << -> 1 `i -> . *U __pin_config 1 `i `uc ]
"104
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 104:                  break;
[e $U 296  ]
"106
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 106:              default : ret_value = (Std_ReturnType)0x00 ;
[e :U 300 ]
[e = _ret_value -> -> 0 `i `uc ]
"107
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 107:           }
}
[e $U 296  ]
[e :U 297 ]
[e [\ -> _logic `ui , $ -> . `E2965 0 `ui 298
 , $ -> . `E2965 1 `ui 299
 300 ]
[e :U 296 ]
"108
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 108:      }
}
[e :U 295 ]
"110
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 110:     return ret_value;
[e ) _ret_value ]
[e $UE 293  ]
"112
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 112: }
[e :UE 293 ]
}
"114
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 114: Std_ReturnType gpio_pin_read_logic(const Pin_Config_t *_pin_config , Logic_t *logic){
[v _gpio_pin_read_logic `(uc ~T0 @X0 1 ef2`*CS273`*E2965 ]
{
[e :U _gpio_pin_read_logic ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _logic `*E2965 ~T0 @X0 1 r2 ]
[f ]
"116
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 116:     Std_ReturnType ret_value =(Std_ReturnType)0x01;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"118
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 118:     if(( ((void*)0) == _pin_config ) || (((void*)0) == logic) || (_pin_config->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
[e $ ! || || || == -> -> -> 0 `i `*v `*CS273 __pin_config == -> -> -> 0 `i `*v `*E2965 _logic > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i > -> . *U __pin_config 0 `i - -> 5 `i -> 1 `i 302  ]
"119
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 119:     {
{
"120
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 120:         ret_value=(Std_ReturnType)0x00 ;
[e = _ret_value -> -> 0 `i `uc ]
"122
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 122:     }
}
[e $U 303  ]
"123
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 123:     else
[e :U 302 ]
"124
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 124:     {
{
"125
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 125:         *logic= ((*port_regs[_pin_config->Port] >> _pin_config->Pin)& 1);
[e = *U _logic -> & >> -> *U *U + &U _port_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _port_regs `ui `ux `i -> . *U __pin_config 1 `i -> 1 `i `E2965 ]
"126
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 126:     }
}
[e :U 303 ]
"127
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 127:     return ret_value ;
[e ) _ret_value ]
[e $UE 301  ]
"129
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 129: }
[e :UE 301 ]
}
"131
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 131: Std_ReturnType gpio_pin_toggle(const Pin_Config_t *_pin_config){
[v _gpio_pin_toggle `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_toggle ]
[v __pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"133
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 133:        Std_ReturnType ret_value =(Std_ReturnType)0x01 ;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"135
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 135:     if(( ((void*)0) == _pin_config ) || (_pin_config->Pin > 8 -1 ) || (_pin_config->Port > 5 -1))
[e $ ! || || == -> -> -> 0 `i `*v `*CS273 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i > -> . *U __pin_config 0 `i - -> 5 `i -> 1 `i 305  ]
"136
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 136:     {
{
"137
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 137:         ret_value = (Std_ReturnType)0x00 ;
[e = _ret_value -> -> 0 `i `uc ]
"138
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 138:     }
}
[e $U 306  ]
"139
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 139:     else
[e :U 305 ]
"140
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 140:     {
{
"141
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 141:         (*lat_regs[_pin_config->Port] ^= (1 << _pin_config->Pin));
[e =^ *U *U + &U _lat_regs * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_regs `ui `ux -> << -> 1 `i -> . *U __pin_config 1 `i `uc ]
"142
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 142:     }
}
[e :U 306 ]
"144
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 144:     return ret_value;
[e ) _ret_value ]
[e $UE 304  ]
"146
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 146: }
[e :UE 304 ]
}
"150
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 150: Std_ReturnType gpio_port_init(Port_Index_t port , uint8 dir){
[v _gpio_port_init `(uc ~T0 @X0 1 ef2`E2983`uc ]
{
[e :U _gpio_port_init ]
[v _port `E2983 ~T0 @X0 1 r1 ]
[v _dir `uc ~T0 @X0 1 r2 ]
[f ]
"152
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 152:     Std_ReturnType ret_value =(Std_ReturnType)0x01;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"154
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 154:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 308  ]
"155
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 155:     {
{
"156
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 156:         ret_value =(Std_ReturnType)0x00;
[e = _ret_value -> -> 0 `i `uc ]
"157
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 157:     }
}
[e $U 309  ]
"158
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 158:     else
[e :U 308 ]
"159
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 159:     {
{
"160
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 160:         *tris_regs[port] = dir ;
[e = *U *U + &U _tris_regs * -> _port `ux -> -> # *U &U _tris_regs `ui `ux _dir ]
"161
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 161:     }
}
[e :U 309 ]
"163
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 163:     return ret_value;
[e ) _ret_value ]
[e $UE 307  ]
"164
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 164: }
[e :UE 307 ]
}
"166
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 166: Std_ReturnType gpio_port_get_direction_status(Port_Index_t port ,uint8 *dir_status){
[v _gpio_port_get_direction_status `(uc ~T0 @X0 1 ef2`E2983`*uc ]
{
[e :U _gpio_port_get_direction_status ]
[v _port `E2983 ~T0 @X0 1 r1 ]
[v _dir_status `*uc ~T0 @X0 1 r2 ]
[f ]
"168
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 168:      Std_ReturnType ret_value =(Std_ReturnType)0x01;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"170
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 170:     if((port > 5 -1) || (((void*)0) == dir_status))
[e $ ! || > -> _port `ui -> - -> 5 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*uc _dir_status 311  ]
"171
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 171:     {
{
"172
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 172:         ret_value =(Std_ReturnType)0x00;
[e = _ret_value -> -> 0 `i `uc ]
"173
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 173:     }
}
[e $U 312  ]
"174
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 174:     else
[e :U 311 ]
"175
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 175:     {
{
"176
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 176:         *dir_status = tris_regs[port] ;
[e = *U _dir_status -> *U + &U _tris_regs * -> _port `ux -> -> # *U &U _tris_regs `ui `ux `uc ]
"177
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 177:     }
}
[e :U 312 ]
"179
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 179:     return ret_value;
[e ) _ret_value ]
[e $UE 310  ]
"181
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 181: }
[e :UE 310 ]
}
"183
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 183: Std_ReturnType gpio_port_write_logic(Port_Index_t port , uint8 logic){
[v _gpio_port_write_logic `(uc ~T0 @X0 1 ef2`E2983`uc ]
{
[e :U _gpio_port_write_logic ]
[v _port `E2983 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
[f ]
"185
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 185:      Std_ReturnType ret_value =(Std_ReturnType)0x01;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"187
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 187:     if(port > 5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 314  ]
"188
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 188:     {
{
"189
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 189:         ret_value =(Std_ReturnType)0x00;
[e = _ret_value -> -> 0 `i `uc ]
"190
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 190:     }
}
[e $U 315  ]
"191
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 191:     else
[e :U 314 ]
"192
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 192:     {
{
"193
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 193:         *lat_regs[port] = logic ;
[e = *U *U + &U _lat_regs * -> _port `ux -> -> # *U &U _lat_regs `ui `ux _logic ]
"194
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 194:     }
}
[e :U 315 ]
"196
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 196:     return ret_value;
[e ) _ret_value ]
[e $UE 313  ]
"197
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 197: }
[e :UE 313 ]
}
"201
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 201: Std_ReturnType gpio_port_read_logic(Port_Index_t port , uint8 *logic){
[v _gpio_port_read_logic `(uc ~T0 @X0 1 ef2`E2983`*uc ]
{
[e :U _gpio_port_read_logic ]
[v _port `E2983 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
[f ]
"203
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 203:      Std_ReturnType ret_value =(Std_ReturnType)0x01;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"205
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 205:     if((port > 5 -1) || (((void*)0) == logic))
[e $ ! || > -> _port `ui -> - -> 5 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*uc _logic 317  ]
"206
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 206:     {
{
"207
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 207:         ret_value =(Std_ReturnType)0x00;
[e = _ret_value -> -> 0 `i `uc ]
"208
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 208:     }
}
[e $U 318  ]
"209
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 209:     else
[e :U 317 ]
"210
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 210:     {
{
"211
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 211:         *logic = lat_regs[port] ;
[e = *U _logic -> *U + &U _lat_regs * -> _port `ux -> -> # *U &U _lat_regs `ui `ux `uc ]
"212
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 212:     }
}
[e :U 318 ]
"214
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 214:     return ret_value;
[e ) _ret_value ]
[e $UE 316  ]
"216
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 216: }
[e :UE 316 ]
}
"218
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 218: Std_ReturnType gpio_port_toggle(Port_Index_t port){
[v _gpio_port_toggle `(uc ~T0 @X0 1 ef1`E2983 ]
{
[e :U _gpio_port_toggle ]
[v _port `E2983 ~T0 @X0 1 r1 ]
[f ]
"220
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 220:      Std_ReturnType ret_value =(Std_ReturnType)0x01;
[v _ret_value `uc ~T0 @X0 1 a ]
[e = _ret_value -> -> 1 `i `uc ]
"222
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 222:     if((port > 5 -1))
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 320  ]
"223
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 223:     {
{
"224
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 224:         ret_value =(Std_ReturnType)0x00;
[e = _ret_value -> -> 0 `i `uc ]
"225
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 225:     }
}
[e $U 321  ]
"226
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 226:     else
[e :U 320 ]
"227
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 227:     {
{
"228
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 228:         *lat_regs[port] ^= 0XFF;
[e =^ *U *U + &U _lat_regs * -> _port `ux -> -> # *U &U _lat_regs `ui `ux -> -> 255 `i `uc ]
"229
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 229:     }
}
[e :U 321 ]
"231
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 231:     return ret_value;
[e ) _ret_value ]
[e $UE 319  ]
"232
[; ;MCAL_Layer/GPIO_Module/hal_gpio.c: 232: }
[e :UE 319 ]
}
